/*----------------------------------------------------------------------------------
	Project Name:
	Smart Application : 카드 기본폼
	Smart Version : Smart 1.0
	Copyright(c) 2014  ValueCMD Co., Ltd.
----------------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------------
	Card Name : SC_BOILCHK
	Card Desc : 안전점검 보일러 점검
	Card Hist :
	20240320 진광언 보일러 제조사 형식 없을 시 입력 필수로 수정 
			  C31.C3CT_GENER_BURNER_CHG 으로 INSERT 진행하고 MAKER_NUM : 50999 로 들어가도록 진행
			추후에 주철민 차장님이 기타 데이터 요청시 50999 값 찾아서 드리면 됨
	 
----------------------------------------------------------------------------------*/
card SC_BOILCHK
{
	#include <include.h>
	#include "globalcard.h"
	#include "SQL.lib"
	#include "Calendar.h"
	
//	#define USE_ON_EXIT
	#define USE_ON_CHAR
//	#define USE_ON_KEY
//	#define USE_ON_DRAW
//	#define USE_ON_TIMER
	#define USE_ON_POINTING
	#define USE_ON_SELECT
	#define USE_ON_UART

	#include "DefEvent.h"
	
	//---------------------------------------------------------------
	// BUTTON ID define
	//---------------------------------------------------------------
	BEGIN_BUTTON_ID()
		// 메인
		DEF_BUTTON_ID ( BID_PREVLST )	 //리스트 이전
		DEF_BUTTON_ID ( BID_NEXTLST )	 //리스트 다음
		DEF_BUTTON_ID ( BID_NODEL )		 //삭제취소
		DEF_BUTTON_ID ( BID_DELETE )	 //삭제
		DEF_BUTTON_ID ( BID_CHANGE )	 //수정
		DEF_BUTTON_ID ( BID_NEW )		 //신규
		DEF_BUTTON_ID ( BID_BOILERSC )	 //점검
		DEF_BUTTON_ID ( BID_COMPLETE )	 //완료
		DEF_BUTTON_ID ( BID_PROD )       //상품
		DEF_BUTTON_ID ( BID_MOVE_PHOTO ) //보일러 사진 화면 전환
		
		// 보일러점검
		DEF_BUTTON_ID ( BID_CHECK1 )	 //점검
		DEF_BUTTON_ID ( BID_CHECK2 )	 //점검
		DEF_BUTTON_ID ( BID_CHECK3 )	 //점검
		DEF_BUTTON_ID ( BID_CHECK4 )	 //점검
		DEF_BUTTON_ID ( BID_ENTRY )		 //등록
		DEF_BUTTON_ID ( BID_CLOSE )
		
		// 보일러 수정
		DEF_BUTTON_ID ( BID_CLOSE2 )	 //닫기
		DEF_BUTTON_ID ( BID_SAVE )		 //저장
		DEF_BUTTON_ID ( BID_SCHDL )		 //날짜
		DEF_BUTTON_ID ( BID_WRITE1 )	 //모델명
		DEF_BUTTON_ID ( BID_WRITE2 )     //제조번호
		DEF_BUTTON_ID ( BID_WRITE3 )     //제조사검색

		
		
		// 보일러 사진
		DEF_BUTTON_ID ( BID_BOIL_PHOTO1 ) //보일러 사진
		DEF_BUTTON_ID ( BID_BOIL_PHOTO2 ) //보일러 연통 사진
		
		// 화면 상단 공통 메뉴 모음
		DEF_BUTTON_ID ( BID_HOME )		 //홈
		DEF_BUTTON_ID ( BID_MENU )		 //메뉴
		DEF_BUTTON_ID ( BID_KEYBOARD )	 //키보드
		DEF_BUTTON_ID ( BID_SCREEN )	 //화면 상하
		DEF_BUTTON_ID ( BID_CMMNWORK )	 //공통업무
		DEF_BUTTON_ID ( BID_PREV )		 //이전
		DEF_BUTTON_ID ( BID_EXIT )		 //종료
	END_BUTTON_ID()
	
	//---------------------------------------------------------------
	// OBJECT ID define
	//---------------------------------------------------------------
	BEGIN_OBJECT_ID()
		
		// 공통
		DEF_OBJECT_ID ( ICON_TITLE )		//타이틀
		
		// 메인
		DEF_OBJECT_ID ( TXT_PAGE )			//페이지
		DEF_OBJECT_ID ( TXT_TITLE )			//타이틀
		DEF_OBJECT_ID ( TXT_OBJNUM )		//기물번호
		DEF_OBJECT_ID ( TXT_BOILER )		//보일러
		DEF_OBJECT_ID ( TXT_MODELNM )		//모델명
		DEF_OBJECT_ID ( TXT_POSSIBLE )		//여부
		DEF_OBJECT_ID ( TXT_MAKECMPN )		//제조사
		DEF_OBJECT_ID ( TXT_MAKENUM )		//제조번호
		DEF_OBJECT_ID ( TXT_FORM )			//형식
		DEF_OBJECT_ID ( TXT_INSDT )			//설치일자
		DEF_OBJECT_ID ( TXT_VOLUME )		//용량
		DEF_OBJECT_ID ( TXT_INSPLACE )		//설치위치
		DEF_OBJECT_ID ( TXT_SUPRVRSLT )		//공급전결과
		DEF_OBJECT_ID ( TXT_GOOBOON )		//구분
		DEF_OBJECT_ID ( TXT_SUPRVSC )		//공급전점검
		DEF_OBJECT_ID ( TXT_BOILERMAN )		//점검자
		DEF_OBJECT_ID ( TXT_BUILDCMPN )		//시공업체
		DEF_OBJECT_ID ( TXT_DATA21 )		//제조사	
		DEF_OBJECT_ID ( TXT_DATA22 )		//제조번호
		DEF_OBJECT_ID ( TXT_DATA23 )		//형식
		DEF_OBJECT_ID ( TXT_DATA24 )		//설치일자
		DEF_OBJECT_ID ( TXT_DATA25 )		//용량1
		DEF_OBJECT_ID ( TXT_DATA26 )		//용량2
		DEF_OBJECT_ID ( TXT_DATA27 )		//설치위치
		DEF_OBJECT_ID ( TXT_DATA28 )		//공급전결과
		DEF_OBJECT_ID ( TXT_DATA29 )		//구분
		DEF_OBJECT_ID ( TXT_DATA30 )		//공급전점검
		DEF_OBJECT_ID ( TXT_DATA31 )		//점검자
		DEF_OBJECT_ID ( TXT_DATA32 )		//시공업체
		
		// 보일러 수정
		DEF_OBJECT_ID ( TXT_DATA1 )			//기물번호
		DEF_OBJECT_ID ( TXT_DATA2 )			//기물번호
		DEF_OBJECT_ID ( TXT_DATA3 )			//종류
		DEF_OBJECT_ID ( TXT_DATA4 )			//제조사명
		DEF_OBJECT_ID ( TXT_DATA5 )			//모델명
		DEF_OBJECT_ID ( TXT_DATA6 )			//용량
		DEF_OBJECT_ID ( TXT_DATA7 )			//설치일
		DEF_OBJECT_ID ( TXT_DATA8 )			//설치일자( 사용안함 )
		DEF_OBJECT_ID ( TXT_DATA9 )			//구분
		DEF_OBJECT_ID ( TXT_DATA10 )		//설치위치
		DEF_OBJECT_ID ( TXT_DATA11 )		//제조번호
		DEF_OBJECT_ID ( TXT_DATA12 )		//형식				
		DEF_OBJECT_ID ( TXT_DATA41 )		//구분
		DEF_OBJECT_ID ( TXT_DATA42 )		//설치일1
		DEF_OBJECT_ID ( TXT_DATA43 )		//설치일2
		DEF_OBJECT_ID ( TXT_DATA44 )		//설치일3
		DEF_OBJECT_ID ( TXT_DATA45 )		//설치일4
		
		// 보일러점검
		DEF_OBJECT_ID ( TXT_DATA33 )		//보일러위치
		DEF_OBJECT_ID ( TXT_DATA34 )		//보일러위치 적/부
		DEF_OBJECT_ID ( TXT_DATA35 )		//급환기구
		DEF_OBJECT_ID ( TXT_DATA36 )		//급환기구 적/부
		DEF_OBJECT_ID ( TXT_DATA37 )		//배기통톱
		DEF_OBJECT_ID ( TXT_DATA38 )		//배기통톱 적/부
		DEF_OBJECT_ID ( TXT_DATA39 )		//기타
		DEF_OBJECT_ID ( TXT_DATA40 )		//기타 적/부
		
		// 보일러사진
		DEF_OBJECT_ID ( TXT_DATA46 )		//보일러 사진
		DEF_OBJECT_ID ( TXT_DATA47 )		//보일러 사진
		DEF_OBJECT_ID ( TXT_DATA48 )		//연통 사진
		DEF_OBJECT_ID ( TXT_DATA49 )		//연통 사진
		DEF_OBJECT_ID ( TXT_DATA50 )		//연통 사진

		
		
		/********************************/
		/* LINE                         */
		/********************************/
		DEF_OBJECT_ID ( LINE_DATA1 )		//LINE_DATA_1
		DEF_OBJECT_ID ( LINE_DATA2 )		//LINE_DATA_2
		DEF_OBJECT_ID ( LINE_DATA3 )		//LINE_DATA_3
		
		/********************************/
		/* 테이블                       */
		/********************************/
		DEF_OBJECT_ID ( ID_TBLLIST )		//테이블
		
		/********************************/
		/* EDIT                         */
		/********************************/
		DEF_OBJECT_ID ( EDT_DATA1 )			//모델명
		DEF_OBJECT_ID ( EDT_DATA2 )			//용량
		DEF_OBJECT_ID ( EDT_DATA4 )			//제조번호
		DEF_OBJECT_ID ( EDT_DATA5 )			//설치일 년
		DEF_OBJECT_ID ( EDT_DATA6 )			//설치일 월
		DEF_OBJECT_ID ( EDT_DATA7 )			//설치일 일
		DEF_OBJECT_ID ( EDT_DATA8 )			//제조사검색
		
		
		/********************************/
		/* COMBO                        */
		/********************************/
		DEF_OBJECT_ID ( CMB_DATA1 ) 					//종류
		DEF_OBJECT_ID ( CMB_DATA2 = CMB_DATA1+3 ) 		//제조사명
		DEF_OBJECT_ID ( CMB_DATA3 = CMB_DATA2+3 ) 		//용량
		DEF_OBJECT_ID ( CMB_DATA4 = CMB_DATA3+3 ) 		//설치위치
		DEF_OBJECT_ID ( CMB_DATA5 = CMB_DATA4+3 ) 		//형식
	END_OBJECT_ID()
	
	//-------------------------------------------------------------------------------------------------	
	//	BOILINFO m_stScBoil Struct / 보일러 관련, 수정된 사항이 없으면 업데이트 안하도록.
	//-------------------------------------------------------------------------------------------------
	typedef struct _BOILINFO
	{
		char BURNER_KIND_NM     [20 +1]; 
		char MAKER_NM         	[60 +1]; 
		char BURNER_MODEL_NM    [50 +1]; 
		char BURNER_CAPA     	[10 +1];
		char BURNER_CAPA_UNIT   [15 +1];  
		char BURNER_INST_YMD    [15 +1];  
		char INST_LOC           [20 +1];
		char MAKE_NUM           [30 +1];
		char BOILER_FORM     	[50 +1]; 
	}	BOILINFO;
	
	BOILINFO m_stScBoil;

	//-------------------------------------------------------------------------------------------------	
	//	Table정의에 관련된 내용들
	//-------------------------------------------------------------------------------------------------
	#define		ROW 	    3						// table의 행개수
	#define		COL 	    5						// table의 열개수
	#define		GRID_H		(CHT+10)				// table 행 높이
	#define		GRID_H_P	(CHT+25)				// table 행 높이 PDA
	#define		GRID_CLR	TRANSPARENT   			// table 클리어 color
	#define		GRID_X		STARTX 			    	// table 시작x좌표
	#define		MAXCHAR		51 			    		// table에 들어갈수 있는 최대  char 길이
	#define		GRID_Y		STARTY+65  	    		// table 시작y좌표
	#define		GRID_Y_P	STARTY-40       		// table 시작y좌표
	#define		GRID_ENDY	(GRID_Y+(ROW+1)*GRID_H) // table마지막 row의 Y값
	
	char	m_szTableBuf [COL*(ROW+1)*MAXCHAR]; 	// 각 CELL에 들어가 텍스트 내용을 담은 버퍼
		
	Column m_stGridTitle[] = {
		{"기물번호",	CWD*15  , EDITALIGN_CENTER|EDITALIGN_MIDDLE,   TABLE_TEXT, 0},
		{"보일러",		CWD*8   , EDITALIGN_CENTER|EDITALIGN_MIDDLE,   TABLE_TEXT, 0},
		{"모델명",		CWD*8+23, EDITALIGN_CENTER|EDITALIGN_MIDDLE,   TABLE_TEXT, 0},
		{"여부",		CWD*8   , EDITALIGN_CENTER|EDITALIGN_MIDDLE,   TABLE_TEXT, 0},
		{"계량기번호",	CWD*0   , EDITALIGN_CENTER|EDITALIGN_MIDDLE,   TABLE_TEXT, 0}
	};
	
	//---------------------------------------------------------------
	// Define
	//---------------------------------------------------------------
	#define INIT_MAIN		1
	#define INIT_BOILCHK	2
	#define INIT_BOILCHG	3
	#define INIT_BOILPHOTO	4

	#define ETC_MAKER_NUM	"50999"
	
	//---------------------------------------------------------------
	// Global Param
	//---------------------------------------------------------------
	long m_lActiveIndex = -1;
	long m_lBtnActFlag = 0;
	long m_lBegiFlag = 0;
	long m_bFirst;
	long m_lpage = 0;
	long m_lTotCnt = 0;
	long m_lTotpage = 0;
	long m_lSelIndex = 0;
	long m_lIdxFlag = 0;	// index 관련 flag
	char m_szCnt_page[10];
	char m_szChk_Rslt[3];
	char m_szfilenm[128];
	char m_szSql[1100];
	long m_lPhoto_Flag = 0;	// 0 = 보일러정면, 1 = 보일러연통
	
	//---------------------------------------------------------------
	// Function
	//---------------------------------------------------------------	
	void SetStyle(void);
	void SetBtnImg(void);	
	void SetStruct(void);
	void SetData(void);
	void SetCombo(void);
	void SetComboMaker(void);
	
	void Redraw(void);	
	void BOIL_DRAW(void);
	void BOILCHG_DRAW(void);
	
	void SetClickData(void);
	bool Save_Boil(void);
	long Del_Boil(void);
	bool CHG_Boil(void);
	void Update_Result(void);
	void Clear_Screen(void);
	bool Compare_Data(void);
	
	void Find_Burner_Class_Cd(void);
	void Chk_Prod_Cd_Alarm(char* burclscd);
	void Set_Alarm(void);
	
	void Shoto_Photo(long ID);
	void Shoto_Photo2(long ID);
	
	void Boil_Photo_Redraw(void);
	
	bool Result_Validation(void);
	
	//---------------------------------------------------------------
	// 공통버튼
	//---------------------------------------------------------------	
	SysButCtrl SysButRes_MAIN[] =
	{
		  SYS_BUT_IMG (  BTNX_1, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_HOME,  0),
		  SYS_BUT_IMG (  BTNX_2, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_KEYBOARD,  0),
		  SYS_BUT_IMG (  BTNX_3, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_SCREEN, 0),
		  SYS_BUT_IMG (  BTNX_4, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_CMMNWK,  0),
		  SYS_BUT_IMG (  BTNX_5, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_VMEXIT, 0),
		  SYS_BUT_IMG (  BTNX_6, BTNY_2, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BOLD|BUTSTY_BORDER , 0, TRANSPARENT, TRANSPARENT, OBJ_BUT, GID_MENU, 0),
		  SYS_BUT_IMG (  BTNX_7, BTNY_2, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BOLD|BUTSTY_BORDER , 0, TRANSPARENT, TRANSPARENT, OBJ_BUT, GID_PREV, 0),
	};
	
	//---------------------------------------------------------------
	// 메인 다이얼로그
	//---------------------------------------------------------------
	DlgObject	DlgRes[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
		DLG_ICON(0, BTNY_2, ICON_TITLE, ""),
		//타이틀
		DLG_TEXT(TX, TY, STWD, STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "보일러 점검"),
		
		DLG_TABLE (GRID_X, GRID_Y, ROW, COL, 0, GRID_H, 1, GRID_H, SEL_ROW, MAXCHAR, m_stGridTitle, ID_TBLLIST, m_szTableBuf),
		
		DLG_TEXT(  STARTX,     STARTY+265, 220, 60, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_PAGE, m_szCnt_page),
		DLG_BUTTON(STARTX+220, STARTY+265, 280, 60, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_PROD, "상 품"),
		DLG_BUTTON(STARTX+500, STARTY+265, 250, 60, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_PREVLST, "▲"),
		DLG_BUTTON(STARTX+750, STARTY+265, 250, 60, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_NEXTLST, "▼"),
		
		DLG_LINE ( STARTX,     STARTY+329, 1000, STARTY+329, DARKSLATEBLUE, 10, LINE_DATA1),
		
		DLG_TEXT(  STARTX, 	   STARTY+334, 220, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_MAKECMPN, "제조사"),
		DLG_TEXT(  STARTX+220, STARTY+334, 530, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA21, ""),
		DLG_BUTTON(STARTX+750, STARTY+334, 250, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, TXTFRCOLOR, YELLOW, CALL_FUNC , "", BID_MOVE_PHOTO, "사진"),
		
		DLG_TEXT(  STARTX, 	   STARTY+384, 220, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_MAKENUM, "제조번호"),
		DLG_TEXT(  STARTX+220, STARTY+384, 780, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA22, ""),
		
		DLG_TEXT(  STARTX,     STARTY+434, 220, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_FORM, "형식"),
		DLG_TEXT(  STARTX+220, STARTY+434, 780, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA23, ""),
		
		DLG_TEXT(  STARTX,     STARTY+484, 220, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_VOLUME, "용량"),
		DLG_TEXT(  STARTX+220, STARTY+484, 365, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA25, ""),
		DLG_TEXT(  STARTX+585, STARTY+484, 415, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA26, ""),
		
		DLG_TEXT(  STARTX, 	   STARTY+534, 220, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_INSPLACE, "설치위치"),
		DLG_TEXT(  STARTX+220, STARTY+534, 780, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA27, ""),
		
		DLG_TEXT(  STARTX, 	   STARTY+584, 220, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_INSDT, "설치일자"),
		DLG_TEXT(  STARTX+220, STARTY+584, 365, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA24, ""),
		DLG_TEXT(  STARTX+585, STARTY+584, 165, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_GOOBOON, "구분"),
		DLG_TEXT(  STARTX+750, STARTY+584, 250, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA29, ""),
		
		DLG_LINE ( STARTX,     STARTY+638, 1000, STARTY+638, DARKSLATEBLUE, 10, LINE_DATA2),
		
		DLG_TEXT(  STARTX, 	   STARTY+642, 270, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_SUPRVRSLT, "공급전결과"),
		DLG_TEXT(  STARTX+270, STARTY+642, 730, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA28, ""),
		
		DLG_TEXT(  STARTX, 	   STARTY+692, 270, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_SUPRVSC, "공급전점검"),
		DLG_TEXT(  STARTX+270, STARTY+692, 315, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA30, ""),
		DLG_TEXT(  STARTX+585, STARTY+692, 165, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_BOILERMAN, "점검자"),
		DLG_TEXT(  STARTX+750, STARTY+692, 250, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA31, ""),
		
		DLG_TEXT(  STARTX, 	   STARTY+742, 270, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTTTLFRCOLOR, TXTCTRLBK, TXT_BUILDCMPN, "시공업체"),
		DLG_TEXT(  STARTX+270, STARTY+742, 730, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA32, ""),
		
		DLG_LINE ( STARTX,     STARTY+796, 1000, STARTY+796, DARKSLATEBLUE, 10, LINE_DATA3),
			
		DLG_BUTTON(STARTX,	   STARTY+800, 165, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_NODEL, "삭 제\n취 소"),
		DLG_BUTTON(STARTX+165, STARTY+800, 165, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_DELETE, "삭 제"),
		DLG_BUTTON(STARTX+330, STARTY+800, 165, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHANGE, "수 정"),
		DLG_BUTTON(STARTX+495, STARTY+800, 165, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_NEW, "신 규"),
		DLG_BUTTON(STARTX+660, STARTY+800, 170, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_BOILERSC, "점 검"),
		DLG_BUTTON(STARTX+830, STARTY+800, 170, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_COMPLETE, "완 료"),
	};	
	
	//---------------------------------------------------------------
	// PDA 다이얼로그
	//---------------------------------------------------------------
	DlgObject	DlgRes_P[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
		DLG_ICON(P_TTLTX, 0, ICON_TITLE, ""),
		//타이틀
		DLG_TEXT(P_TX, P_TY, P_STWD, P_STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, WHITE, TRANSPARENT, TXT_TITLE, "보일러 점검"),
		DLG_BUTTON(P_BTNX, P_BTNY, P_BTNWD, P_BTNHD, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", GID_PREV, ""),

		DLG_BUTTON(STARTX+500, STARTY+285, 250, 65, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_PREVLST, "▲"),
		DLG_BUTTON(STARTX+750, STARTY+285, 250, 65, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_NEXTLST, "▼"),
		DLG_BUTTON(STARTX,	   STARTY+805, 165, 94, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_NODEL, "삭제\n취소"),
		DLG_BUTTON(STARTX+165, STARTY+805, 165, 94, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_DELETE, "삭제"),
		DLG_BUTTON(STARTX+330, STARTY+805, 165, 94, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHANGE, "수정"),
		DLG_BUTTON(STARTX+495, STARTY+805, 165, 94, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_NEW, "신규"),
		DLG_BUTTON(STARTX+660, STARTY+805, 170, 94, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_BOILERSC, "점검"),
		DLG_BUTTON(STARTX+830, STARTY+805, 170, 94, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_COMPLETE, "완료"),

		DLG_TEXT(STARTX,     STARTY+285, 300, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_PAGE, m_szCnt_page),	//페이지
		DLG_TEXT(STARTX, 	 STARTY+350, 250, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_MAKECMPN, "제조사"),
		DLG_TEXT(STARTX+250, STARTY+350, 750, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA21, ""),
		DLG_TEXT(STARTX, 	 STARTY+415, 250, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_MAKENUM, "제조번호"),
		DLG_TEXT(STARTX+250, STARTY+415, 270, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA22, ""),
		DLG_TEXT(STARTX+520, STARTY+415, 180, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_FORM, "형식"),
		DLG_TEXT(STARTX+700, STARTY+415, 300, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA23, ""),
		DLG_TEXT(STARTX, 	 STARTY+480, 250, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_INSDT, "설치일자"),
		DLG_TEXT(STARTX+250, STARTY+480, 270, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA24, ""),
		DLG_TEXT(STARTX+520, STARTY+480, 180, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_VOLUME, "용량"),
		DLG_TEXT(STARTX+700, STARTY+480, 160, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA25, ""),
		DLG_TEXT(STARTX+860, STARTY+480, 140, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA26, ""),
		DLG_TEXT(STARTX, 	 STARTY+545, 250, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_INSPLACE, "설치위치"),
		DLG_TEXT(STARTX+250, STARTY+545, 750, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA27, ""),
		DLG_TEXT(STARTX, 	 STARTY+610, 300, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_SUPRVRSLT, "공급전결과"),
		DLG_TEXT(STARTX+300, STARTY+610, 305, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA28, ""),
		DLG_TEXT(STARTX+605, STARTY+610, 170, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_GOOBOON, "구분"),
		DLG_TEXT(STARTX+775, STARTY+610, 225, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA29, ""),
		DLG_TEXT(STARTX, 	 STARTY+675, 300, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_SUPRVSC, "공급전점검"),
		DLG_TEXT(STARTX+300, STARTY+675, 305, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA30, ""),
		DLG_TEXT(STARTX+605, STARTY+675, 170, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_BOILERMAN, "점검자"),
		DLG_TEXT(STARTX+775, STARTY+675, 225, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA31, ""),
		DLG_TEXT(STARTX, 	 STARTY+740, 250, 65, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_BUILDCMPN, "시공업체"),
		DLG_TEXT(STARTX+250, STARTY+740, 750, 65, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA32, ""),
		
		DLG_TABLE (GRID_X, GRID_Y_P, ROW, COL, 0, GRID_H_P, 1, GRID_H_P, SEL_ROW, MAXCHAR, m_stGridTitle, ID_TBLLIST, m_szTableBuf),
	};	
	
	//---------------------------------------------------------------
	//  다이얼로그:보일러점검
	//---------------------------------------------------------------
	DlgObject	DlgRes_BOILCHK[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),
		DLG_ICON(POPTX, POPTY, ICON_TITLE, ""),
		DLG_TEXT(POPTX, POPTY, POPSTWD, POPSTHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "보일러 점검"),
		DLG_BUTTON(BTNX_7, P_BTNY, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_CLOSE, ""),
		
		DLG_TEXT ( STARTX,	   STARTY-29 , 300, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA33, "보일러위치"),
		DLG_TEXT ( STARTX+300, STARTY-29 , 400, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA34, ""),
		DLG_BUTTON(STARTX+700, STARTY-29 , 300, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHECK1,  "점검"),
		
		DLG_TEXT ( STARTX,	   STARTY+41 , 300, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA35, "급환기구"),
		DLG_TEXT ( STARTX+300, STARTY+41 , 400, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA36, ""),
		DLG_BUTTON(STARTX+700, STARTY+41 , 300, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHECK2,  "점검"),
		
		DLG_TEXT ( STARTX,	   STARTY+111, 300, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA37, "배기통톱"),
		DLG_TEXT ( STARTX+300, STARTY+111, 400, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA38, ""),
		DLG_BUTTON(STARTX+700, STARTY+111, 300, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHECK3,  "점검"),
		
		DLG_TEXT ( STARTX,	   STARTY+181, 300, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA39, "기타"),
		DLG_TEXT ( STARTX+300, STARTY+181, 400, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA40, ""),
		DLG_BUTTON(STARTX+700, STARTY+181, 300, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHECK4,  "점검"),
		
		DLG_BUTTON(STARTX,	   STARTY+300, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CLOSE,  "닫기"),
		DLG_BUTTON(STARTX+600, STARTY+300, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_ENTRY,  "확인"),
	};
	
	//---------------------------------------------------------------
	//  다이얼로그:보일러점검
	//---------------------------------------------------------------
	DlgObject	DlgRes_BOILCHK_P[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),
		DLG_ICON(P_TTLTX, 0, ICON_TITLE, ""),
		DLG_TEXT(P_TX, P_TY, P_STWD, P_STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "보일러 점검"),
		DLG_BUTTON(P_BTNX, P_BTNY, P_BTNWD, P_BTNHD, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_CLOSE, ""),

		DLG_BUTTON(STARTX+700,	 STARTY-40, 300, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHECK1,  "점검"),
		DLG_BUTTON(STARTX+700,	 STARTY+40, 300, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHECK2,  "점검"),
		DLG_BUTTON(STARTX+700,	STARTY+120, 300, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHECK3,  "점검"),
		DLG_BUTTON(STARTX+700,	STARTY+200, 300, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CHECK4,  "점검"),

		DLG_BUTTON(STARTX,		STARTY+350, 400, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CLOSE,  "닫기"),
		DLG_BUTTON(STARTX+600,	STARTY+350, 400, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_ENTRY,  "확인"),
		
		DLG_TEXT ( STARTX,		 STARTY-40, 300, 80, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA33, "보일러위치"),
		DLG_TEXT ( STARTX+300,	 STARTY-40, 400, 80, 0,0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA34, ""),
		DLG_TEXT ( STARTX,		 STARTY+40, 300, 80, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA35, "급환기구"),
		DLG_TEXT ( STARTX+300,	 STARTY+40, 400, 80, 0,0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA36, ""),
		DLG_TEXT ( STARTX,		STARTY+120, 300, 80, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA37, "배기통톱"),
		DLG_TEXT ( STARTX+300,	STARTY+120, 400, 80, 0,0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA38, ""),
		DLG_TEXT ( STARTX,		STARTY+200, 300, 80, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA39, "기타"),
		DLG_TEXT ( STARTX+300,	STARTY+200, 400, 80, 0,0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA40, ""),
	};
	
	//---------------------------------------------------------------
	//  다이얼로그:보일러 수정
	//---------------------------------------------------------------
	DlgObject	DlgRes_BOILCHG[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),
		DLG_ICON(POPTX, POPTY, ICON_TITLE, ""),
		DLG_TEXT(POPTX, POPTY, POPSTWD, POPSTHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "보일러 수정"),
		DLG_BUTTON(BTNX_7, P_BTNY, BTNWD_2, BTNHT_2, 0, 0, EDITSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_CLOSE2, ""),
		
		DLG_TEXT(  STARTX,     STARTY -29, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA1, "기물번호"),
		DLG_TEXT(  STARTX+300, STARTY -29, 700,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK,TXT_DATA2, ""),
		
		DLG_TEXT(  STARTX,     STARTY +41, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA3, "종류"),
		DLG_COMBO( STARTX+300, STARTY +41, 700, 200, 150, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA1, 30),
		
		DLG_TEXT(  STARTX,     STARTY+111, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA4, "제조사명"),
		DLG_COMBO( STARTX+300, STARTY+111, 700, 200, 150, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA2, 30),

		// EDT_DATA8
		DLG_TEXT(  STARTX,     STARTY+181, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA50, "제조사입력"),
		DLG_BUTTON(STARTX+300, STARTY+181, 700,  70, 0  ,  0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_WRITE3,  ""),
		DLG_TEXT(  STARTX+300, STARTY+181, 700,  70, 0  ,  0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA8,  ""),
		
		DLG_TEXT(  STARTX,     STARTY+251, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA5, "모델명"),
		DLG_BUTTON(STARTX+300, STARTY+251, 700,  70, 0  ,  0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_WRITE1,  ""),
		DLG_TEXT(  STARTX+300, STARTY+251, 700,  70, 0  ,  0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA1,  ""),
		
		DLG_TEXT(  STARTX,     STARTY+321, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA6, "용량"),
		DLG_EDIT(  STARTX+300, STARTY+321, 325,  70, 0  ,  0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA2, 10,  ""),
		DLG_COMBO( STARTX+625, STARTY+321, 375, 200, 150, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA3, 30),
		
		DLG_TEXT(  STARTX,     STARTY+461, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA9, "구분"),
		DLG_TEXT(  STARTX+300, STARTY+461, 700,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA41, ""),
		
		DLG_TEXT(  STARTX,     STARTY+531, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA10, "설치위치"),
		DLG_COMBO( STARTX+300, STARTY+531, 700, 200, 150, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA4, 30),
		
		DLG_TEXT(  STARTX,     STARTY+601, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA11, "제조번호"),
		DLG_BUTTON(STARTX+300, STARTY+601, 700,  70, 0  ,  0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_WRITE2,  ""),
		DLG_TEXT(  STARTX+300, STARTY+601, 700,  70, 0  ,  0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA4,  ""),
		
		DLG_TEXT(  STARTX,     STARTY+671, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA12, "형식"),
		DLG_COMBO( STARTX+300, STARTY+671, 700, 200, 150, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA5, 30),
		
		DLG_TEXT(  STARTX,     STARTY+391, 300,  70, 0  ,  0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA7, "설치일"),
		DLG_EDIT(  STARTX+300, STARTY+391, 200,  70, 0  ,  0, EDITSTY_BOLD, 0, TXTFRCOLOR, EDTCTRLBK, EDT_DATA5, 4,  ""),
		DLG_TEXT(  STARTX+500, STARTY+391,  18,  40, 0  ,  0, 0, 0, TXTFRCOLOR, EDTCTRLBK, TXT_DATA42, ""),
		DLG_TEXT(  STARTX+500, STARTY+431,  18,  30, 0  ,  0, 0, 0, TXTFRCOLOR, EDTCTRLBK, TXT_DATA43, "."),
		DLG_EDIT(  STARTX+518, STARTY+391, 145,  70, 0  ,  0, EDITSTY_BOLD, 0, TXTFRCOLOR, EDTCTRLBK, EDT_DATA6, 2,  ""),
		DLG_TEXT(  STARTX+663, STARTY+391,  17,  40, 0  ,  0, 0, 0, TXTFRCOLOR, EDTCTRLBK, TXT_DATA44, ""),
		DLG_TEXT(  STARTX+663, STARTY+431,  17,  30, 0  ,  0, 0, 0, TXTFRCOLOR, EDTCTRLBK, TXT_DATA45, "."),
		DLG_EDIT(  STARTX+680, STARTY+391, 145,  70, 0  ,  0, EDITSTY_BOLD, 0, TXTFRCOLOR, EDTCTRLBK, EDT_DATA7, 2,  ""),
		DLG_BUTTON(STARTX+825, STARTY+391, 175,  70, 0  ,  0, BUTSTY_BOLD, BUTSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, CALL_FUNC , "", BID_SCHDL, "▼"),
		
		DLG_BUTTON(STARTX+600, STARTY+750, 400,  70, 0  ,  0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_SAVE,  "저장"),
	};
	
	//---------------------------------------------------------------
	//  다이얼로그:보일러 수정
	//---------------------------------------------------------------
	DlgObject	DlgRes_BOILCHG_P[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),
		DLG_ICON(P_TTLTX, 0, ICON_TITLE, ""),
		DLG_TEXT(P_TX, P_TY, P_STWD, P_STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "보일러 수정"),
		DLG_BUTTON(P_BTNX, P_BTNY, P_BTNWD, P_BTNHD, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_CLOSE2, ""),

		DLG_BUTTON(STARTX+600,  STARTY+750, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_SAVE,  "저장"),
		
		DLG_TEXT ( STARTX,		STARTY-40, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA1, "기물번호"),
		DLG_TEXT ( STARTX+300,  STARTY-40, 700, 70, 0,0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK,TXT_DATA2, ""),
		DLG_TEXT ( STARTX,		STARTY+30, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA3, "종류"),
		DLG_TEXT ( STARTX,		STARTY+100, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA4, "제조사명"),
		DLG_TEXT ( STARTX,		STARTY+170, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA5, "모델명"),
		DLG_TEXT ( STARTX,		STARTY+240, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA6, "용량"),

		DLG_TEXT ( STARTX,		STARTY+310, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA7, "설치일"),
		DLG_EDIT( STARTX+300,	STARTY+310, 150, 70, 0, 0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA5, 4,  ""),
		DLG_TEXT(STARTX+450,	STARTY+310, 20, 40, 0, 0, 0, 0, TXTFRCOLOR, EDTCTRLBK, TXT_DATA42, ""),
		DLG_TEXT(STARTX+450,	STARTY+350, 20, 30, 0, 0, 0, 0, TXTFRCOLOR, EDTCTRLBK, TXT_DATA43, "."),
		DLG_EDIT( STARTX+470,	STARTY+310, 150, 70, 0, 0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA6, 2,  ""),
		DLG_TEXT(STARTX+620,	STARTY+310, 20, 40, 0, 0, 0, 0, TXTFRCOLOR, EDTCTRLBK, TXT_DATA44, ""),
		DLG_TEXT(STARTX+620,	STARTY+350, 20, 30, 0, 0, 0, 0, TXTFRCOLOR, EDTCTRLBK, TXT_DATA45, "."),
		DLG_EDIT( STARTX+640,	STARTY+310, 150, 70, 0, 0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA7, 2,  ""),
		DLG_BUTTON(STARTX+790,	STARTY+310, 210, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, CALL_FUNC , "", BID_SCHDL, "▼"),
		//DLG_TEXT ( STARTX+230, STARTY+350, 270, 70, 0,0, 0, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, TXT_DATA8, ""),
		//DLG_BUTTON(STARTX+500, STARTY+350, 80,  70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNCHKFRCOLOR, EDTCTRLBK, CALL_FUNC , "", BID_SCHDL, "▼"),

		DLG_TEXT ( STARTX,		STARTY+380, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA9, "구분"),
		DLG_TEXT ( STARTX+300,	STARTY+380, 700, 70, 0,0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA41, ""),
		DLG_TEXT ( STARTX,		STARTY+450, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA10, "설치위치"),
		DLG_TEXT ( STARTX,		STARTY+520, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA11, "제조번호"),
		DLG_TEXT ( STARTX,		STARTY+590, 300, 70, 0,0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA12, "형식"),
		
		DLG_EDIT( STARTX+300,	STARTY+170, 700, 70, 0, 0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA1, 50, ""),
		DLG_EDIT( STARTX+300,	STARTY+240, 700, 70, 0, 0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA2, 10, ""),
		//DLG_EDIT( STARTX+730,  STARTY+350, 170, 70, 0, 0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA3, 30,  ""),
		DLG_EDIT( STARTX+300,	STARTY+520, 700, 70, 0, 0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA4, 30, ""),
		
		DLG_COMBO (STARTX+300,	STARTY+30,  700, 200, 210, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA1, 30),
		DLG_COMBO (STARTX+300,	STARTY+100, 700, 200, 210, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA2, 30),
		DLG_COMBO (STARTX+400,	STARTY+240, 600, 200, 210, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA3, 30),
		DLG_COMBO (STARTX+300,	STARTY+450, 700, 200, 210, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA4, 30),
		DLG_COMBO (STARTX+300,	STARTY+590, 700, 200, 210, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA5, 30),
	};
	
	//---------------------------------------------------------------
	//  다이얼로그:보일러사진
	//---------------------------------------------------------------
	DlgObject	DlgRes_INIT_BOILPHOTO[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),
		DLG_ICON(POPTX, POPTY, ICON_TITLE, ""),
		DLG_TEXT(POPTX, POPTY, POPSTWD, POPSTHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "보일러 사진 촬영"),
		DLG_BUTTON(BTNX_7, P_BTNY, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_CLOSE, ""),
		
		DLG_TEXT ( STARTX,	   STARTY-29 , 300, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA46, "보일러"),
		DLG_TEXT ( STARTX+300, STARTY-29 , 400, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA47, ""),
		DLG_BUTTON(STARTX+700, STARTY-29 , 300, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_BOIL_PHOTO1,  "사진"),
		
		DLG_TEXT ( STARTX,	   STARTY+41 , 300, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA48, "연통"),
		DLG_TEXT ( STARTX+300, STARTY+41 , 400, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA49, ""),
		DLG_BUTTON(STARTX+700, STARTY+41 , 300, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_BOIL_PHOTO2,  "사진"),
		
		DLG_BUTTON(STARTX+500, STARTY+300, 500, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CLOSE,  "닫기"),
	};
	
	//---------------------------------------------------------------
	// main
	//---------------------------------------------------------------
	bool main(quad MsgType, quad wParam, quad lParam)
	{
		EVENT_HANDLER (MsgType, wParam, lParam);
		return TRUE;
	}
	
	//---------------------------------------------------------------
	// OnInit Function
	//---------------------------------------------------------------	
	void OnInit(char bFirst)
	{
		char szDate[7];
		char szToday[7];

		m_bFirst = bFirst;
		
		switch (bFirst)
		{
			case INIT_MAIN:
				switch (theDevInfo.m_nType)
				{
					case FAMILY_PDA:
						CREATE_DIALOG_OBJECT (DlgRes_P, SIZEOF(DlgRes_P));
						break;
					default:
						CREATE_GLOBAL_BUTTON (SysButRes_MAIN);
						CREATE_DIALOG_OBJECT (DlgRes, SIZEOF(DlgRes));
						break;		
				}
				
				SetBtnImg();
				SetStyle();

				if( g_lSCMoveFlag == 1 )
				{
					g_lSCMoveFlag = 0;
					m_lIdxFlag = 1;
					ON_EXIT();
					OnInit(INIT_BOILCHK);
					break;
				}
				else if( g_lSCMoveFlag == 2 )
				{
					g_lSCMoveFlag = 0;
					m_lIdxFlag = 1;
				}

				SetData();
				Redraw();
				Set_Alarm();
				
				break;
				
			case INIT_BOILCHK:
				switch (theDevInfo.m_nType)
				{
					case FAMILY_PDA:
						CREATE_DIALOG_OBJECT (DlgRes_BOILCHK_P, SIZEOF(DlgRes_BOILCHK_P));
						break;
					default:
						CREATE_DIALOG_OBJECT (DlgRes_BOILCHK, SIZEOF(DlgRes_BOILCHK));
						break;
				}
				
				SetBtnImg();
				BOIL_DRAW();
				
				break;
				
			case INIT_BOILCHG:
				switch (theDevInfo.m_nType)
				{
					case FAMILY_PDA:
						CREATE_DIALOG_OBJECT (DlgRes_BOILCHG_P, SIZEOF(DlgRes_BOILCHG_P));
						break;
					default:
						CREATE_DIALOG_OBJECT (DlgRes_BOILCHG, SIZEOF(DlgRes_BOILCHG));
						break;
				}
				
				SetBtnImg();
				SetStyle();
				
				BOILCHG_DRAW();
				SetCombo();
				
				break;
			
			case INIT_BOILPHOTO:
				CREATE_DIALOG_OBJECT (DlgRes_INIT_BOILPHOTO, SIZEOF(DlgRes_INIT_BOILPHOTO));
				SetBtnImg();
				SetStyle();
				Boil_Photo_Redraw();
				
				break;
		}
	}

	/*=======================================================================================
	함수명 : SetBtnImg
	기  능 : BUTTON IMAGE
	Param  : 
	Return : 
	========================================================================================*/
	void SetBtnImg(void)
	{
		void* h;
	
		if( m_bFirst == INIT_MAIN )
		{
			IconCtrl_SetImage(Get_hDlgCtrlByID(ICON_TITLE), 0, g_pImgMainTtl );		//타이틀
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_TITLE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			
			if( theDevInfo.m_nType != FAMILY_PDA )
			{	
				//상단공통메뉴
				h = GetSysButHandle(GID_HOME);
				ButCtrl_SetImage( h,  g_pImgHomeI);
				ButCtrl_SetActiveImage( h,  g_pImgHomeA);
				
				h = GetSysButHandle(GID_KEYBOARD);
				ButCtrl_SetImage( h,  g_pImgKeybrdI);
				ButCtrl_SetActiveImage( h,  g_pImgKeybrdA);
				
				h = GetSysButHandle(GID_SCREEN);
				ButCtrl_SetImage( h,  g_pImgScreenI);
				ButCtrl_SetActiveImage( h,  g_pImgScreenA);
				
				h = GetSysButHandle(GID_CMMNWK);
				ButCtrl_SetImage( h,  g_pImgCmmnwrkI);
				ButCtrl_SetActiveImage( h,  g_pImgCmmnwrkA);
				
				h = GetSysButHandle(GID_VMEXIT);
				ButCtrl_SetImage( h,  g_pImgExitI);
				ButCtrl_SetActiveImage( h,  g_pImgExitA);
			}
		}
		else
		{
			IconCtrl_SetImage(Get_hDlgCtrlByID(ICON_TITLE), 0, g_pImgPopTtlL );		//타이틀
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_TITLE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		}
		
		return;
	}

	/*=======================================================================================
	함수명 : SetStyle
	기  능 : TEXTBOX, EDITER
	Param  : 
	Return : 
	========================================================================================*/
	void SetStyle(void)
	{
		char szProd[5];
		char szSql[50];
		long cnt = 0;
		
		/*****************************************/
		/* 보일러점검                            */
		/*****************************************/
		if( m_bFirst == INIT_MAIN )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_PAGE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_MAKECMPN), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_MAKENUM), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_FORM), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_INSDT), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_VOLUME), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_INSPLACE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_SUPRVRSLT), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_GOOBOON), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_SUPRVSC), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_BOILERMAN), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_BUILDCMPN), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA21), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA22), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA23), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA24), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA25), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA26), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA27), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA28), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA29), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA30), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA31), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA32), EDITALIGN_MIDDLE);
			
			EditCtrl_SetMultiLine(Get_hDlgCtrlByID(TXT_DATA23), TRUE, 2, EDITSEP_NONE );
			
			/************************************/
			/* 상품 버튼                        */
			/************************************/
			if( Str_Cmp(stSc.CENTER_CD, "41") == 0 || Str_Cmp(stSc.CENTER_CD, "42") == 0 || Str_Cmp(stSc.CENTER_CD, "43") == 0 || Str_Cmp(stSc.CENTER_CD, "44") == 0 || Str_Cmp(stSc.CENTER_CD, "45") == 0 || Str_Cmp(stSc.CONT_STS_CD, "30") == 0)
			{
				DlgCtrl_SetVisible(this->m_hDlg, Get_iDlgCtrlByID(BID_PROD), FALSE);
			}	
			else
			{
				Mem_Set((byte*)szProd, 0x00, sizeof(szProd));
				Mem_Set((byte*)szSql, 0x00, sizeof(szSql));
				
				SPRINT(szSql, "SELECT PROD_CD FROM NORMAL_MTR WHERE CHK_EXEC_NUM = '%s'", g_szCHK_EXEC_NUM, 0, 0);
	
				g_Sql_RetStr(szSql, 10, szProd);
	
				if( Str_Cmp(szProd, "11") == 0 || Str_Cmp(szProd, "12") == 0 || Str_Cmp(szProd, "13") == 0 || Str_Cmp(szProd, "81") == 0 || Str_Cmp(szProd, "82") == 0 || Str_Cmp(szProd, "83") == 0 )
				{
					DlgCtrl_SetVisible(this->m_hDlg, Get_iDlgCtrlByID(BID_PROD), TRUE);
				}
				else
				{
					DlgCtrl_SetVisible(this->m_hDlg, Get_iDlgCtrlByID(BID_PROD), FALSE);
				}
			}	
		}
		/*****************************************/
		/* 보일러수정                            */
		/*****************************************/
		else if( m_bFirst == INIT_BOILCHG )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA1), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA2), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA3), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA4), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA5), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA6), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA7), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA9), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA10), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA11), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA12), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA41), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA42), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA43), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA44), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA45), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA50), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA1), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA2), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA4), EDITALIGN_MIDDLE);
			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA5), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA6), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA7), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA8), EDITALIGN_MIDDLE);
			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA1), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA2), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA3), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA4), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA5), EDITALIGN_MIDDLE);
		}
		/*****************************************/
		/* 보일러사진                            */
		/*****************************************/
		else if( m_bFirst == INIT_BOILPHOTO )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA46), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA47), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA48), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA49), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		}
		
		return;
	}

	/*=======================================================================================
	함수명 : SetCombo
	기  능 : 콤보박스 세팅
	Param  : 
	Return : 
	========================================================================================*/
	void SetCombo(void)
	{	
		char szSql[300];
		char sztmp[100];
		long i;

		//용량단위
		for ( i = 0 ;  SCBOIL_CAPA[i].Str[0] != 0 ; i++)
		{
			ListCtrl_AddItem (Get_hDlgCtrlByID(CMB_DATA3+2), SCBOIL_CAPA[i].Str, 0, ICON_NONE);
		}
		
		//위치
		// Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		// SPRINT(szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30028' ",0, 0, 0   );
		// g_Sql_SetCombo(szSql, CMB_DATA4+2);
		for ( i = 0 ;  BOIL_LOC[i].Str[0] != 0 ; i++)
		{
			ListCtrl_AddItem (Get_hDlgCtrlByID(CMB_DATA4+2), BOIL_LOC[i].Str, 0, ICON_NONE);
		}
		//BF_BOILCHK
		
		//형식
		for ( i = 0 ;  SCBOIL_FORM[i].Str[0] != 0 ; i++)
		{
			ListCtrl_AddItem (Get_hDlgCtrlByID(CMB_DATA5+2), SCBOIL_FORM[i].Str, 0, ICON_NONE);
		}
		
		//종류
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, "SELECT BURNER_KIND_NM FROM BURNER_KIND WHERE BURNER_KIND_NUM IN ('201', '301')",0, 0, 0   );		
		g_Sql_SetCombo(szSql, CMB_DATA1+2);
		
		//제조사명
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, "SELECT MAKER_NM FROM USE_MAKER WHERE MAKER_FLAG = '50' ORDER BY BOILER_SEQ ",0, 0, 0   );

		g_Sql_SetCombo(szSql, CMB_DATA2+2);
		
		return;
	}
	//SetComboMaker
	void SetComboMaker(void)
	{	
		char szSql[300];
		char sztmp[100];
		long i;
		
		//제조사명
		// Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		// SPRINT(szSql, "SELECT MAKER_NM FROM USE_MAKER WHERE MAKER_FLAG = '50' ORDER BY BOILER_SEQ ",0, 0, 0   );

		ListCtrl_ResetAllItems( Get_hDlgCtrlByID(CMB_DATA2+2 ) );
		
		Str_Cpy( sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA8)) );	

		//PRINT("@dkjung >> sztmpsztmpsztmp : %s",sztmp,0,0);

		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		
		Str_Cpy( szSql, "SELECT MAKER_NM FROM USE_MAKER" );
		Str_Cat( szSql, " WHERE MAKER_FLAG = '50'" );
		Str_Cat( szSql, " AND MAKER_NM LIKE '%" );
		Str_Cat( szSql, sztmp );
		Str_Cat( szSql, "%'" );
		Str_Cat( szSql, " ORDER BY BOILER_SEQ" );

		PRINT("szSqlszSqlszSql : %s",szSql,0,0);

		g_Sql_SetCombo(szSql, CMB_DATA2+2);
		
		return;
	}

	/*=======================================================================================
	함수명 : OnChar
	기  능 : 문자열
	Param  : 
	Return : 
	========================================================================================*/
	void OnChar(long nChar)
	{
		long nRet = 0;
		long nDate = 0;
		char szTmp[10];
	
		if( m_bFirst == INIT_BOILCHG )
		{
			/******************************/
			/* 숫자 체크                  */
			/******************************/
			if( Get_iDlgCtrlByID(EDT_DATA2) == m_lActiveIndex 
			 || Get_iDlgCtrlByID(EDT_DATA5) == m_lActiveIndex
			 || Get_iDlgCtrlByID(EDT_DATA6) == m_lActiveIndex
			 || Get_iDlgCtrlByID(EDT_DATA7) == m_lActiveIndex )
			{
				if( (nChar < 48 ||  nChar > 57) )
				{
					MessageBoxEx (CONFIRM_OK, "숫자만 입력가능합니다.");
					ON_KEY( 5 );
					return;
				}
			}
			
			/******************************/
			/* 설치일자 체크              */
			/******************************/
			if( Get_iDlgCtrlByID(EDT_DATA5) == m_lActiveIndex )
			{
				if( EditCtrl_GetStrLen(Get_hDlgCtrlByID(EDT_DATA5)) == 4 )
				{
					Dialog_SetActiveCtrl(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA6));
					m_lActiveIndex = Dialog_GetActiveCtrlIndex(this->m_hDlg);
				}
			}
			else if( Get_iDlgCtrlByID(EDT_DATA6) == m_lActiveIndex )
			{
				Mem_Set((byte *)szTmp, 0x00, sizeof(szTmp));
				Mem_Cpy((byte *)szTmp, (byte *)EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)), 1);
				if( Str_AtoI(szTmp) > 1 )
				{
					ON_KEY( 5 );
					return;
				}
				
				Mem_Set((byte *)szTmp, 0x00, sizeof(szTmp));
				Mem_Cpy((byte *)szTmp, (byte *)EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)), 2);
				if( Str_Len(szTmp) > 1 && (Str_AtoI(szTmp) == 0 || Str_AtoI(szTmp) > 12) )
				{
					ON_KEY( 5 );
					return;
				}
				
				if( EditCtrl_GetStrLen(Get_hDlgCtrlByID(EDT_DATA6)) == 2 )
				{
					Dialog_SetActiveCtrl(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA7));
					m_lActiveIndex = Dialog_GetActiveCtrlIndex(this->m_hDlg);
				}
			}
			else if( Get_iDlgCtrlByID(EDT_DATA7) == m_lActiveIndex )
			{
				Mem_Set((byte *)szTmp, 0x00, sizeof(szTmp));
				Mem_Cpy((byte *)szTmp, (byte *)EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)), 1);
				if( Str_AtoI(szTmp) > 3 )
				{
					ON_KEY( 5 );
					return;
				}
				
				Mem_Set((byte *)szTmp, 0x00, sizeof(szTmp));
				Mem_Cpy((byte *)szTmp, (byte *)EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)), 2);
				if( Str_Len(szTmp) > 1 && (Str_AtoI(szTmp) == 0 || Str_AtoI(szTmp) > 31) )
				{
					ON_KEY( 5 );
					return;
				}
			}
	
			Mem_Set((byte *)szTmp, 0x00, sizeof(szTmp));
			Str_Cpy(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5)));
			Str_Cat(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)));
			Str_Cat(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)));
			if( Str_Len(szTmp) == 8 )
			{
				Str_Chg(szTmp, STRCHG_DEL_NONDIGIT);
				nDate = Str_AtoI(szTmp);
				nRet = Time_ValidateDate(nDate);
				
				if( nRet == 0 )
				{
					MessageBoxEx (CONFIRM_OK, "유효한 날짜가 아닙니다.\n날짜를 확인해주세요.");
					EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA5), "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA6), "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA7), "");
					
					Dialog_SetActiveCtrl(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA5));
					m_lActiveIndex = Dialog_GetActiveCtrlIndex(this->m_hDlg);
				}
			}

			ON_DRAW();
			return;
		}
	}

	/*=======================================================================================
	함수명 : OnPointing
	기  능 : 화면 포인팅 이벤트
	Param  : 
	Return : 
	========================================================================================*/
	void OnPointing(long nAction, long X, long Y)
	{
		long lActiveIndex = -1;
		long lret;
		
		lActiveIndex = Dialog_GetActiveCtrlIndex(this->m_hDlg);	

		if( m_bFirst == INIT_BOILCHG )
		{
			if( POINTING_UP == nAction )
			{
				m_lActiveIndex = lActiveIndex;
				
				if( theDevInfo.m_nType > FAMILY_PDA )
				{
					// DLG_EDIT(  STARTX+300, STARTY+251, 325,  70, 0  ,  0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA2, 10,  ""),
					if( X > DMS_X(STARTX+300) && X < DMS_X(STARTX+625) && Y > DMS_Y(STARTY+321) && Y < DMS_Y(STARTY+391) ||
						X > DMS_X(STARTX+300) && X < DMS_X(STARTX+500) && Y > DMS_Y(STARTY+391) && Y < DMS_Y(STARTY+461) ||
						X > DMS_X(STARTX+518) && X < DMS_X(STARTX+663) && Y > DMS_Y(STARTY+391) && Y < DMS_Y(STARTY+461) ||
						X > DMS_X(STARTX+680) && X < DMS_X(STARTX+825) && Y > DMS_Y(STARTY+391) && Y < DMS_Y(STARTY+461)  )
					{
						if( Get_iDlgCtrlByID(EDT_DATA2) == lActiveIndex ||
							Get_iDlgCtrlByID(EDT_DATA5) == lActiveIndex ||
							Get_iDlgCtrlByID(EDT_DATA6) == lActiveIndex ||
							Get_iDlgCtrlByID(EDT_DATA7) == lActiveIndex )	
						{
							ShowSip(FALSE);
							g_Sipflag = 0;
							
							ShowSip(TRUE);
							g_Sipflag = 1;
						}
						
					}
					else if(X > DMS_X(STARTX+800) && X < DMS_X(STARTX+1000) && Y > DMS_Y(STARTY+111) && Y < DMS_Y(STARTY+181))
					{
							// DLG_TEXT(  STARTX+300, STARTY+181, 700,  70, 0  ,  0, EDITSTY_BOLD, EDITSTY_BORDER, TXTFRCOLOR, EDTCTRLBK, EDT_DATA1,  ""),
							// DLG_COMBO( STARTX+300, STARTY+111, 700, 200, 150, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA2, 30),
						// if(Get_iDlgCtrlByID(CMB_DATA2) == lActiveIndex )
						// {
							SetComboMaker();
						// }

					}
					else
					{
						ShowSip(FALSE);
						g_Sipflag = 0;
					}
				}
				else if( theDevInfo.m_nType == FAMILY_PDA )
				{
					if( X > DMS_X(STARTX+350) && X < DMS_X(STARTX+900) && Y > DMS_Y(STARTY+210) && Y < DMS_Y(STARTY+280) ||
					    X > DMS_X(STARTX+350) && X < DMS_X(STARTX+900) && Y > DMS_Y(STARTY+490) && Y < DMS_Y(STARTY+560) )
					{
						if( Get_iDlgCtrlByID(EDT_DATA1) == lActiveIndex ||
						    Get_iDlgCtrlByID(EDT_DATA4) == lActiveIndex )
						{
							ShowSip(FALSE);
							g_Sipflag = 0;
							
							
							ShowSip(TRUE);
							g_Sipflag = 1;
						}
					}
					else
					{
						ShowSip(FALSE);
						g_Sipflag = 0;
					}
					
					ON_DRAW();
				}
			}
		}
	}

	/*=======================================================================================
	함수명 : OnButton
	기  능 : 버튼 이벤트 정의
	Param  : 
	Return : 
	========================================================================================*/
	void OnButton(long ID)
	{	
		long d, k;
		long lCnt, nLen;
		char sztmp[10];
		char szYear[5];
		char szMonth[3];
		char szDay[3];
		char szDp[11];
		char szSql[200];
		char szMsg[200];

		switch(ID)
		{
			/*********************************/
			/* 공통                          */
			/*********************************/
			case GID_HOME:
				if( MessageBoxEx (CONFIRM_YESNO, "메인 메뉴로 나가시겠습니까?")  == MB_OK)
				{
					if( Str_Cmp(stSc.SEND_YN, "N") == 0 || Str_Cmp(stSc.SEND_YN, "") == 0 )
					{
						g_Del_ScData();
					}
					Card_Move("MENU");
				}
				break;
				
			case GID_MENU:
				if( MessageBoxEx (CONFIRM_YESNO, "안전점검 메뉴로\n나가시겠습니까?")  == MB_OK)
				{
					if( Str_Cmp(stSc.SEND_YN, "N") == 0 || Str_Cmp(stSc.SEND_YN, "") == 0 )
					{
						g_Del_ScData();
					}
					Card_Move("SC_MENU");
				}
				break;
				
			case GID_KEYBOARD:
				g_SHOW_SIP();
				break;
				
			case GID_SCREEN:
				g_MOVE_DLG(400);
				break;
				
			case GID_CMMNWK:
				if( MessageBoxEx (CONFIRM_YESNO, "SOS 긴급호출을 하시겠습니까?") == MB_OK )
				{
					g_Send_SOS(1);
				}
				break;
								
			case GID_PREV:
				g_lSCMoveFlag = 0;
				Card_Move("SC_START");
				break;
				
			case GID_VMEXIT:
				if( Str_Cmp(stSc.SEND_YN, "N") == 0 || Str_Cmp(stSc.SEND_YN, "") == 0 )
				{
					g_Exit_DelScData();
					return;
				}
				g_Exit();
				return;
			
			/*********************************/
			/* 보일러                        */
			/*********************************/
			case BID_PREVLST:
				m_lpage--;
				if(m_lpage < 0)
				{
					m_lpage = 0;
					
					return;
				}
				m_lSelIndex = 0;
				SetData();
				ON_DRAW();
				break;
				
			case BID_NEXTLST:
				m_lpage++ ;
				if( m_lpage > m_lTotpage-1 )
				{
					m_lpage = m_lTotpage-1;
					if(m_lpage < 0)
					{
						m_lpage = 0;
					}
					
					break;
				}
				m_lSelIndex = 0;
				SetData();
				ON_DRAW();
				break; 
				
			case BID_NODEL:
				g_lSCMoveFlag = 2;
				g_lNewBurFlag = 1;
				g_nProdMoveFlag = 0;
				Card_Move("SC_NODEL");
				break;
				
			case BID_DELETE:
				if( m_lTotpage == 0 )
				{
					MessageBoxEx (CONFIRM_OK, "보일러가 없습니다.");
					break;
				}
				else
				{
					if( m_lSelIndex != -1 )
					{
						if( Str_Cmp(m_szChk_Rslt, "N") == 0 )
						{
							MessageBoxEx (CONFIRM_OK, "부적합 보일러는 삭제불가 합니다.");
						}
						else
						{
							if(  MessageBoxEx (CONFIRM_YESNO, "삭제하시겠습니까??")  == MB_OK )
							{
								if( Del_Boil() > 0 )
								{
									m_lpage = 0;
									m_lSelIndex = 0;
									SetData();
									ON_DRAW();
									Find_Burner_Class_Cd();	
								}
							}
						}
					}
					else
					{
						MessageBoxEx (CONFIRM_OK, "보일러를 선택해주세요.");
					}
				}
				
				Redraw();
				
				break;
				
			case BID_CHANGE:
				if( m_lTotpage == 0 )
				{
					MessageBoxEx (CONFIRM_OK, "보일러가 없습니다.");
					break;
				}
				else
				{
					if( m_lSelIndex != -1 )
					{
						ON_EXIT();
						OnInit(INIT_BOILCHG);
					}
					else
					{
						MessageBoxEx (CONFIRM_OK, "보일러를 선택해주세요.");
					}
				}
				break;
				
			case BID_NEW:
				g_lSCMoveFlag = 2;
				Card_Move("SC_BOILNEW");
				break;
				
			case BID_BOILERSC:
				if( m_lTotpage == 0 )
				{
					MessageBoxEx (CONFIRM_OK, "보일러가 없습니다.");
					break;
				}
				else
				{
					if( m_lSelIndex != -1 )
					{
						// 보일러 현황 자원 일치
						if( MessageBoxEx (CONFIRM_YESNO, "현장의 보일러 현황과 자원이\n일치합니까?")  == MB_OK )
						{
							g_lBoil_Chk_Flag = 1;
							g_lSCMoveFlag = 0;
							m_lIdxFlag = 1;
							ON_EXIT();
							OnInit(INIT_BOILCHK);
						}
						else
						{	
							g_lBoil_Chk_Flag = 0;
							g_nWorkChkFlag = 12;
							g_lSCMoveFlag = 1;
							Str_Cpy(stScNogood.CHK_EXEC_NUM, g_szCHK_EXEC_NUM);
							Str_Cpy(stScNogood.CHK_SEC_CD, "90");
							Str_Cpy(stScNogood.MTR_NUM, stScBur.MTR_NUM);
							Str_Cpy(stScNogood.BURNER_NUM, stScBur.BURNER_NUM);
							Str_Cpy(stScNogood.CHK_SEC_NM, "보일러/기타점검");
							Card_Move("CHK_DTL");	
						}	
					}
					else
					{
						MessageBoxEx (CONFIRM_OK, "보일러를 선택해주세요.");
					}
				}
				break;
				
			case BID_COMPLETE:
				if( Result_Validation() )
				{
					Update_Result();
					g_lSCMoveFlag = 0;
					Card_Move("SC_START");
				}
				break;
				
			case BID_MOVE_PHOTO:
			 	// 20190717 CS팀 이정욱 과장님 요청, 사진 한장만 촬영
				//ON_EXIT();
				//OnInit(INIT_BOILPHOTO);
				Shoto_Photo2(ID);
				
				break;
			
			/*********************************/
			/* 보일러점검                    */
			/*********************************/
			case BID_CHECK1:
				g_nWorkChkFlag = 12;
				g_lSCMoveFlag = 1;
				Str_Cpy(stScNogood.CHK_EXEC_NUM, g_szCHK_EXEC_NUM);
				Str_Cpy(stScNogood.CHK_SEC_CD, "10");
				Str_Cpy(stScNogood.MTR_NUM, stScBur.MTR_NUM);
				Str_Cpy(stScNogood.BURNER_NUM, stScBur.BURNER_NUM);
				Str_Cpy(stScNogood.CHK_SEC_NM, "보일러위치");
				Card_Move("CHK_DTL");
				break;
				
			case BID_CHECK2:
				g_nWorkChkFlag = 12;
				g_lSCMoveFlag = 1;
				Str_Cpy(stScNogood.CHK_EXEC_NUM, g_szCHK_EXEC_NUM);
				Str_Cpy(stScNogood.CHK_SEC_CD, "20");
				Str_Cpy(stScNogood.MTR_NUM, stScBur.MTR_NUM);
				Str_Cpy(stScNogood.BURNER_NUM, stScBur.BURNER_NUM);
				Str_Cpy(stScNogood.CHK_SEC_NM, "급/환기구");
				Card_Move("CHK_DTL");
				break;
				
			case BID_CHECK3:
				g_nWorkChkFlag = 12;
				g_lSCMoveFlag = 1;
				Str_Cpy(stScNogood.CHK_EXEC_NUM, g_szCHK_EXEC_NUM);
				Str_Cpy(stScNogood.CHK_SEC_CD, "30");
				Str_Cpy(stScNogood.MTR_NUM, stScBur.MTR_NUM);
				Str_Cpy(stScNogood.BURNER_NUM, stScBur.BURNER_NUM);
				Str_Cpy(stScNogood.CHK_SEC_NM, "배기통/톱");
				Card_Move("CHK_DTL");
				break;
				
			case BID_CHECK4:
				g_nWorkChkFlag = 12;
				g_lSCMoveFlag = 1;
				Str_Cpy(stScNogood.CHK_EXEC_NUM, g_szCHK_EXEC_NUM);
				Str_Cpy(stScNogood.CHK_SEC_CD, "90");
				Str_Cpy(stScNogood.MTR_NUM, stScBur.MTR_NUM);
				Str_Cpy(stScNogood.BURNER_NUM, stScBur.BURNER_NUM);
				Str_Cpy(stScNogood.CHK_SEC_NM, "보일러/기타점검");
				Card_Move("CHK_DTL");
				break;
			
			case BID_CLOSE:
				ON_EXIT();
				OnInit(INIT_MAIN);
				break;
				
			case BID_ENTRY:
				if( Save_Boil() )
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
				break;
			
			/*********************************/
			/* 보일러 수정                   */
			/*********************************/
			case BID_WRITE1:
				g_EditCtrl_ShowEditInput( Get_hDlgCtrlByID(EDT_DATA1), EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1)) );
				break;
			
			case BID_WRITE2:
				g_EditCtrl_ShowEditInput( Get_hDlgCtrlByID(EDT_DATA4), EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA4)) );
				break;	

			case BID_WRITE3:
				g_EditCtrl_ShowEditInput( Get_hDlgCtrlByID(EDT_DATA8), EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA8)) );
				break;

			case BID_SCHDL:
				Mem_Set((byte*)sztmp, 0x00, sizeof(sztmp));		
				Str_Cpy(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5)));
				Str_Cat(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)));
				Str_Cat(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)));

				k = Str_AtoI(sztmp);
			
				Load_Calendar_Card();
				d = CalendarDialog(&k);
				Unload_Calendar_Card();
				
				if(d == 0)
				{
					break;
				}
				else
				{
					Mem_Set((byte*)sztmp, 0x00, sizeof(sztmp));
					Str_ItoA ( d, sztmp, 10);
					
					Mem_Set((byte*)szYear, 0x00, sizeof(szYear));
					Mem_Set((byte*)szMonth, 0x00, sizeof(szMonth));
					Mem_Set((byte*)szDay, 0x00, sizeof(szDay));
					Mem_Cpy((byte *)szYear, (byte *)sztmp, 4);
					Mem_Cpy((byte *)szMonth, (byte *)sztmp+4, 2);
					Mem_Cpy((byte *)szDay, (byte *)sztmp+6, 2);
					
					EditCtrl_SetStr( Get_hDlgCtrlByID(EDT_DATA5), szYear );
					EditCtrl_SetStr( Get_hDlgCtrlByID(EDT_DATA6), szMonth );
					EditCtrl_SetStr( Get_hDlgCtrlByID(EDT_DATA7), szDay );
				}
				break;
				
			case BID_SAVE:
				if( EditCtrl_GetStrLen(Get_hDlgCtrlByID(EDT_DATA2)) == 0 )
				{
					MessageBoxEx (CONFIRM_OK, "용량을 입력해주세요.");
					break;
				}
				
				Mem_Set((byte *)sztmp, 0x00, sizeof(sztmp));
				Str_Cpy(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5)));
				Str_Cat(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)));
				Str_Cat(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)));
				
				if( Str_Len(sztmp) > 0 && Str_Len(sztmp) < 8 )
				{
					MessageBoxEx (CONFIRM_OK, "유효한 날짜 형식이 아닙니다.\n(ex: 2016. 01. 01)");
					break;
				}
				
				if(  Str_AtoI( sztmp ) > Time_GetDate() )
				{
					MessageBoxEx (CONFIRM_OK, "설치일자가 현재보다 이후로 \n등록할 수 없습니다.");
					break;
				}
				
				nLen = 0;
				nLen = g_GetUtf8Size(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1)));
				if( nLen > 50 )
				{
					Mem_Set( (byte*)szMsg, 0x00, sizeof(szMsg) );
					SPRINT(szMsg, "저장실패!\n(모델명은 한글 16자,\n영문,숫자 50자 까지만\n입력가능합니다.)\n[%d]", nLen, 0, 0);
					MessageBoxEx(CONFIRM_OK, szMsg);
					break;
				}
				
				nLen = 0;
				nLen = g_GetUtf8Size(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA4)));
				if( nLen > 30 )
				{
					Mem_Set( (byte*)szMsg, 0x00, sizeof(szMsg) );
					SPRINT(szMsg, "저장실패!\n(제조번호는 한글 10자,\n영문,숫자 30자 까지만\n입력가능합니다.)\n[%d]", nLen, 0, 0);
					MessageBoxEx(CONFIRM_OK, szMsg);
					break;
				}

				if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "기타") == 0 && Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA8)), "") == 0)
				{
					MessageBoxEx (CONFIRM_OK, "제조사명을 '기타' 외 \n 다른 제조사명을 입력 또는 선택해주세요.");
					break;
				}

				if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA5))) == 0 )
				{
					MessageBoxEx (CONFIRM_OK, "형식을 선택 해주세요.");
					break;
				}
			
				if( !Compare_Data() )
				{
					if( CHG_Boil() )
					{
						Find_Burner_Class_Cd();
					}
				}
				else
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
				break;
				
			case BID_CLOSE2:
				ON_EXIT();
				OnInit(INIT_MAIN);
				break;
				
			case BID_PROD:
				g_nProdMoveFlag = 0;
				Card_Move("SC_PRODCHG");
				break;
			
			/*********************************/
			/* 보일러 사진                   */
			/*********************************/
			case BID_BOIL_PHOTO1:
			case BID_BOIL_PHOTO2:
				Shoto_Photo(ID);
				break;
			case CMB_DATA2:
				PRINT("1235466",0,0,0);
				break;
		}
	}
	
	/*=======================================================================================
	함수명 : OnSelect
	기  능 : 테이블 클릭 이벤트
	Param  : 
	Return : 
	========================================================================================*/
	void OnSelect(long Index)
	{
		long index;
		char szDate[7];
		char szToday[7];
		long lActiveIndex;
		
		lActiveIndex = Dialog_GetActiveCtrlIndex(this->m_hDlg);
	
		if( INIT_MAIN == m_bFirst )
		{
			//현재 TBL이 선택되었는지를 확인
			if (DlgTbl_IsSelect(ID_TBLLIST))
			{
				// 현재 선택된 인덱스
				index = DlgTbl_GetActiveRow(ID_TBLLIST);
				m_lSelIndex = index - 1;
				g_nActRow = m_lpage*ROW + m_lSelIndex;
				
				Str_Cpy(stScBur.BURNER_NUM 		, DlgTbl_GetStr( ID_TBLLIST, m_lSelIndex, 1));
				Str_Cpy(stScBur.BURNER_MODEL_NM , DlgTbl_GetStr( ID_TBLLIST, m_lSelIndex, 2));
				Str_Cpy(stScBur.MTR_NUM		, DlgTbl_GetStr( ID_TBLLIST, m_lSelIndex, 4));

				m_lBtnActFlag = 1;
				g_nBoil_inst_cnt = 0;
				
				SetClickData();
				
				Set_Alarm();
			}
		}

		if( lActiveIndex == Get_iDlgCtrlByID(CMB_DATA2 + 1) )
		{
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql));
			Str_Cpy(m_szSql, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));	

			if( MATCH(m_szSql, "기타") )
			{
				//M("@dkjung >>> 기타 비교 #1");

				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_WRITE3), FALSE );
				DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(BID_WRITE3), TRUE);
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA8), FALSE );
				DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA8), TRUE);
			}
			else
			{
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_WRITE3), TRUE );
				DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(BID_WRITE3), FALSE);
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA8), TRUE );
				DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA8), FALSE);	
			}

		}
	}
	
	/*=======================================================================================
	함수명 : SetData
	기  능 : Data Setting
	Param  : 
	Return : 
	========================================================================================*/
	void SetData(void)
	{
		long i, idx, j, n;
		long k = ROW+1;
		long lstartidx;
		long lindex = 0;
		char sztmp[200];
		char szSql[800];
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();
		
		if( g_lSCMoveFlag == 0 )
		{
			Mem_Set((byte*)&stScBur, 0x00, sizeof(stScBur));
		}
		//페이지
		Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
		SPRINT(sztmp, " SELECT COUNT(*) FROM NORMAL_BUR WHERE CHK_EXEC_NUM = '%s' AND BURNER_KIND_NUM IN (201, 301) AND (INST_FLAG <> '30' or  INST_FLAG IS NULL) ",g_szCHK_EXEC_NUM, 0, 0   );
		g_Sql_RetInt( sztmp, &m_lTotpage );
		if( m_lTotpage % ROW > 0 )
		{
			m_lTotpage = (m_lTotpage / ROW) + 1;
		}
		else
		{
			m_lTotpage = m_lTotpage / ROW;
		}

		if(m_lIdxFlag == 1)
		{
			m_lpage = g_nActRow / ROW;
			m_lSelIndex = (g_nActRow % ROW);
			
			m_lIdxFlag = 0;
		}
		
		SPRINT(m_szCnt_page, "%d/%d", m_lpage+1, m_lTotpage, 0);

		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			goto Finally;
		}

		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, "SELECT MTR_ID_NUM, BURNER_NUM, BURNER_MODEL_NM, CHK_RSLT \
						 FROM NORMAL_BUR \
						WHERE CHK_EXEC_NUM = '%s' AND BURNER_KIND_NUM IN (201, 301) AND (INST_FLAG <> '30' or  INST_FLAG IS NULL ) \
						ORDER BY SEQ DESC, BURNER_NUM LIMIT ?, ?"
		            , g_szCHK_EXEC_NUM, 0, 0);

		hstmt = sql->CreateStatement(sql, szSql);
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		i = 0;
		lstartidx = m_lpage*ROW;
		sql->Bind(sql, i++, 'X', &lstartidx, 4, DECRYPT);
		j = m_lpage*ROW+ROW;
		sql->Bind(sql, i++, 'X', &j, 4, DECRYPT);
		
		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		// 등록된 코드 리스트를 페이지에 맞게 보여준다.
		for (i=0 ; i<ROW ; i++)
		{
			//자료가 없을때 화면을 클리어 시킨다.
			if( k == i )
			{
				k++;
				DlgTbl_SetStr ( ID_TBLLIST, i, 0, "" );
				DlgTbl_SetStr ( ID_TBLLIST, i, 1, "" );
				DlgTbl_SetStr ( ID_TBLLIST, i, 2, "" );
				DlgTbl_SetStr ( ID_TBLLIST, i, 3, "" );
				DlgTbl_SetStr ( ID_TBLLIST, i, 4, "" );
			}
			else
			{
				if(sql->Next(sql) == FALSE)
				{
					k = i + 1;
					DlgTbl_SetStr ( ID_TBLLIST, i, 0, "" );
					DlgTbl_SetStr ( ID_TBLLIST, i, 1, "" );
					DlgTbl_SetStr ( ID_TBLLIST, i, 2, "" );
					DlgTbl_SetStr ( ID_TBLLIST, i, 3, "" );
					DlgTbl_SetStr ( ID_TBLLIST, i, 4, "" );
					continue;
				}
				
				// 1.기물번호
				idx = 0;
				Mem_Set( (byte*)stScBur.MTR_ID_NUM, 0x00, sizeof(stScBur.MTR_ID_NUM) );
				sql->GetValue( sql, idx++, 'U', (long*) stScBur.MTR_ID_NUM          , 20 + 1, DECRYPT );
				DlgTbl_SetStr ( ID_TBLLIST, i, 0, stScBur.MTR_ID_NUM );
				
				// 2.연소기번호
				Mem_Set( (byte*)stScBur.BURNER_NUM, 0x00, sizeof(stScBur.BURNER_NUM) );
				sql->GetValue( sql, idx++, 'U', (long*) stScBur.BURNER_NUM            , 6 + 1, DECRYPT );
				DlgTbl_SetStr ( ID_TBLLIST, i, 1, stScBur.BURNER_NUM );
				
				// 3.보일러 모델명
				Mem_Set( (byte*)stScBur.BURNER_MODEL_NM, 0x00, sizeof(stScBur.BURNER_MODEL_NM) );
				sql->GetValue( sql, idx++, 'U', (long*) stScBur.BURNER_MODEL_NM       , 50+ 1, DECRYPT );
				DlgTbl_SetStr ( ID_TBLLIST, i, 2, stScBur.BURNER_MODEL_NM );
				
				// 4.여부, Decode(CHK_RSLT,'Y','적합','N','부적합','미확인')
				Mem_Set( (byte*)stScBur.CHK_RSLT, 0x00, sizeof(stScBur.CHK_RSLT) );
				sql->GetValue( sql, idx++, 'U', (long*) stScBur.CHK_RSLT              , 20+ 1, DECRYPT );
				if( Str_Cmp(stScBur.CHK_RSLT, "Y") == 0 )
				{
					EditCtrl_SetForeColorEx( DlgTbl_GetHandle 	( ID_TBLLIST, i, 3 ), TXTFRCOLOR);
					DlgTbl_SetStr ( ID_TBLLIST, i, 3, "적합" );
				}
				else if( Str_Cmp(stScBur.CHK_RSLT, "N") == 0 )
				{
					EditCtrl_SetForeColorEx( DlgTbl_GetHandle 	( ID_TBLLIST, i, 3 ), RED);
					DlgTbl_SetStr ( ID_TBLLIST, i, 3, "부적합" );
				}
				else
				{
					EditCtrl_SetForeColorEx( DlgTbl_GetHandle 	( ID_TBLLIST, i, 3 ), TXTFRCOLOR);
					DlgTbl_SetStr ( ID_TBLLIST, i, 3, "미확인" );
				}
				
				// 5.보일러 모델명
				Mem_Set( (byte*)stScBur.MTR_NUM, 0x00, sizeof(stScBur.MTR_NUM) );
				sql->GetValue( sql, idx++, 'U', (long*) stScBur.MTR_NUM       , 9+ 1, DECRYPT );
				DlgTbl_SetStr ( ID_TBLLIST, i, 4, stScBur.MTR_NUM );
			}
		}	
Finally:
		DelSqLite(sql);
		
		if(m_lTotpage > 0)
		{
			if( m_lSelIndex == -1 )
			{
				m_lSelIndex = 0;
			}

			DlgTbl_SetActive(ID_TBLLIST , m_lSelIndex+1 );
			DlgTbl_SetRowColor(ID_TBLLIST, m_lSelIndex+1, TABLEACTIVE_COLOR);
			
			Str_Cpy(stScBur.BURNER_NUM 		, DlgTbl_GetStr( ID_TBLLIST, m_lSelIndex, 1));
			Str_Cpy(stScBur.BURNER_MODEL_NM , DlgTbl_GetStr( ID_TBLLIST, m_lSelIndex, 2));
			Str_Cpy(stScBur.MTR_NUM		, DlgTbl_GetStr( ID_TBLLIST, m_lSelIndex, 4));

			SetClickData();
			
			g_nActRow = m_lpage*ROW + m_lSelIndex;
		}
		else
		{
			Clear_Screen();
		}
		
		return;
	}
	
	/*=======================================================================================
	함수명 : SetClickData
	기  능 : 계량기를 선택했을때 데이터 새로 셋팅
	Param  : 
	Return : 
	========================================================================================*/	
	void SetClickData(void)
	{
		long i, idx, j;
		long n;
		long k = ROW+1;
		long lstartidx;
		long lindex = 0;
		char szSql[500];
		char sztmp[300];
		char szDate[7];
		char szToday[7];
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();
		
		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			goto Finally;
		}

		//BURNER_KIND_NUM = 201 || 301 이면 보일러, 나머지는 연소기
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT MAKER_NUM, MAKE_NUM, BOILER_FORM, BURNER_INST_YMD, BURNER_CAPA \
		                     , BURNER_CAPA_UNIT, INST_LOC, BEFO_SUPPLY_CHK_RSLT, CHG_FLAG, BEFO_SUPPLY_CHK_YMD \
		                     , BEFO_SUPPLY_CHKER_NM, BOILER_INST_FIRM_NM, LOC_RSLT, AIR_RSLT, PIPE_RSLT \
		                     , ETC_RSLT, BURNER_KIND_NUM, BURNER_NUM, MTR_NUM, CHK_RSLT \
		                  FROM NORMAL_BUR \
		                 WHERE CHK_EXEC_NUM = ? AND BURNER_NUM = ? AND BURNER_KIND_NUM IN (201, 301) "
		            , 0, 0, 0);
		
		hstmt = sql->CreateStatement(sql, szSql);
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		i = 0;
		sql->Bind(sql, i++, 'U', (long*)g_szCHK_EXEC_NUM, 12, DECRYPT);
		sql->Bind(sql, i++, 'U', (long*)stScBur.BURNER_NUM, 12, DECRYPT);
		
		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		if(sql->Next(sql) == TRUE)
		{
			idx = 0;
			
			// 1. 제조사명
			Mem_Set( (byte*)stScBur.MAKER_NUM, 0x00, sizeof(stScBur.MAKER_NUM) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.MAKER_NUM, 5 + 1, DECRYPT );

			// 2. 제조번호
			Mem_Set( (byte*)stScBur.MAKE_NUM, 0x00, sizeof(stScBur.MAKE_NUM) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.MAKE_NUM, 30+ 1, DECRYPT );	
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA22)   , stScBur.MAKE_NUM);
			
			// 3. 형식
			Mem_Set( (byte*)stScBur.BOILER_FORM, 0x00, sizeof(stScBur.BOILER_FORM) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BOILER_FORM, 20+ 1, DECRYPT );
			n = g_SearchCD( stScBur.BOILER_FORM, SCBOIL_FORM );
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA23), SCBOIL_FORM[n].Str);
			
			// 4. 설치일자
			Mem_Set( (byte*)szDate, 0x00, sizeof(szDate) );
			Mem_Set( (byte*)szToday, 0x00, sizeof(szToday) );
			Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
			Mem_Set( (byte*)stScBur.BURNER_INST_YMD, 0x00, sizeof(stScBur.BURNER_INST_YMD) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BURNER_INST_YMD, 8 + 1, DECRYPT );
			g_Str_DateType( sztmp, stScBur.BURNER_INST_YMD);
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA24)   , sztmp);
			
			// 5. 용량
			Mem_Set( (byte*)stScBur.BURNER_CAPA, 0x00, sizeof(stScBur.BURNER_CAPA) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BURNER_CAPA, 10+ 1, DECRYPT );
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA25)   , stScBur.BURNER_CAPA);
			
			// 6. 단위
			Mem_Set( (byte*)stScBur.BURNER_CAPA_UNIT, 0x00, sizeof(stScBur.BURNER_CAPA_UNIT) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BURNER_CAPA_UNIT, 2+ 1, DECRYPT );
			n = g_SearchCD( stScBur.BURNER_CAPA_UNIT, SCBOIL_CAPA );
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA26), SCBOIL_CAPA[n].Str);
			
			// 7. 설치위치
			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
			Mem_Set( (byte*)stScBur.INST_LOC, 0x00, sizeof(stScBur.INST_LOC) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.INST_LOC, 2+ 1, DECRYPT );
			
			// 8. 공급전결과
			Mem_Set( (byte*)stScBur.BEFO_SUPPLY_CHK_RSLT, 0x00, sizeof(stScBur.BEFO_SUPPLY_CHK_RSLT) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BEFO_SUPPLY_CHK_RSLT, 2 + 1, DECRYPT );
				
			if( Str_Cmp(stScBur.BEFO_SUPPLY_CHK_RSLT, "10") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA28), "미점검");
			}
			else if( Str_Cmp(stScBur.BEFO_SUPPLY_CHK_RSLT, "20") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA28), "적합");
			}
			else if( Str_Cmp(stScBur.BEFO_SUPPLY_CHK_RSLT, "21") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA28), "부적합");
			}
			else if( Str_Cmp(stScBur.BEFO_SUPPLY_CHK_RSLT, "30") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA28), "현지시정");
			}
			else if( Str_Cmp(stScBur.BEFO_SUPPLY_CHK_RSLT, "40") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA28), "제외");
			}
			else if( Str_Cmp(stScBur.BEFO_SUPPLY_CHK_RSLT, "50") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA28), "점검미실시");
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA28), "");
			}
				
			// 9. 구분
			Mem_Set( (byte*)stScBur.CHG_FLAG, 0x00, sizeof(stScBur.CHG_FLAG) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.CHG_FLAG, 1 + 1, DECRYPT );
			n = g_SearchCD( stScBur.CHG_FLAG, SCCHG_FLAG );
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA29), SCCHG_FLAG[n].Str);
			
			// 10. 공급전점검
			Mem_Set( (byte*)stScBur.BEFO_SUPPLY_CHK_YMD, 0x00, sizeof(stScBur.BEFO_SUPPLY_CHK_YMD) );
			Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BEFO_SUPPLY_CHK_YMD, 8 + 1, DECRYPT );\
			g_Str_DateType( sztmp, stScBur.BEFO_SUPPLY_CHK_YMD);
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA30)   , sztmp);
			
			// 11. 점검자
			Mem_Set( (byte*)stScBur.BEFO_SUPPLY_CHKER_NM, 0x00, sizeof(stScBur.BEFO_SUPPLY_CHKER_NM) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BEFO_SUPPLY_CHKER_NM, 12+ 1, DECRYPT );	
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA31)   , stScBur.BEFO_SUPPLY_CHKER_NM);
			
			// 12. 시공업체
			Mem_Set( (byte*)stScBur.BOILER_INST_FIRM_NM, 0x00, sizeof(stScBur.BOILER_INST_FIRM_NM) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BOILER_INST_FIRM_NM, 20+ 1, DECRYPT );
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA32)   , stScBur.BOILER_INST_FIRM_NM);
			
			// 13. 보일러위치점검결과
			Mem_Set( (byte*)stScBur.LOC_RSLT, 0x00, sizeof(stScBur.LOC_RSLT) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.LOC_RSLT, 20+ 1, DECRYPT );	
			
			// 14. 급환기구점검결과
			Mem_Set( (byte*)stScBur.AIR_RSLT, 0x00, sizeof(stScBur.AIR_RSLT) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.AIR_RSLT, 32+ 1, DECRYPT );
				
			// 15. 배기통톱점검결과
			Mem_Set( (byte*)stScBur.PIPE_RSLT, 0x00, sizeof(stScBur.PIPE_RSLT) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.PIPE_RSLT, 20+ 1, DECRYPT );
			
			// 16. 기타점검결과
			Mem_Set( (byte*)stScBur.ETC_RSLT, 0x00, sizeof(stScBur.ETC_RSLT) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.ETC_RSLT, 9 + 1, DECRYPT );
			
			// 17. 연소기종류
			Mem_Set( (byte*)stScBur.BURNER_KIND_NUM, 0x00, sizeof(stScBur.BURNER_KIND_NUM) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BURNER_KIND_NUM, 3+ 1, DECRYPT );
			
			// 18. 연소기번호
			Mem_Set( (byte*)stScBur.BURNER_NUM, 0x00, sizeof(stScBur.BURNER_NUM) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.BURNER_NUM, 6+ 1, DECRYPT );
			
			// 19. 계량기번호
			Mem_Set( (byte*)stScBur.MTR_NUM, 0x00, sizeof(stScBur.MTR_NUM) );
			sql->GetValue( sql, idx++, 'U', (long*) stScBur.MTR_NUM, 9 + 1, DECRYPT );
				
			// 20. 점검 결과
			Mem_Set( (byte*)m_szChk_Rslt, 0x00, sizeof(m_szChk_Rslt) );
			sql->GetValue( sql, idx++, 'U', (long*) m_szChk_Rslt, 1 + 1, DECRYPT );	
		}
		
Finally:
		DelSqLite(sql);
		
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
		SPRINT(szSql, "SELECT MAKER_NM FROM USE_MAKER WHERE MAKER_FLAG = '50' AND MAKER_NUM = '%s'  ",stScBur.MAKER_NUM, 0, 0   );
		g_Sql_RetStr( szSql, 20, sztmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA21)   , sztmp);
		
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );		
		SPRINT(szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30028' AND CODE_ITEM = '%s'  ",stScBur.INST_LOC, 0, 0   );
		g_Sql_RetStr( szSql, 20, sztmp );			
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA27), sztmp);
		
		/*
		if( m_lBtnActFlag == 1 )
		{
			if( Str_Cmp(m_szChk_Rslt, "") == 0 || Str_Cmp(m_szChk_Rslt, "N") == 0 )
			{
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_DELETE), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_DELETE), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_NEW), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_NEW), FALSE );
			}
			else
			{
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_DELETE), FALSE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_DELETE), TRUE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_NEW), FALSE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_NEW), TRUE );
			}
			
			// 임의의 곳으로 액티브 포커스 이동.
			Dialog_SetActiveCtrl(this->m_hDlg, Get_iDlgCtrlByID(BID_PREVLST));
		}
		*/
		
		if( Str_Cmp(m_szChk_Rslt, "") == 0 || Str_Cmp(m_szChk_Rslt, "N") == 0 )
		{
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_DELETE), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_DELETE), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_NEW), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_NEW), FALSE );
		}
		else
		{
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_DELETE), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_DELETE), TRUE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_NEW), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_NEW), TRUE );
		}
		
		// 임의의 곳으로 액티브 포커스 이동.
		Dialog_SetActiveCtrl(this->m_hDlg, Get_iDlgCtrlByID(BID_PREVLST));
		
		return;
	}

	/*=======================================================================================
	함수명 : BOIL_DRAW
	기  능 : 
	Param  : 
	Return : 
	========================================================================================*/		
	void BOIL_DRAW(void)
	{
		long lCount = 0;
		char szSql[300];
	
		EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA33), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA34), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA35), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA36), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA37), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA38), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA39), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA40), EDITALIGN_MIDDLE|EDITALIGN_CENTER);
		
		/********************************/
		/* 보일러위치                   */
		/********************************/
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL \
		                 WHERE CHK_EXEC_NUM ='%s' AND CHK_SEC_CD ='10' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' "
				    , g_szCHK_EXEC_NUM, stScBur.MTR_NUM, stScBur.BURNER_NUM);
		g_Sql_RetInt(szSql, &lCount);
		
		if( lCount > 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA34), "부적합");	
			EditCtrl_SetForeColorEx( Get_hDlgCtrlByID(TXT_DATA34), RED);
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA34), "적합");	
			EditCtrl_SetForeColorEx( Get_hDlgCtrlByID(TXT_DATA34), TXTFRCOLOR);
		}
		
		/********************************/
		/* 급환기구                     */
		/********************************/
		lCount = 0;
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL \
		                 WHERE CHK_EXEC_NUM ='%s' AND CHK_SEC_CD ='20' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' "
					, g_szCHK_EXEC_NUM, stScBur.MTR_NUM, stScBur.BURNER_NUM);
		g_Sql_RetInt(szSql, &lCount);
		
		if( lCount > 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA36), "부적합");	
			EditCtrl_SetForeColorEx( Get_hDlgCtrlByID(TXT_DATA36), RED);
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA36), "적합");	
			EditCtrl_SetForeColorEx( Get_hDlgCtrlByID(TXT_DATA36), TXTFRCOLOR);
		}
		
		/********************************/
		/* 배기통/톱                    */
		/********************************/
		lCount = 0;
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL \
		                 WHERE CHK_EXEC_NUM ='%s' AND CHK_SEC_CD ='30' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' "
					, g_szCHK_EXEC_NUM, stScBur.MTR_NUM, stScBur.BURNER_NUM);
		g_Sql_RetInt(szSql, &lCount);
		
		if( lCount > 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA38), "부적합");	
			EditCtrl_SetForeColorEx( Get_hDlgCtrlByID(TXT_DATA38), RED);
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA38), "적합");	
			EditCtrl_SetForeColorEx( Get_hDlgCtrlByID(TXT_DATA38), TXTFRCOLOR);
		}
		
		/********************************/
		/* 기타                         */
		/********************************/
		lCount = 0;
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL \
		                 WHERE CHK_EXEC_NUM ='%s' AND CHK_SEC_CD ='90' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' "
					, g_szCHK_EXEC_NUM, stScBur.MTR_NUM, stScBur.BURNER_NUM);
		g_Sql_RetInt(szSql, &lCount);
		
		if( lCount > 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA40), "부적합");	
			EditCtrl_SetForeColorEx( Get_hDlgCtrlByID(TXT_DATA40), RED);
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA40), "적합");	
			EditCtrl_SetForeColorEx( Get_hDlgCtrlByID(TXT_DATA40), TXTFRCOLOR);
		}
		
		ON_DRAW();
		
		return;
	}
	
	/*=======================================================================================
	함수명 : BOILCHG_DRAW
	기  능 : 
	Param  : 
	Return : 
	========================================================================================*/		
	void BOILCHG_DRAW(void)
	{
		char szYear[5];
		char szMonth[3];
		char szDay[3];
		char sztmp[50];
		char szSql[300];
		long i;
	
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA2), stScBur.MTR_ID_NUM);			//기물번호

		// 1. 종류
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
		SPRINT(szSql, "SELECT BURNER_KIND_NM FROM BURNER_KIND WHERE BURNER_KIND_NUM = '%s' ",stScBur.BURNER_KIND_NUM, 0, 0   );
		g_Sql_RetStr( szSql, 20, sztmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , sztmp);
		
		// 2. 제조사명
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );

		SPRINT(szSql, "SELECT MAKER_NM FROM USE_MAKER WHERE MAKER_FLAG = '50' AND MAKER_NUM = '%s' ",stScBur.MAKER_NUM, 0, 0   );
		g_Sql_RetStr( szSql, 20, sztmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2)   , sztmp);
		
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1), stScBur.BURNER_MODEL_NM);	//모델명
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA2), stScBur.BURNER_CAPA);		//용량
			
		// 3. 설치일자
		Mem_Set((byte*)szYear, 0x00, sizeof(szYear));
		Mem_Set((byte*)szMonth, 0x00, sizeof(szMonth));
		Mem_Set((byte*)szDay, 0x00, sizeof(szDay));
		Mem_Cpy((byte *)szYear, (byte *)stScBur.BURNER_INST_YMD, 4);
		Mem_Cpy((byte *)szMonth, (byte *)stScBur.BURNER_INST_YMD+4, 2);
		Mem_Cpy((byte *)szDay, (byte *)stScBur.BURNER_INST_YMD+6, 2);
		
		EditCtrl_SetStr( Get_hDlgCtrlByID(EDT_DATA5), szYear );
		EditCtrl_SetStr( Get_hDlgCtrlByID(EDT_DATA6), szMonth );
		EditCtrl_SetStr( Get_hDlgCtrlByID(EDT_DATA7), szDay );

		// 4. 제조번호
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA4), stScBur.MAKE_NUM);	
		
		// 5. 용량		
		i = g_SearchCD( stScBur.BURNER_CAPA_UNIT, SCBOIL_CAPA );
		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3), SCBOIL_CAPA[i].Str);
		
		// 6. 구분
		i = g_SearchCD( stScBur.CHG_FLAG, SCCHG_FLAG );
		if( i == -1 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA41), SCCHG_FLAG[1].Str);
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA41), SCCHG_FLAG[i].Str);
		}
		
		// 7. 설치위치
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
		SPRINT(szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30028' AND CODE_ITEM = '%s'  ",stScBur.INST_LOC, 0, 0   );
		g_Sql_RetStr( szSql, 20, sztmp );			
		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA4), sztmp);
		
		// 8. 형식
		i = g_SearchCD( stScBur.BOILER_FORM, SCBOIL_FORM );
		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA5), SCBOIL_FORM[i].Str);

		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "기타") == 0 )
		{
			//M("@dkjung >>> 기타 비교 #2");
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_WRITE3), FALSE );
			DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(BID_WRITE3), TRUE);
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA8), FALSE );
			DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA8), TRUE);
			// EDT_DATA8
		}
		else
		{
			
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_WRITE3), TRUE );
			DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(BID_WRITE3), FALSE);
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA8), TRUE );
			DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA8), FALSE);
		}
		
		SetStruct();
		
		ON_DRAW();
		
		return;
	}
	
	/*=======================================================================================
	함수명 : Update_Result
	기  능 : 보일러 점검 결과 Update
	Param  : 
	Return : 
	========================================================================================*/	
	void Update_Result(void)
	{
		long lBurCnt = 0;
		long lNogoodCnt = 0;
		long lLocCnt = 0;
		long lAirCnt = 0;
		long lPipeCnt = 0;
		long lEtcCnt = 0;
		long lDelCnt = 0;
		long lChkCnt = 0;
		long i = 0;
		char szSql[300];
		char szBurner_Num[20];
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();

		hdb = sql->Open(sql);
		
		if( hdb == NULL )
		{
			goto Finally;
		}

		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_BUR WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_KIND_NUM IN (201, 301)", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, 0);
		g_Sql_RetInt2( sql, szSql, &lBurCnt );

		for(i=0;i<lBurCnt;i++)
		{
			//2018-09-03 쿼리 수정
			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			Mem_Set( (byte*)szBurner_Num, 0x00, sizeof(szBurner_Num) );
			SPRINT(szSql, " SELECT BURNER_NUM FROM NORMAL_BUR WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_KIND_NUM IN (201, 301) limit %d, 1", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, i);
			g_Sql_RetStr2( sql, szSql, 7,szBurner_Num );

			//보일러위치
			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' AND CHK_SEC_CD ='10' ", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, szBurner_Num);
			g_Sql_RetInt2( sql, szSql, &lLocCnt );
			lNogoodCnt += lLocCnt;

			//급환기구
			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' AND CHK_SEC_CD ='20' ", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, szBurner_Num);
			g_Sql_RetInt2( sql, szSql, &lAirCnt );
			lNogoodCnt += lAirCnt;

			//배기통톱
			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' AND CHK_SEC_CD ='30' ", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, szBurner_Num);
			g_Sql_RetInt2( sql, szSql, &lPipeCnt );
			lNogoodCnt += lPipeCnt;

			//기타
			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' AND CHK_SEC_CD ='90' ", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, szBurner_Num);
			g_Sql_RetInt2( sql, szSql, &lEtcCnt );
			lNogoodCnt += lEtcCnt;
		}

		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND SUBSTR(BURNER_NUM,1,1) = '1'", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, 0);
		g_Sql_RetInt2( sql, szSql, &lDelCnt );

Finally:
	
		DelSqLite(sql);

		if( lDelCnt > 0 && lDelCnt > lNogoodCnt && lNogoodCnt == 0 )
		{
			Str_Cpy( stSc.BO_RSLT, "Y" );
		}
		else if( lDelCnt > 0 && lDelCnt > lNogoodCnt && lNogoodCnt > 0 )
		{
			Str_Cpy( stSc.BO_RSLT, "N" );
			Str_Cpy( stSc.NOGOOD_RSLT, "N" );
		}
		else
		{
			if( lNogoodCnt > 0 )
			{
				Str_Cpy( stSc.BO_RSLT, "N" );
				Str_Cpy( stSc.NOGOOD_RSLT, "N" );
			}
			else
			{
				Str_Cpy( stSc.BO_RSLT, "Y" );
			}
		}
		
		return;
	}
	
	/*=======================================================================================
	함수명 : Save_Boil
	기  능 : 보일러 점검 확인
	Param  : 
	Return : 
	========================================================================================*/
	bool Save_Boil(void)
	{
		char szSql[300];
		bool ret = TRUE;
		long idx;
		long lLocCnt, lAirCnt, lPipeCnt, lEtcCnt;
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();

		// 1. 보일러위치
		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA34)), "적합") == 0 )
		{
			Str_Cpy( stScBur.LOC_RSLT, "Y" );
		}
		else if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA34)), "부적합") == 0 )
		{
			Str_Cpy( stScBur.LOC_RSLT, "N" );
		}
		
		// 2. 급환기구
		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA36)), "적합") == 0 )
		{
			Str_Cpy( stScBur.AIR_RSLT, "Y" );
		}
		else if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA36)), "부적합") == 0 )
		{
			Str_Cpy( stScBur.AIR_RSLT, "N" );
		}
		
		// 3. 배기통/톱
		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA38)), "적합") == 0 )
		{
			Str_Cpy( stScBur.PIPE_RSLT, "Y" );
		}
		else if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA38)), "부적합") == 0 )
		{
			Str_Cpy( stScBur.PIPE_RSLT, "N" );
		}
		
		// 4. 기타
		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA40)), "적합") == 0 )
		{
			Str_Cpy( stScBur.ETC_RSLT, "Y" );
		}
		else if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA40)), "부적합") == 0 )
		{
			Str_Cpy( stScBur.ETC_RSLT, "N" );
		}
		
		// 5. 보일러위치
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' AND CHK_SEC_CD ='10' ", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, stScBur.BURNER_NUM);
		g_Sql_RetInt(szSql, &lLocCnt);
		
		// 6. 급환기구
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' AND CHK_SEC_CD ='20' ", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, stScBur.BURNER_NUM);
		g_Sql_RetInt(szSql, &lAirCnt);
		
		// 7. 배기통톱
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' AND CHK_SEC_CD ='30' ", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, stScBur.BURNER_NUM);
		g_Sql_RetInt(szSql, &lPipeCnt);
		
		// 8. 기타
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, " SELECT COUNT(*) FROM NORMAL_NOGOOD_DETAL WHERE CHK_EXEC_NUM ='%s' AND MTR_NUM = '%s' AND BURNER_NUM = '%s' AND CHK_SEC_CD ='90' ", g_szCHK_EXEC_NUM, stScBur.MTR_NUM, stScBur.BURNER_NUM);
		g_Sql_RetInt(szSql, &lEtcCnt);	
		if( lLocCnt > 0 || lAirCnt > 0 || lPipeCnt > 0 || lEtcCnt > 0 )
		{
			Str_Cpy(stScBur.CHK_RSLT, "N" );
		}
		else
		{
			Str_Cpy(stScBur.CHK_RSLT, "Y" );
		}

		hdb = sql->Open(sql);
		
		if( hdb == NULL )
		{
			ret = FALSE;
			goto Finally;
		}
	
		hstmt = sql->CreateStatement(sql, " UPDATE NORMAL_BUR \
		                                       SET LOC_RSLT = ?, AIR_RSLT = ?, PIPE_RSLT = ?, ETC_RSLT = ?, CHK_RSLT = ? \
                                                 , BLD_NUM = ?, INST_PLACE_NUM = ?, CHK_TYPE = ?, CHK_YEAR = ?, CHK_ORDER = ? \
                                                 , OBJ_YM = ?, PLAN_YM = ?, PDA_IP = ?, UPD_EMPID = ? \
                                             WHERE CHK_EXEC_NUM = ? AND BURNER_NUM = ? AND MTR_NUM = ? AND BURNER_KIND_NUM IN (201, 301) ");

		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			ret = FALSE;
			goto Finally;
		}
		
		idx = 0;
		sql->Bind(sql, idx++, 'U', (long *)stScBur.LOC_RSLT			,1	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.AIR_RSLT			,1	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.PIPE_RSLT		,1	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.ETC_RSLT			,1	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.CHK_RSLT			,1	,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)stSc.BLD_NUM       		,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stSc.INST_PLACE_NUM		,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stSc.CHK_TYPE      		,2	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stSc.CHK_YEAR      		,4	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stSc.CHK_ORDER     		,2	,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)stSc.OBJ_YM        		,6	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stSc.PLAN_YM       		,6	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long*)stUserinfo.szpda_ip		,32 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long*)stUserinfo.szemployee_id  ,20 ,DECRYPT);

		sql->Bind(sql, idx++, 'U', (long *)g_szCHK_EXEC_NUM       	,12	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_NUM       ,6	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.MTR_NUM       	,10	,DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			ret = FALSE;
			goto Finally;
		}
		
Finally:
		DelSqLite(sql);
		return ret;
	}
	
	/*=======================================================================================
	함수명 : Del_Boil
	기  능 : 보일러 삭제
	Param  : 
	Return : 
	========================================================================================*/
	long Del_Boil(void)
	{
		char szSql[300];
		char sztmp[10];
		long idx;
		long lCnt;
		long ret = -1;
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();
		
		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			goto Finally;
		}
		
		if( Str_Cmp(stScBur.CHG_FLAG, "1") != 0 )
		{
			// 설치구분  > 삭제(3)로 밖아놓기 , decode(CHG_FLAG,'1','신규','2','수정','3','삭제')
			Str_Cpy(stScBur.CHG_FLAG, "3" );
			Str_Cpy(stScBur.INST_FLAG, "30" );
			Str_Cpy(stScBur.SEND_YN, "S" );
		
			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			SPRINT(szSql, "UPDATE NORMAL_BUR \
			                  SET BURNER_REMOV_YMD = ?, CHG_FLAG = ?, INST_FLAG = ?, SEND_YN = ?, PDA_IP = ? \
			                    , UPD_EMPID = ? \
                            WHERE CHK_EXEC_NUM = ? AND BURNER_NUM = ? AND MTR_NUM = ? AND BURNER_KIND_NUM IN (201, 301)"
						, 0, 0, 0);
		}
		else
		{
			// 보일러
			Mem_Set((byte*)szSql ,0x00, sizeof(szSql) );
			SPRINT(szSql, " DELETE FROM NORMAL_BUR \
			                 WHERE CHK_EXEC_NUM ='%s' AND BURNER_NUM = '%s' AND MTR_NUM = '%s' AND BURNER_KIND_NUM IN (201, 301) "
						, g_szCHK_EXEC_NUM, stScBur.BURNER_NUM, stScBur.MTR_NUM);
			
			g_Sql_DirectExecute( szSql );
			
			goto Finally2;
		}
		
		hstmt = sql->CreateStatement(sql, szSql);
		
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}
		
		idx = 0;
		Mem_Set((byte*)sztmp ,0x00, sizeof(sztmp) );
		Str_ItoA(Time_GetDate(), sztmp, 10);
		sql->Bind(sql, idx++, 'U', (long *)sztmp	                ,8 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.CHG_FLAG			,2	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.INST_FLAG		,2	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.SEND_YN			,1	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szpda_ip		,32,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id  ,20,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)g_szCHK_EXEC_NUM			,12 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_NUM		,6	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.MTR_NUM			,9	,DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			ret = FALSE;
			goto Finally;
		}
		
Finally2:
		ret = 1;	
		MessageBoxEx (CONFIRM_OK, "삭제 되었습니다.");
Finally:
		//sql->Commit(sql);
Finally3:		
		DelSqLite(sql);
		return ret;
	}
	
	/*=======================================================================================
	함수명 : CHG_Boil
	기  능 : 보일러 수정
	Param  : 
	Return : 
	========================================================================================*/
	bool CHG_Boil(void)
	{
		char szSql[300];
		char sztmp[100];
		long idx;
		long i;
		long lCnt ;
		bool ret = TRUE;
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();
		
		if(stScBur.CHG_FLAG[0] != '1' )
		{
			stScBur.CHG_FLAG[0] = '2';
			
			Mem_Set( (byte*)stScBur.INST_FLAG, 0x00, sizeof(stScBur.INST_FLAG) );
			Str_Cpy( stScBur.INST_FLAG, "20" );
			
			Mem_Set( (byte*)stScBur.DATA_FLAG, 0x00, sizeof(stScBur.DATA_FLAG) );
			Str_Cpy( stScBur.DATA_FLAG, "20" );
		}
		
		// 1. 기물번호
		Str_Cpy( stScBur.MTR_ID_NUM, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA2)) );	
		
		// 2. 모델명
		Str_Cpy( stScBur.BURNER_MODEL_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1)) );	
		
		// 3. 용량
		Str_Cpy( stScBur.BURNER_CAPA, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA2)) );	
		
		// 4. 설치일자
		Mem_Set((byte *)sztmp, 0x00, sizeof(sztmp));
		Str_Cpy(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5)));
		Str_Cat(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)));
		Str_Cat(sztmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)));
		Str_Chg(sztmp, STRCHG_DEL_NONDIGIT);
		Str_Cpy(stScBur.BURNER_INST_YMD, sztmp );		
		
		// 5. 제조번호
		Str_Cpy(stScBur.MAKE_NUM, 		 EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA4)));	
		
		// 6. 종류
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
		Str_Cpy(stScBur.BURNER_KIND_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)));
		SPRINT(szSql, "SELECT BURNER_KIND_NUM FROM BURNER_KIND WHERE BURNER_KIND_NM = '%s'  ", stScBur.BURNER_KIND_NM, 0, 0   );
		g_Sql_RetStr( szSql, 5, stScBur.BURNER_KIND_NUM );
		
		// 7. BURNER_CLASS_NM
		SPRINT(szSql, "SELECT BURNER_CLASS_CD FROM BURNER_KIND WHERE BURNER_KIND_NM = '%s'  ", stScBur.BURNER_KIND_NM, 0, 0   );
		g_Sql_RetStr( szSql, 2, stScBur.BURNER_CLASS_CD );
		i = g_SearchStr(stScBur.BURNER_CLASS_CD, BURNERCLASS);
		if (i > -1)
			Str_Cpy(stScBur.BURNER_CLASS_NM, BURNERCLASS[i].Str);
		
		// 8. 제조사명
		//[TODO] 제조사명 기타인 경우, 갱신 처리
		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "기타") == 0 )
		{
			//M("@dkjung >>> 기타 비교 #3");
			// Str_Cpy(stScBur.MAKER_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));
			Str_Cpy(stScBur.MAKER_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA8)));
			Str_Cpy(stScBur.MAKER_NUM, ETC_MAKER_NUM);
			//MAKER_NUM 50999 직접입력한 제조사명
			//PRINT("@dkjung >>> stScBur.MAKER_NM : %s",stScBur.MAKER_NM,0,0);

			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			SPRINT(szSql, "SELECT COUNT(*) FROM USE_MAKER WHERE BOILER_SEQ  = 0 AND MAKER_FLAG ='50'", 0, 0, 0);
			g_Sql_RetInt( szSql, &lCnt );			

			if( lCnt > 0)
			{
				SQLITE sql = NewSqLite();
				hdb = sql->Open(sql);
		
				if( hdb == NULL )
				{
					ret = FALSE;
					goto Finally;
				}
				
				memset( (byte*)szSql, 0x00, sizeof(szSql) );
				sprintf(szSql, "UPDATE USE_MAKER SET MAKER_NUM ='%s', MAKER_NM = ? WHERE MAKER_NUM ='%s' AND MAKER_FLAG ='50'", ETC_MAKER_NUM, ETC_MAKER_NUM);

				hstmt = sql->CreateStatement(sql, szSql);
				if( hstmt == NULL )
				{
					PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
					ret = FALSE;
					goto Finally2;
				}

				idx = 0;
				sql->Bind(sql, idx++, 'U', (long *)stScBur.MAKER_NM		   ,60	,DECRYPT);

				if(sql->Execute(sql) == FALSE)
				{
					PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
					ret = FALSE;
					goto Finally2;
				}

			Finally2:
				DelSqLite(sql);										  
			}
			else
			{
				SQLITE sql = NewSqLite();
				hdb = sql->Open(sql);
			
				if( hdb == NULL )
				{
					ret = FALSE;
					goto Finally;
				}

				memset( (byte*)szSql, 0x00, sizeof(szSql) );
				sprintf(szSql, "INSERT INTO USE_MAKER (MAKER_NUM, MAKER_FLAG,MAKER_NM,BOILER_SEQ) VALUES ('%s','50', ?, 0)", ETC_MAKER_NUM);

				hstmt = sql->CreateStatement(sql, szSql);

				if( hstmt == NULL )
				{
					PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
					ret = FALSE;
					goto Finally;
				}

				idx = 0;
				sql->Bind(sql, idx++, 'U', (long *)stScBur.MAKER_NM		   ,60	,DECRYPT);
				

				if(sql->Execute(sql) == FALSE)
				{
					PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
					ret = FALSE;
					goto Finally;
				}	
				
			}
		
		}
		else
		{
			Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
			Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
			Str_Cpy(stScBur.MAKER_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));
			SPRINT(szSql, "SELECT MAKER_NUM FROM USE_MAKER WHERE MAKER_FLAG = '50' AND MAKER_NM = '%s' ", stScBur.MAKER_NM, 0, 0   );
			g_Sql_RetStr( szSql, 5, stScBur.MAKER_NUM );
			PRINT("stScBur.MAKER_NM : %s",stScBur.MAKER_NM,0,0);
		}
		

		// 9. 보일러 위치구분
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		Mem_Set( (byte*)stScBur.INST_LOC_NM, 0x00, sizeof(stScBur.INST_LOC_NM) );
		Str_Cpy(stScBur.INST_LOC_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA4)));
		SPRINT(szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30028' AND ITEM_KNAME = '%s' ", stScBur.INST_LOC_NM, 0, 0   );
		g_Sql_RetStr( szSql, 2, stScBur.INST_LOC );

		// 10. 단위
		i = g_SearchStr( EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA3)), SCBOIL_CAPA );
		if (i > -1)
		{
			Str_Cpy(stScBur.BURNER_CAPA_UNIT, SCBOIL_CAPA[i].Code);
			Str_Cpy(stScBur.BURNER_CAPA_UNIT_NM, SCBOIL_CAPA[i].Str);
		}

		// 11. 형식코드
		i = g_SearchStr( EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA5)), SCBOIL_FORM );
		if (i > -1)
		{
			Str_Cpy(stScBur.BOILER_FORM, SCBOIL_FORM[i].Code);
			Str_Cpy(stScBur.BOILER_FORM_NM, SCBOIL_FORM[i].Str);
		}
	
		// 12. SEND_YN
		Str_Cpy(stScBur.SEND_YN, "S");
		
		hdb = sql->Open(sql);
		
		if( hdb == NULL )
		{
			ret = FALSE;
			goto Finally;
		}
		
		hstmt = sql->CreateStatement(sql, "UPDATE NORMAL_BUR \
		                                      SET MTR_ID_NUM = ?, BURNER_KIND_NUM = ?, BURNER_KIND_NM = ?, BURNER_CLASS_CD = ?, BURNER_CLASS_NM = ? \
		                                        , MAKER_NUM = ?, MAKER_NM = ?, BURNER_MODEL_NM = ?, BURNER_CAPA = ?, BURNER_CAPA_UNIT = ? \
		                                        , BURNER_CAPA_UNIT_NM = ?, MAKE_NUM = ?, BURNER_INST_YMD = ?, CHG_FLAG = ?, INST_FLAG = ? \
		                                        , INST_LOC = ?, INST_LOC_NM = ?, BOILER_FORM = ?, BOILER_FORM_NM = ?, SEND_YN = ? \
		                                        , PDA_IP = ?, UPD_EMPID = ?, DATA_FLAG = ? \
										    WHERE CHK_EXEC_NUM = ? AND MTR_NUM = ? AND BURNER_NUM = ?" );

		if( hstmt == NULL )
		{
			ret = FALSE;
			goto Finally;
		}

		idx = 0;
		sql->Bind(sql, idx++, 'U', (long *)stScBur.MTR_ID_NUM		   ,20	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_KIND_NUM	   ,3	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_KIND_NM	   ,5	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_CLASS_CD	   ,2	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_CLASS_NM	   ,30	,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)stScBur.MAKER_NUM		   ,5	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.MAKER_NM		       ,20	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_MODEL_NM	   ,20	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_CAPA		   ,10	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_CAPA_UNIT	   ,2	,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_CAPA_UNIT_NM ,20	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.MAKE_NUM            ,30	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_INST_YMD	   ,8	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.CHG_FLAG			   ,1	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.INST_FLAG		   ,2	,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)stScBur.INST_LOC			   ,2	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.INST_LOC_NM		   ,20	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BOILER_FORM		   ,2	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BOILER_FORM_NM	   ,20	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.SEND_YN			   ,1	,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szpda_ip		   ,20	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id	   ,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.DATA_FLAG	       ,9	,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)g_szCHK_EXEC_NUM			   ,12	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.MTR_NUM			   ,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stScBur.BURNER_NUM	       ,6	,DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			ret = FALSE;
			goto Finally;
		}

Finally:
		DelSqLite(sql);
		
		MessageBoxEx (CONFIRM_OK, "수정되었습니다.");
		return ret;
	}	
	
	/*=======================================================================================
	함수명 : Clear_Screen
	기  능 : 화면 Clear
	Param  : 
	Return : 
	========================================================================================*/
	void Clear_Screen(void)
	{
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA21), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA22), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA23), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA24), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA25), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA26), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA27), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA28), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA29), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA30), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA31), "" );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA32), "" );

		EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_INSDT), TXTTTLFRCOLOR);
		EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA24), TXTFRCOLOR);
	}
		
	/*=======================================================================================
	함수명 : SetStruct
	기  능 : m_stScBoil Struct Setting
	Param  : 
	Return : 
	========================================================================================*/
	void SetStruct(void)
	{
		char szTmp[10];
		
		Mem_Set((byte*)&m_stScBoil, 0x00, sizeof(m_stScBoil));
	
		// 1. 종류
		Str_Cpy(m_stScBoil.BURNER_KIND_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)));
		
		// 2. 제조사명
		Str_Cpy(m_stScBoil.MAKER_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));
		
		// 3. 모델명
		Str_Cpy(m_stScBoil.BURNER_MODEL_NM, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1)));
		
		// 4. 용량
		Str_Cpy(m_stScBoil.BURNER_CAPA, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA2)));
		
		// 5. 용량단위
		Str_Cpy(m_stScBoil.BURNER_CAPA_UNIT, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA3)));
		
		// 6. 설치일자
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Str_Cpy(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5)));
		Str_Cat(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)));
		Str_Cat(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)));
		Str_Chg(szTmp, STRCHG_DEL_NONDIGIT);
		Str_Cpy(m_stScBoil.BURNER_INST_YMD, szTmp );
		
		// 7. 설치위치
		Str_Cpy(m_stScBoil.INST_LOC, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA4)));
		
		// 8. 제조번호
		Str_Cpy(m_stScBoil.MAKE_NUM,	EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA4)));
		
		// 9. 형식
		Str_Cpy(m_stScBoil.BOILER_FORM,	EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA5)));
		
		return;
	}
	
	/*=======================================================================================
	함수명 : Compare_Data
	기  능 : m_stScBoil Data 와 화면 Data 비교
	Param  : 
	Return : 
	========================================================================================*/
	bool Compare_Data(void)
	{
		bool ret = TRUE;
		char szTmp[10];
	
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Str_Cpy(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5)));
		Str_Cat(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)));
		Str_Cat(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)));
		Str_Chg(szTmp, STRCHG_DEL_NONDIGIT);
	
		if (Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "기타") == 0)
		{
			//M("@dkjung >>> 기타 비교 #4");
			if(Str_Cmp(m_stScBoil.MAKER_NM        , EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA8))) != 0)
			{
				ret = FALSE;
			}
		}
		else {
				if( Str_Cmp(m_stScBoil.BURNER_KIND_NM  , EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1))) != 0   
			|| Str_Cmp(m_stScBoil.MAKER_NM        , EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2))) != 0         
			|| Str_Cmp(m_stScBoil.BURNER_MODEL_NM , EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1))) != 0  
			|| Str_Cmp(m_stScBoil.BURNER_CAPA     , EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA2))) != 0      
			|| Str_Cmp(m_stScBoil.BURNER_CAPA_UNIT, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA3))) != 0 
			|| Str_Cmp(m_stScBoil.BURNER_INST_YMD , szTmp                                       ) != 0                                         
			|| Str_Cmp(m_stScBoil.INST_LOC        , EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA4))) != 0         
			|| Str_Cmp(m_stScBoil.MAKE_NUM        , EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA4))) != 0         
			|| Str_Cmp(m_stScBoil.BOILER_FORM     , EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA5))) != 0 )
			{
				ret = FALSE;
			}
		}
		

		return ret;
	}
	
	/*=======================================================================================
	함수명 : Find_Burner_Class_Cd
	기  능 : Find_Burner_Class_Cd
	Param  : 
	Return : 
	========================================================================================*/
	void Find_Burner_Class_Cd(void)
	{	
		long i;
		char sztmp[8];
		char burclscd[8];
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();

		Mem_Set( (byte*)burclscd, 0x00, sizeof(burclscd) );

		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			goto Finally;
		}
		
		hstmt = sql->CreateStatement(sql," SELECT BURNER_CLASS_CD \
 										     FROM NORMAL_BUR \
										    WHERE (INST_FLAG <> '30' OR  INST_FLAG  IS NULL) \
											  AND CHK_EXEC_NUM= ? \
										    GROUP BY BURNER_CLASS_CD ");
		
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		i = 0;
		
		sql->Bind(sql, i++, 'U', (long*)g_szCHK_EXEC_NUM , 10, DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		while(sql->Next(sql) == TRUE )
		{	
			i = 0;
			Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
			sql->GetValue( sql, i++, 'U', (long*)sztmp    ,8 +1, DECRYPT );
			Str_Cat(burclscd, sztmp);
		}
		
		Chk_Prod_Cd_Alarm(burclscd);

	Finally:
		DelSqLite(sql);
		return;	
	}
	
	/*=======================================================================================
	함수명 : Chk_Prod_Cd_Alarm
	기  능 : 상품 변경 알림
	Param  : 
	Return : 
	========================================================================================*/
	void Chk_Prod_Cd_Alarm(char* burclscd)
	{
		long i;
		long chk_count = 0;
		char sztmp[8];
		char szSql[50];
		char szProd[5];
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();

		Mem_Set((byte*)szProd, 0x00, sizeof(szProd));
		Mem_Set((byte*)szSql, 0x00, sizeof(szSql));
		
		SPRINT(szSql, "SELECT PROD_CD FROM NORMAL_MTR WHERE CHK_EXEC_NUM = '%s'", g_szCHK_EXEC_NUM, 0, 0);

		g_Sql_RetStr(szSql, 10, szProd);

		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			goto Finally;
		}
		
		hstmt = sql->CreateStatement(sql," SELECT PROD_CD FROM C6101_BIZ_BURN A WHERE BURNER_CLASS_CD = ? ");
		
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		i = 0;
		
		sql->Bind(sql, i++, 'U', (long*)burclscd , 10, DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		while(sql->Next(sql) == TRUE )
		{	
			i = 0;
			Mem_Set( (byte*)sztmp, 0x00, sizeof(sztmp) );
			sql->GetValue( sql, i++, 'U', (long*)sztmp    , 8 +1, DECRYPT );

			if( Str_Cmp(sztmp, szProd) == 0 )
			{
				chk_count ++;
			}	
		}
		
		if( Str_Cmp(stSc.CENTER_CD, "41") == 0 || Str_Cmp(stSc.CENTER_CD, "42") == 0 || Str_Cmp(stSc.CENTER_CD, "43") == 0 || Str_Cmp(stSc.CENTER_CD, "44") == 0 || Str_Cmp(stSc.CENTER_CD, "45") == 0 || Str_Cmp(stSc.CONT_STS_CD, "30") == 0)
		{
			ON_EXIT();
			OnInit(INIT_MAIN);	
		}
		else
		{
			if( Str_Cmp(szProd, "11") == 0 || Str_Cmp(szProd, "12") == 0 || Str_Cmp(szProd, "13") == 0 || Str_Cmp(szProd, "81") == 0 || Str_Cmp(szProd, "82") == 0 || Str_Cmp(szProd, "83") == 0 )
			{
				if(chk_count == 0)
				{
					MessageBoxEx (CONFIRM_OK, "상품을 변경해주세요!");
					g_nProdMoveFlag = 0;
					Card_Move("SC_PRODCHG");
				}
				else
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
			}
			else
			{
				ON_EXIT();
				OnInit(INIT_MAIN);
			}
		}
	
Finally:
		DelSqLite(sql);
		return;	
	}
	
	/*=======================================================================================
	함수명 : Set_Alarm
	기  능 : 보일러 화면 알림( 1. 10년 이상 보일러, 2. 보일러 사진촬영 )
	Param  : 
	Return : 
	========================================================================================*/
	void Set_Alarm(void)
	{
		char szDate[7];
		char szToday[7];
		char szSql[500];
		long lChkCnt = 0;
		long lChkFirm = 0;
		long cnt;
		
		Mem_Set((byte*)szDate, 0x00, sizeof(szDate));
		Mem_Set((byte*)szToday, 0x00, sizeof(szToday));
		
		Mem_Cpy((byte *)szDate, (byte *)stScBur.BURNER_INST_YMD, 4);
		Mem_Cpy((byte *)szToday, (byte *)stUserinfo.szloginday, 4);
		
		/**************************************/
		/* 보일러 사진 촬영 및 장기 사용 대상 */
		/**************************************/
		// 보일러 사진 촬영 대상인 경우
		if( Str_Cmp(stSc.OLD_BOILER_YN, "Y") == 0 )
		{
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_INSDT), RED);
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA24), RED);
			
			if( g_nBoil_inst_cnt == 0 )
			{
				MessageBoxEx (CONFIRM_OK, "10년 이상 장기 사용 보일러입니다.\n안전점검 철저 요망!!\n보일러 사진 촬영 필수!!\n연통 빠짐주의 스티커부착 필수!!");
			}
		} 
		// 보일러 10년 이상 장기 사용
		else if( Str_Cmp( stScBur.BURNER_INST_YMD, "" ) != 0 && ( Str_AtoI(szToday) - 10 > Str_AtoI(szDate) ) )
		{
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_INSDT), RED);
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA24), RED);
			
			// 2018.01.22 CS팀 이성근 차장님 추가 요청 : 설치기간 10년 이상된 보일러 알림 띄움
			if( g_nBoil_inst_cnt == 0 )
			{
				MessageBoxEx (CONFIRM_OK, "10년 이상 장기 사용 보일러입니다.\n안전점검 철저 요망!!");
			}
		}
		else
		{
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_INSDT), TXTTTLFRCOLOR);
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA24), TXTFRCOLOR);
		}

		// Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		// SPRINT(szSql, "SELECT COUNT(1) FROM NORMAL_BUR WHERE CHK_EXEC_NUM ='%s' AND BURNER_KIND_NUM IN('201','301') AND MAKER_NUM ='50099'", g_szCHK_EXEC_NUM, 0, 0);
		// g_Sql_RetInt(szSql, &lChkCnt);

		// // PRINT("lChkCntlChkCntlChkCntlChkCnt : %d ",lChkCnt,0,0);

		// Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		// SPRINT(szSql, "SELECT COUNT(1) FROM NORMAL_BUR WHERE CHK_EXEC_NUM ='%s' AND BURNER_KIND_NUM IN('201','301') AND BOILER_FORM IS NULL ", g_szCHK_EXEC_NUM, 0, 0);
		// g_Sql_RetInt(szSql, &lChkFirm);

		// // PRINT("lChkFirmlChkFirmlChkFirmlChkFirm : %d ",lChkFirm,0,0);


		// if( lChkCnt > 0 && lChkFirm > 0)
		// // PRINT("stScBur.BOILER_FORM : %s ",stScBur.BOILER_FORM,0,0);
		// // if(Str_Cmp( stScBur.MAKER_NUM, "50099" ) == 0 && Str_Cmp( stScBur.BOILER_FORM, "" ) == 0)
		// {
		// 	MessageBoxEx (CONFIRM_OK, "보일러 제조사 명칭과 형식 확인 후 \n 수정 바랍니다");

		// 	// ON_EXIT();
		// 	// OnInit(INIT_BOILCHG);
		// }
		// else if(lChkCnt > 0)
		// {
		// 	MessageBoxEx (CONFIRM_OK, "보일러 제조사 명칭을 확인 후 \n 수정 바랍니다");

		// 	// ON_EXIT();
		// 	// OnInit(INIT_BOILCHG);
		// }
		// else if(lChkFirm > 0 )
		// {
		// 	MessageBoxEx (CONFIRM_OK, "보일러 형식을 확인 후 \n 수정 바랍니다");

		// 	// ON_EXIT();
		// 	// OnInit(INIT_BOILCHG);
		// }
		
		/********************************************/
		/* 보일러 모델명, 제조사에 따른 알림 활성화 */
		/********************************************/
		// 20190212 CS팀 이성근 차장님 요청( 보일러 제조사 = 롯데, 보일러 모델명 = LGB-204면 알림 ) -> 반영 취소
		// ** 필독 ** : LIKE % 사용시 아래와 같이 String으로 구현해야함, SPRINT 사용시 % 인식 불가
		/*
		
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		
		Str_Cpy( szSql, "SELECT COUNT(1) FROM NORMAL_BUR" );
		Str_Cat( szSql, " WHERE CHK_EXEC_NUM = '" );
		Str_Cat( szSql, g_szCHK_EXEC_NUM );
		Str_Cat( szSql, "'" );
		Str_Cat( szSql, " AND BURNER_NUM = '" );
		Str_Cat( szSql, stScBur.BURNER_NUM );
		Str_Cat( szSql, "'" );
		Str_Cat( szSql, " AND BURNER_KIND_NUM IN (201, 301)" );
		Str_Cat( szSql, " AND MAKER_NUM = '50031'" );
		Str_Cat( szSql, " AND BURNER_MODEL_NM LIKE '%LGB%'" );
		Str_Cat( szSql, " AND BURNER_MODEL_NM LIKE '%204%'" );
		
		g_Sql_RetInt( szSql, &cnt );
		
		if( cnt > 0 )
		{
			MessageBoxEx (CONFIRM_OK, "제조사 [롯데], 모델명 [ LGB-204 ]\n배기통 점검 주의");
		}
		*/
		
		g_nBoil_inst_cnt++;	
		
		ON_DRAW();
	}
	
	/*=======================================================================================
	함수명 : Shoto_Photo
	기  능 : 보일러 사진 촬영 시작
		     보일러 정면 = C40(업무구분) | E(점검시행번호) | M(계량기번호) | I(설치장소번호) | D(생성날짜(SYSDATE : YYYYMMDDHHMMSS))
			 보일러 연통 = C41(업무구분) | E(점검시행번호) | M(계량기번호) | I(설치장소번호) | D(생성날짜(SYSDATE : YYYYMMDDHHMMSS))
	Param  : 
	Return : 
	========================================================================================*/
	void Shoto_Photo(long ID)
	{
		handle h = NULL;
		handle hdata = NULL;
		char *pCamera;
		long nRet;
		
		Mem_Set((byte*)m_szfilenm, 0x00, sizeof(m_szfilenm));
		
		/* 보일러 정면 */
		if( ID == BID_BOIL_PHOTO1 )
		{
			m_lPhoto_Flag = 0;
			
			Str_Cpy(m_szfilenm, "C40_");
			
		}
		/* 보일러 연통 */
		else
		{	
			m_lPhoto_Flag = 1;
			
			Str_Cpy(m_szfilenm, "C41_");
		}
		
		Str_Cat(m_szfilenm, g_szCHK_EXEC_NUM);
		Str_Cat(m_szfilenm, "_");			
		Str_Cat(m_szfilenm, stScBur.MTR_NUM);
		Str_Cat(m_szfilenm, "_");			
		Str_Cat(m_szfilenm, stSc.INST_PLACE_NUM);
		Str_Cat(m_szfilenm, ".jjp");
		
		Mem_Set((byte*)g_szphoto, 0x00, sizeof(g_szphoto));
		SPRINT (g_szphoto, "%s/%s", PHOTO_SCBOIL,  m_szfilenm, 0);
		
		// PM80 카메라 호출
		ShootPhoto ( 1, 0, m_szfilenm );
		
		return;
	}
	
	/*=======================================================================================
	함수명 : Shoto_Photo2
	기  능 : 보일러 사진 촬영 시작
		     보일러 정면 = C40(업무구분) | E(점검시행번호) | M(계량기번호) | I(설치장소번호) | D(생성날짜(SYSDATE : YYYYMMDDHHMMSS))
		     * 2019년 하반기부터는 보일러 사진을 한장만 찍는다 *
	Param  : 
	Return : 
	========================================================================================*/
	void Shoto_Photo2(long ID)
	{
		handle h = NULL;
		handle hdata = NULL;
		char *pCamera;
		long nRet;
		
		Mem_Set((byte*)m_szfilenm, 0x00, sizeof(m_szfilenm));
		
		/* 보일러 정면 */
		if( ID == BID_MOVE_PHOTO )
		{
			m_lPhoto_Flag = 0;
			
			Str_Cpy(m_szfilenm, "C40_");	
			
			Str_Cat(m_szfilenm, g_szCHK_EXEC_NUM);
			Str_Cat(m_szfilenm, "_");			
			Str_Cat(m_szfilenm, stScBur.MTR_NUM);
			Str_Cat(m_szfilenm, "_");			
			Str_Cat(m_szfilenm, stSc.INST_PLACE_NUM);
			Str_Cat(m_szfilenm, ".jjp");
			
			Mem_Set((byte*)g_szphoto, 0x00, sizeof(g_szphoto));
			SPRINT (g_szphoto, "%s/%s", PHOTO_SCBOIL,  m_szfilenm, 0);
			
			// PM80 카메라 호출
			ShootPhoto( 1, 0, m_szfilenm );
		}
		return;
	}
	
	/*=======================================================================================
	함수명 : OnUart
	기  능 : 보일러 사진 촬영 후
	Param  : 
	Return : 
	========================================================================================*/
	void OnUart(long nEvent, long nData)
	{
		char szfilenm[256];
		char szTmp[256];
		int size = 0;
		
		// 메인
		if( m_bFirst == INIT_MAIN )
		{
			if (nEvent == UART_CAMERA)
			{
				if(nData == 1 )
				{
					Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
					SPRINT (szfilenm, "Camera/%s",  m_szfilenm,0, 0);
					
					if( FFS_Exist(szfilenm) )
					{
						size = FFS_GetSize( szfilenm );
						
						if( size > 1048576 )
						{
							MessageBoxEx (CONFIRM_OK, "사진 용량을 초과하였습니다.\n카메라 설정 혹은 재촬영해주세요.");
						}
						else
						{
							FFS_Copy(szfilenm, g_szphoto);
	
							MessageBoxEx(MESSAGE, "사진을 저장중입니다.");
							
							Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
							SPRINT(szTmp, "UPDATE NORMAL_DATA SET PHOTO_BOIL_YN1 = 'Y' WHERE CHK_EXEC_NUM = '%s' ", g_szCHK_EXEC_NUM, 0, 0);
							g_Sql_DirectExecute(szTmp);
							
							Mem_Set((byte*)stSc.PHOTO_BOIL_YN1, 0x00, sizeof(stSc.PHOTO_BOIL_YN1));
							Str_Cpy(stSc.PHOTO_BOIL_YN1, "Y");	
							
						}
						
						VmSleep(100);
						
						FFS_Delete( szfilenm );
						Redraw();
					}
				}
			}
		}
		// 보일러 사진
		else if( m_bFirst == INIT_BOILPHOTO )
		{
			if (nEvent == UART_CAMERA)
			{
				if(nData == 1 )
				{
					Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
					SPRINT (szfilenm, "Camera/%s",  m_szfilenm,0, 0);
					
					if( FFS_Exist(szfilenm) )
					{
						size = FFS_GetSize( szfilenm );

						if( size > 1048576 )
						{
							MessageBoxEx (CONFIRM_OK, "사진 용량을 초과하였습니다.\n카메라 설정 혹은 재촬영해주세요.");
						}
						else
						{
							FFS_Copy(szfilenm, g_szphoto);
	
							MessageBoxEx(MESSAGE, "사진을 저장중입니다.");
							
							// 보일러 정면
							if( m_lPhoto_Flag == 0 )
							{
								Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
								SPRINT(szTmp, "UPDATE NORMAL_DATA SET PHOTO_BOIL_YN1 = 'Y' WHERE CHK_EXEC_NUM = '%s' ", g_szCHK_EXEC_NUM, 0, 0);
								g_Sql_DirectExecute(szTmp);
								
								Mem_Set((byte*)stSc.PHOTO_BOIL_YN1, 0x00, sizeof(stSc.PHOTO_BOIL_YN1));
								Str_Cpy(stSc.PHOTO_BOIL_YN1, "Y");	
							}
							// 보일러 연통
							else if( m_lPhoto_Flag == 1)
							{
								Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
								SPRINT(szTmp, "UPDATE NORMAL_DATA SET PHOTO_BOIL_YN2 = 'Y' WHERE CHK_EXEC_NUM = '%s' ", g_szCHK_EXEC_NUM, 0, 0);
								g_Sql_DirectExecute(szTmp);
								
								Mem_Set((byte*)stSc.PHOTO_BOIL_YN2, 0x00, sizeof(stSc.PHOTO_BOIL_YN2));
								Str_Cpy(stSc.PHOTO_BOIL_YN2, "Y");	
							}	
						}

						VmSleep(100);
						
						FFS_Delete( szfilenm );
						Boil_Photo_Redraw();
					}
				}
			}
		}
	}
	
	/*=======================================================================================
	함수명 : Redraw
	기  능 : 메인화면 Redraw
	Param  : 
	Return : 
	========================================================================================*/
	void Redraw(void)
	{
		char szDirPath[100];
		char szScrPht[128];
		char szTmp[200];
		long nRet1, nRet2;
		
		/************************************/
		/* 사진 버튼                        */
		/************************************/
		// 1. 버튼 사용여부
		// 가정용 + 보일러가 있는 경우만 표기
		if( Str_Cmp(stSc.OLD_BOILER_YN, "Y") == 0 )
		{	
			DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(BID_MOVE_PHOTO), TRUE);
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_MOVE_PHOTO), FALSE );
		}
		else
		{			
			DlgCtrl_SetEnable( this->m_hDlg, Get_iDlgCtrlByID(BID_MOVE_PHOTO), FALSE);
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_MOVE_PHOTO), TRUE );
		}
		
		// 2. 버튼 색깔
		// 20190717 CS팀 이정욱 과장님 요청, 사진 한장만 찍음
		
		/* 		
			Mem_Set((byte*)szDirPath, 0x00, sizeof(szDirPath));
			Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
			Mem_Set((byte*)szScrPht, 0x00, sizeof(szScrPht));
			
			Str_Cpy( szDirPath, PHOTO_SCBOIL );
			Str_Cpy( szTmp, "C40_"  );
			Str_Cat( szTmp, g_szCHK_EXEC_NUM );
			Str_Cat( szTmp, "_");			
			Str_Cat( szTmp, stScBur.MTR_NUM);
			Str_Cat( szTmp, "_");			
			Str_Cat( szTmp, stSc.INST_PLACE_NUM);
			Str_Cat( szTmp, ".jjp" );
			
			nRet1 = g_FindFiles( szDirPath, szTmp , szScrPht);
			
			Mem_Set((byte*)szDirPath, 0x00, sizeof(szDirPath));
			Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
			Mem_Set((byte*)szScrPht, 0x00, sizeof(szScrPht));
			
			Str_Cpy( szDirPath, PHOTO_SCBOIL );
			Str_Cpy( szTmp, "C41_"  );
			Str_Cat( szTmp, g_szCHK_EXEC_NUM );
			Str_Cat( szTmp, "_");			
			Str_Cat( szTmp, stScBur.MTR_NUM);
			Str_Cat( szTmp, "_");			
			Str_Cat( szTmp, stSc.INST_PLACE_NUM);
			Str_Cat( szTmp, ".jjp" );
			
			nRet2 = g_FindFiles( szDirPath, szTmp , szScrPht);
			
			if( (nRet1 > 0 && nRet2 > 0) || (Str_Cmp(stSc.PHOTO_BOIL_YN1, "Y") == 0 && Str_Cmp(stSc.PHOTO_BOIL_YN2, "Y") == 0) )
			{
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MOVE_PHOTO), RED);
				ButCtrl_SetForeColorEx(Get_hDlgCtrlByID(BID_MOVE_PHOTO), BTNMENUFRCOLOR);
			}
			else
			{
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MOVE_PHOTO), YELLOW);
				ButCtrl_SetForeColorEx(Get_hDlgCtrlByID(BID_MOVE_PHOTO), TXTFRCOLOR);
			}
		*/
		
		Mem_Set((byte*)szDirPath, 0x00, sizeof(szDirPath));
		Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
		Mem_Set((byte*)szScrPht, 0x00, sizeof(szScrPht));
		
		Str_Cpy( szDirPath, PHOTO_SCBOIL );
		Str_Cpy( szTmp, "C40_"  );
		Str_Cat( szTmp, g_szCHK_EXEC_NUM );
		Str_Cat( szTmp, "_");			
		Str_Cat( szTmp, stScBur.MTR_NUM);
		Str_Cat( szTmp, "_");			
		Str_Cat( szTmp, stSc.INST_PLACE_NUM);
		Str_Cat( szTmp, ".jjp" );
		
		nRet1 = g_FindFiles( szDirPath, szTmp , szScrPht);
		
		if( nRet1 > 0 || Str_Cmp(stSc.PHOTO_BOIL_YN1, "Y") == 0 )
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MOVE_PHOTO), RED);
			ButCtrl_SetForeColorEx(Get_hDlgCtrlByID(BID_MOVE_PHOTO), BTNMENUFRCOLOR);
		}
		else
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MOVE_PHOTO), YELLOW);
			ButCtrl_SetForeColorEx(Get_hDlgCtrlByID(BID_MOVE_PHOTO), TXTFRCOLOR);
		}
		
		ON_DRAW();
	}
	
	/*=======================================================================================
	함수명 : Boil_Photo_Redraw
	기  능 : 보일러 사진 화면 Redraw
	Param  : 
	Return : 
	========================================================================================*/
	void Boil_Photo_Redraw(void)
	{
		char szDirPath[100];
		char szScrPht[128];
		char szTmp[200];
		long cnt = 0;
		long nRet1, nRet2;
		
		/************************************/
		/* 촬영 결과여부, 사진 버튼         */
		/************************************/
		// 1. 보일러 정면
		Mem_Set((byte*)szDirPath, 0x00, sizeof(szDirPath));
		Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
		Mem_Set((byte*)szScrPht, 0x00, sizeof(szScrPht));
		
		Str_Cpy( szDirPath, PHOTO_SCBOIL );
		Str_Cpy( szTmp, "C40_"  );
		Str_Cat( szTmp, g_szCHK_EXEC_NUM );
		Str_Cat( szTmp, "_");			
		Str_Cat( szTmp, stScBur.MTR_NUM);
		Str_Cat( szTmp, "_");			
		Str_Cat( szTmp, stSc.INST_PLACE_NUM);
		Str_Cat( szTmp, ".jjp" );
		
		nRet1 = g_FindFiles( szDirPath, szTmp, szScrPht );
		
		if( nRet1 > 0 || Str_Cmp(stSc.PHOTO_BOIL_YN1, "Y") == 0 )
		{
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA47)   , "촬영성공");
			
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA47), RED);
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BOIL_PHOTO1), RED);
			ButCtrl_SetForeColorEx(Get_hDlgCtrlByID(BID_BOIL_PHOTO1), BTNMENUFRCOLOR);
		}
		else
		{
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA47)   , "촬영필요");
			
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA47), TXTFRCOLOR);
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BOIL_PHOTO1), BTNCTRLBKCOLOR);
			ButCtrl_SetForeColorEx(Get_hDlgCtrlByID(BID_BOIL_PHOTO1), BTNMENUFRCOLOR);
		}
		
		// 2. 보일러 연통
		Mem_Set((byte*)szDirPath, 0x00, sizeof(szDirPath));
		Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
		Mem_Set((byte*)szScrPht, 0x00, sizeof(szScrPht));
		
		Str_Cpy( szDirPath, PHOTO_SCBOIL );
		Str_Cpy( szTmp, "C41_"  );
		Str_Cat( szTmp, g_szCHK_EXEC_NUM );
		Str_Cat( szTmp, "_");			
		Str_Cat( szTmp, stScBur.MTR_NUM);
		Str_Cat( szTmp, "_");			
		Str_Cat( szTmp, stSc.INST_PLACE_NUM);
		Str_Cat( szTmp, ".jjp" );
		
		nRet2 = g_FindFiles( szDirPath, szTmp, szScrPht );
		
		if( nRet2 > 0 || Str_Cmp(stSc.PHOTO_BOIL_YN2, "Y") == 0 )
		{
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA49)   , "촬영성공");
			
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA49), RED);
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BOIL_PHOTO2), RED);
			ButCtrl_SetForeColorEx(Get_hDlgCtrlByID(BID_BOIL_PHOTO2), BTNMENUFRCOLOR);
		}
		else
		{
			EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA49)   , "촬영필요");
			
			EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA49), TXTFRCOLOR);
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BOIL_PHOTO2), BTNCTRLBKCOLOR);
			ButCtrl_SetForeColorEx(Get_hDlgCtrlByID(BID_BOIL_PHOTO2), BTNMENUFRCOLOR);
		}
		
		ON_DRAW();
	}
	
	/*=======================================================================================
	함수명 : Result_Validation
	기  능 : 보일러 점검 결과 Validation
	Param  : 
	Return : TURE, FALSE
	========================================================================================*/
	bool Result_Validation(void)
	{
		long lCnt = 0;
		char szSql[200];
		char szDirPath[100];
		char szScrPht[128];
		char szTmp[200];
		long nRet1, nRet2;
		long lChkCnt = 0;
		long lChkFirm = 0;
		
		/******************************/
		/* 보일러 점검 여부           */
		/******************************/
		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, "SELECT COUNT(*) FROM NORMAL_BUR WHERE CHK_EXEC_NUM ='%s' AND (CHK_RSLT ='' OR CHK_RSLT IS NULL) AND BURNER_KIND_NUM IN (201, 301) AND (INST_FLAG <> '30' or  INST_FLAG IS NULL ) ",g_szCHK_EXEC_NUM, 0, 0);
		g_Sql_RetInt( szSql, &lCnt );
		
		if( lCnt > 0 )
		{
			MessageBoxEx (CONFIRM_OK, "보일러 점검하세요!!");
			return FALSE;
		}

		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, "SELECT COUNT(1) FROM NORMAL_BUR WHERE CHK_EXEC_NUM ='%s' AND BURNER_KIND_NUM IN('201','301') AND MAKER_NUM ='50099' AND CHG_FLAG <> '3'", g_szCHK_EXEC_NUM, 0, 0);
		g_Sql_RetInt(szSql, &lChkCnt);

		// PRINT("lChkCntlChkCntlChkCntlChkCnt : %d ",lChkCnt,0,0);

		Mem_Set( (byte*)szSql, 0x00, sizeof(szSql) );
		SPRINT(szSql, "SELECT COUNT(1) FROM NORMAL_BUR WHERE CHK_EXEC_NUM ='%s' AND BURNER_KIND_NUM IN('201','301') AND ( BOILER_FORM IS NULL  OR BOILER_FORM ='  ') AND CHG_FLAG <> '3'", g_szCHK_EXEC_NUM, 0, 0);
		g_Sql_RetInt(szSql, &lChkFirm);

		// PRINT("lChkFirmlChkFirmlChkFirmlChkFirm : %d ",lChkFirm,0,0);

		if( lChkCnt > 0 && lChkFirm > 0)
		// PRINT("stScBur.BOILER_FORM : %s ",stScBur.BOILER_FORM,0,0);
		// if(Str_Cmp( stScBur.MAKER_NUM, "50099" ) == 0 && Str_Cmp( stScBur.BOILER_FORM, "" ) == 0)
		{
			MessageBoxEx (CONFIRM_OK, "보일러 제조사 명칭과 형식 확인 후 \n 수정 바랍니다");
			return FALSE;
			// ON_EXIT();
			// OnInit(INIT_BOILCHG);
		}
		else if(lChkCnt > 0)
		{
			MessageBoxEx (CONFIRM_OK, "보일러 제조사 명칭을 확인 후 \n 수정 바랍니다");
			return FALSE;
			// ON_EXIT();
			// OnInit(INIT_BOILCHG);
		}
		else if(lChkFirm > 0 )
		{
			MessageBoxEx (CONFIRM_OK, "보일러 형식을 확인 후 \n 수정 바랍니다");
			return FALSE;
			// ON_EXIT();
			// OnInit(INIT_BOILCHG);
		}

		//[TODO] 보일러 기타 타입 체크
		//dkjung 2024-09-10 (RQ-240822)
		if( MATCH(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "기타") && !MATCH(stScBur.MAKER_NUM, ETC_MAKER_NUM) )
		{
			MessageBoxEx (CONFIRM_OK, "기존 기타 제조사는 제조사명을 다시 입력해야합니다.");
			return FALSE;
		}		
		
		/******************************/
		/* 보일러 사진 여부           */
		/******************************/
		if( MATCH(stSc.OLD_BOILER_YN, "Y") )
		{
			/* 
				Mem_Set((byte*)szDirPath, 0x00, sizeof(szDirPath));
				Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
				Mem_Set((byte*)szScrPht, 0x00, sizeof(szScrPht));
				
				Str_Cpy( szDirPath, PHOTO_SCBOIL );
				Str_Cpy( szTmp, "C40_"  );
				Str_Cat( szTmp, g_szCHK_EXEC_NUM );
				Str_Cat( szTmp, "_");			
				Str_Cat( szTmp, stScBur.MTR_NUM);
				Str_Cat( szTmp, "_");			
				Str_Cat( szTmp, stSc.INST_PLACE_NUM);
				Str_Cat( szTmp, ".jjp" );
				
				nRet1 = g_FindFiles( szDirPath, szTmp , szScrPht);
				
				Mem_Set((byte*)szDirPath, 0x00, sizeof(szDirPath));
				Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
				Mem_Set((byte*)szScrPht, 0x00, sizeof(szScrPht));
				
				Str_Cpy( szDirPath, PHOTO_SCBOIL );
				Str_Cpy( szTmp, "C41_"  );
				Str_Cat( szTmp, g_szCHK_EXEC_NUM );
				Str_Cat( szTmp, "_");			
				Str_Cat( szTmp, stScBur.MTR_NUM);
				Str_Cat( szTmp, "_");			
				Str_Cat( szTmp, stSc.INST_PLACE_NUM);
				Str_Cat( szTmp, ".jjp" );
				
				nRet2 = g_FindFiles( szDirPath, szTmp , szScrPht);
				
				if( (nRet1 <= 0 || nRet2 <= 0) && (Str_Cmp(stSc.PHOTO_BOIL_YN1,"Y") != 0 || Str_Cmp(stSc.PHOTO_BOIL_YN2, "Y") != 0) )
				{
					MessageBoxEx (CONFIRM_OK, "보일러 사진을 촬영해주세요.");
					return FALSE;
				}	
			*/
			
			Mem_Set((byte*)szDirPath, 0x00, sizeof(szDirPath));
			Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
			Mem_Set((byte*)szScrPht, 0x00, sizeof(szScrPht));
			
			Str_Cpy( szDirPath, PHOTO_SCBOIL );
			Str_Cpy( szTmp, "C40_"  );
			Str_Cat( szTmp, g_szCHK_EXEC_NUM );
			Str_Cat( szTmp, "_");			
			Str_Cat( szTmp, stScBur.MTR_NUM);
			Str_Cat( szTmp, "_");			
			Str_Cat( szTmp, stSc.INST_PLACE_NUM);
			Str_Cat( szTmp, ".jjp" );

			nRet1 = g_FindFiles( szDirPath, szTmp , szScrPht);

			if( nRet1 <= 0 && Str_Cmp(stSc.PHOTO_BOIL_YN1,"Y") != 0 )
			{
				MessageBoxEx (CONFIRM_OK, "보일러 사진을 촬영해주세요.");
				return FALSE;
			}
		}
		
		return TRUE;
	}
}
