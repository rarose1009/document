/*----------------------------------------------------------------------------------
	Project Name:
	Smart Application : 카드 기본폼
	Smart Version : Smart 1.0
	Copyright(c) 2014  ValueCMD Co., Ltd.
----------------------------------------------------------------------------------*/
card C6301_MTRCHG
{
	#include <include.h>
	#include "globalcard.h"
	#include "SQL.lib"
		
//	#define USE_ON_EXIT
	#define USE_ON_CHAR
//	#define USE_ON_KEY
//	#define USE_ON_DRAW
//	#define USE_ON_TIMER
	#define USE_ON_POINTING
	#define USE_ON_SELECT
	#define USE_ON_UART
	#define USE_ON_TASK

	#include "DefEvent.h"
	
	//BUTTON ID define
	BEGIN_BUTTON_ID()
		DEF_BUTTON_ID ( BID_CUST )			//고객
		DEF_BUTTON_ID ( BID_ADDR )			//주소
		DEF_BUTTON_ID ( BID_MEMO )			//메모
		DEF_BUTTON_ID ( BID_BARCODE )		//바코드
		DEF_BUTTON_ID ( BID_PHOTO )			//사진
		DEF_BUTTON_ID ( BID_AMI )			//AMI버튼
		DEF_BUTTON_ID ( BID_PAY )			//교체소요비용 버튼
		DEF_BUTTON_ID ( BID_REMOTE )		//원격설치구분 버튼
		// DEF_BUTTON_ID ( BID_BALANCE )		//원격설치구분 버튼
		DEF_BUTTON_ID ( BID_MTR )			//철거계량기 화면
		DEF_BUTTON_ID ( BID_IMPOSSIBLE )	//교체 불가사유입력
		DEF_BUTTON_ID ( BID_SAVE )			//완료
		DEF_BUTTON_ID ( BID_PREVPG )		//이전 대상
		DEF_BUTTON_ID ( BID_NEXTPG )		//다음 대상
		DEF_BUTTON_ID ( BID_WRITE1 )		//입력창 통신번호
//불가사유
		DEF_BUTTON_ID ( BID_IMPCANCEL )
		DEF_BUTTON_ID ( BID_IMPPHOTO )
		DEF_BUTTON_ID ( BID_IMPVIEW )
		DEF_BUTTON_ID ( BID_IMPOK )
//지침입력
		DEF_BUTTON_ID ( BID_VCCANCEL )
		DEF_BUTTON_ID ( BID_VCOK )

//AMI입력		
		DEF_BUTTON_ID ( BID_AMICANCEL )
		DEF_BUTTON_ID ( BID_AMIOK )
		DEF_BUTTON_ID ( BID_AMIBARCODE )

//철거계량기 바코드

		DEF_BUTTON_ID ( BID_BARCODEOK )
		DEF_BUTTON_ID ( BID_MTRBARCODE )
		DEF_BUTTON_ID ( BID_WRITE2 )		//입력창 바코드번호

//교체소요비용
		DEF_BUTTON_ID ( BID_PAYOK )
		DEF_BUTTON_ID ( BID_REMOTEOK )
		DEF_BUTTON_ID ( BID_WRITE3 )		//입력창 바코드번호

//정산재고
		// DEF_BUTTON_ID ( BID_BALANCEOK )
		
		
	//화면 상단 공통 메뉴 모음
		DEF_BUTTON_ID ( BID_HOME )		//홈
		DEF_BUTTON_ID ( BID_MENU )		//메뉴
		DEF_BUTTON_ID ( BID_KEYBOARD )	//키보드
		DEF_BUTTON_ID ( BID_SCREEN )	//화면 상하
		DEF_BUTTON_ID ( BID_CMMNWORK )	//공통업무
		DEF_BUTTON_ID ( BID_PREV )		//이전
		DEF_BUTTON_ID ( BID_EXIT )		//종료
	END_BUTTON_ID()
	
	BEGIN_OBJECT_ID()
		DEF_OBJECT_ID ( TXT_TITLE )		//타이틀
		DEF_OBJECT_ID ( TXT_BORDER )
		DEF_OBJECT_ID ( TXT_PAGE )
				
		DEF_OBJECT_ID ( TXT_DATA1 )
		DEF_OBJECT_ID ( TXT_DATA2 )
		DEF_OBJECT_ID ( TXT_DATA3 )
		DEF_OBJECT_ID ( TXT_DATA4 )
		DEF_OBJECT_ID ( TXT_DATA5 )
		// DEF_OBJECT_ID ( TXT_DATA6 )
		DEF_OBJECT_ID ( TXT_DATA7 )
		DEF_OBJECT_ID ( TXT_DATA8 )
		DEF_OBJECT_ID ( TXT_DATA9 )
		DEF_OBJECT_ID ( TXT_DATA10 )
		DEF_OBJECT_ID ( TXT_DATA11 )
		DEF_OBJECT_ID ( TXT_DATA12 )
		DEF_OBJECT_ID ( TXT_DATA13 )
		DEF_OBJECT_ID ( TXT_DATA14 )
		DEF_OBJECT_ID ( TXT_DATA15 )
		DEF_OBJECT_ID ( TXT_DATA16 )
		DEF_OBJECT_ID ( TXT_DATA17 )
		DEF_OBJECT_ID ( TXT_DATA18 )
		DEF_OBJECT_ID ( TXT_DATA19 )
		DEF_OBJECT_ID ( TXT_DATA20 )
		DEF_OBJECT_ID ( TXT_DATA21 )
		DEF_OBJECT_ID ( TXT_DATA22 )
		DEF_OBJECT_ID ( TXT_DATA23 )
		DEF_OBJECT_ID ( TXT_DATA24 )
		DEF_OBJECT_ID ( TXT_DATA25 )
		DEF_OBJECT_ID ( TXT_DATA26 )
		DEF_OBJECT_ID ( TXT_DATA27 )
		DEF_OBJECT_ID ( TXT_DATA28 )
		DEF_OBJECT_ID ( TXT_DATA29 )
		DEF_OBJECT_ID ( TXT_DATA30 )
		DEF_OBJECT_ID ( TXT_DATA31 )
		DEF_OBJECT_ID ( TXT_DATA32 )
		DEF_OBJECT_ID ( TXT_DATA33 )
//불가사유
		DEF_OBJECT_ID ( TXT_DATA34 )
		DEF_OBJECT_ID ( TXT_DATA35 )
//지침입력
		DEF_OBJECT_ID ( TXT_DATA36 )
		DEF_OBJECT_ID ( TXT_DATA37 )
		DEF_OBJECT_ID ( TXT_DATA38 )
		DEF_OBJECT_ID ( TXT_DATA39 )
		DEF_OBJECT_ID ( TXT_DATA40 )
		DEF_OBJECT_ID ( TXT_DATA41 )
		DEF_OBJECT_ID ( TXT_DATA42 )
		DEF_OBJECT_ID ( TXT_DATA43 )
		DEF_OBJECT_ID ( TXT_DATA44 )
		DEF_OBJECT_ID ( TXT_DATA45 )
		DEF_OBJECT_ID ( TXT_DATA46 )
		DEF_OBJECT_ID ( TXT_DATA47 )
		DEF_OBJECT_ID ( TXT_DATA48 )
		DEF_OBJECT_ID ( TXT_DATA49 )
		DEF_OBJECT_ID ( TXT_DATA50 )
		DEF_OBJECT_ID ( TXT_DATA51 )
		DEF_OBJECT_ID ( TXT_DATA52 )
		DEF_OBJECT_ID ( TXT_DATA53 )
		DEF_OBJECT_ID ( TXT_DATA54 )
		DEF_OBJECT_ID ( TXT_DATA55 )
		DEF_OBJECT_ID ( TXT_DATA56 )
		DEF_OBJECT_ID ( TXT_DATA57 )
		DEF_OBJECT_ID ( TXT_DATA58 )
		DEF_OBJECT_ID ( TXT_DATA59 )
		DEF_OBJECT_ID ( TXT_DATA60 )
		DEF_OBJECT_ID ( TXT_DATA61 )
		DEF_OBJECT_ID ( TXT_DATA62 )
		DEF_OBJECT_ID ( TXT_DATA63 )
		DEF_OBJECT_ID ( TXT_DATA64 )
		DEF_OBJECT_ID ( TXT_DATA65 )
		DEF_OBJECT_ID ( TXT_DATA66 )
		DEF_OBJECT_ID ( TXT_DATA67 )
		DEF_OBJECT_ID ( TXT_DATA68 )

		
		

		

//포인팅 자판
		DEF_OBJECT_ID ( TXT_KEY_ONE )
		DEF_OBJECT_ID ( TXT_KEY_TWO )
		DEF_OBJECT_ID ( TXT_KEY_THREE )
		DEF_OBJECT_ID ( TXT_KEY_FOUR )
		DEF_OBJECT_ID ( TXT_KEY_FIVE )
		DEF_OBJECT_ID ( TXT_KEY_SIX )
		DEF_OBJECT_ID ( TXT_KEY_SEVEN )
		DEF_OBJECT_ID ( TXT_KEY_EIGHT )
		DEF_OBJECT_ID ( TXT_KEY_NINE )
		DEF_OBJECT_ID ( TXT_KEY_ZERO )
		DEF_OBJECT_ID ( TXT_KEY_DEL )
		
		DEF_OBJECT_ID ( EDT_DATA1 )
		DEF_OBJECT_ID ( EDT_DATA2 )
		DEF_OBJECT_ID ( EDT_DATA3 )
		DEF_OBJECT_ID ( EDT_DATA11 )
//지침입력
		DEF_OBJECT_ID ( EDT_DATA4 )
		DEF_OBJECT_ID ( EDT_DATA5 )
		DEF_OBJECT_ID ( EDT_DATA6 )
		DEF_OBJECT_ID ( EDT_DATA7 )
		DEF_OBJECT_ID ( EDT_DATA8 )
		DEF_OBJECT_ID ( EDT_DATA9 )
		DEF_OBJECT_ID ( EDT_DATA10 )
		DEF_OBJECT_ID ( EDT_DATA12 )
		
		DEF_OBJECT_ID ( ICON_TITLE )		//타이틀
		
		DEF_OBJECT_ID ( CMB_DATA1 )
		DEF_OBJECT_ID ( CMB_DATA16 )
		DEF_OBJECT_ID ( CMB_DATA2 = CMB_DATA1+3)
		DEF_OBJECT_ID ( CMB_DATA3 = CMB_DATA2+3)
		DEF_OBJECT_ID ( CMB_DATA4 = CMB_DATA3+3)
		DEF_OBJECT_ID ( CMB_DATA5 = CMB_DATA4+3 )
//불가사유
		DEF_OBJECT_ID ( CMB_DATA6 = CMB_DATA5+3 )
		DEF_OBJECT_ID ( CMB_DATA7 = CMB_DATA6+3 )
		
		DEF_OBJECT_ID ( CMB_DATA8 = CMB_DATA7+3 )	//CMB_DATA3 > 상태값 코드 저장 콤보박스.
//AMI입력
		DEF_OBJECT_ID ( CMB_DATA9 = CMB_DATA8+3 )
		DEF_OBJECT_ID ( CMB_DATA10 = CMB_DATA9+3 )
		DEF_OBJECT_ID ( CMB_DATA11 = CMB_DATA10+3 )
		DEF_OBJECT_ID ( CMB_DATA12 = CMB_DATA11+3 )
		DEF_OBJECT_ID ( CMB_DATA18 = CMB_DATA12+3 )
//교체소요비용
		DEF_OBJECT_ID ( CMB_DATA13 = CMB_DATA12+3 )
		DEF_OBJECT_ID ( CMB_DATA14 = CMB_DATA13+3 )

//원격시스템관리항목
		DEF_OBJECT_ID ( CMB_DATA15 = CMB_DATA14+3 )

		DEF_OBJECT_ID ( CMB_DATA17 = CMB_DATA15+3 )

		
	END_OBJECT_ID()
	
	#define INIT_MAIN		1
	#define INIT_IMPOSSIBLE	2
	#define INIT_VC			3
	#define INIT_AMI        4
	#define INIT_MTR        5
	#define INIT_PAY		6
	#define INIT_REMOTE		7
	// #define INIT_BALANCE	8

	
		
	SysButCtrl SysButRes_MAIN[] =
	 {
		  SYS_BUT_IMG (  BTNX_1, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_HOME,  0),
		  SYS_BUT_IMG (  BTNX_2, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_KEYBOARD,  0),
		  SYS_BUT_IMG (  BTNX_3, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_SCREEN, 0),
		  SYS_BUT_IMG (  BTNX_4, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_CMMNWK,  0),
		  SYS_BUT_IMG (  BTNX_5, BTNY_1, BTNWD_1, BTNHT_1, 0, 0, BUTSTY_BOLD , 0, 0, 0, OBJ_BUT, GID_VMEXIT, 0),
		  SYS_BUT_IMG (  BTNX_6, BTNY_2, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BOLD|BUTSTY_BORDER , 0, TRANSPARENT, TRANSPARENT, OBJ_BUT, GID_MENU, 0),
		  SYS_BUT_IMG (  BTNX_7, BTNY_2, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BOLD|BUTSTY_BORDER , 0, TRANSPARENT, TRANSPARENT, OBJ_BUT, GID_PREV, 0),
	 };

	char m_szTitle[50];
	char m_szSql[1100];
	char m_szRemote[1100];
	char m_szTmp[400];
	char m_szBartmp[128];
	char m_szCnt_index[10];
	char m_szfilenm[100];
	char m_szMtrBarnum[20];		//MTR_MODEL에 BARCODE_NUM 저장
	char m_szMakernum[20];		//MTR_MODEL에 MAKER_NUM 저장
	char m_lCheckAMI[20]; 
	char m_lCheckPAY[20]; 
	char m_lCheckPAY_2[20]; 

	char m_lCheckCMB1[20]; 
	char m_lCheckCMB2[20]; 
	
	long m_bFirst;
	long m_lEditCtrlIndex = -1;
	long m_lPrev;
	long m_lTotCnt;
	long m_lSaveFlag = 0;	//0 : default, 1 : 불가사유 저장. , 
	long m_lLastFlag = 0;	//0 : default, 1 : 마지막대상 저장 시 화면 리프레시
	long m_lBarLen = 0;
	long m_lCancelFlag = 0;  // 0 : default, 1 : 교체 완료 취소
	long m_lSpecialMtrFlag = 0; // 0 이면 일반 계량기 , 1 이면 특수형 계량기
	
	
	void SetChkMtr(void);
	void SetBtnImg(void);
	void SetStyle(void);
	void SetData(void);
	void SetCombo(void);
	void SetCombo_Valid(void);		//유효 콤보 셋팅
	void Set_Index(void);
	void ReDraw(void);
	void ReAmi(void);
	void ReMtr(void);
	void RePay(void);
	void ReRemote(void);
	void Move_Card(void);
	void AddrDraw(void);
	void InstMtrDraw(void);
	void ImpossibleDraw(void);
	void Prev_Mtr(void);
	void Next_Mtr(void);
	long FS_GetSrchTotCnt(void);
	void Barcode(void);
	void OnBarcodeRead(void);
	void OnOldBarcodeRead(void);
	void Barcode_Func(void);
	void SaveInput(void);
	void SaveInputAmi(void);
	bool Save_Result(void);
	bool Validate(void);
	bool Save_Impossible(void);
	bool Save_Vc(void);
	bool Save_Ami(void);
	bool Save_Pay(void);
	bool Save_Remote(void);
	bool Save_Mtr(void);
	long Chk_Grd(char* szAfterGrd);
	long Chk_MakerCd(char* szMakerCd);
	void Shoto_Photo(void);
	void Photo_View(void);
	void Delete_Photo(void);
	void Save_Cancle(long BtnId);
	void Imp_Cancle(void);
	void ClearData(void);
	bool Vc_Validate(void);
	void VcDraw(void);
	void setBarCodeRsltView(long flag);
	
	// 메인 다이얼로그
	//---------------------------------------------------------------
	DlgObject	DlgRes[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
		DLG_TEXT(0, 0, 998, BTNHT_1, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, WHITE, TRANSPARENT, TXT_BORDER, ""),
		DLG_ICON(0, BTNY_2, ICON_TITLE, ""),
		//타이틀
		DLG_TEXT(TX, TY, STWD, STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, m_szTitle),

		DLG_BUTTON(STARTX,          STARTY+65, 150, 55, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CUST      , "고객"),
		DLG_BUTTON(STARTX,		   STARTY+120, 200, 100, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_ADDR      , "지번"),
		DLG_BUTTON(STARTX+800,     STARTY+770, 200, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_MEMO      , "메모"),
		DLG_BUTTON(STARTX,		   STARTY+830, 120, 69, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_PREVPG    , "◀"),
		DLG_BUTTON(STARTX+120,     STARTY+830, 120, 69, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_NEXTPG    , "▶"),
		DLG_BUTTON(STARTX+240,     STARTY+830, 200, 69, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, SANDYBROWN, CALL_FUNC , "", BID_BARCODE   , "바코드"),
		DLG_BUTTON(STARTX+440,     STARTY+830, 180, 69, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, SANDYBROWN, CALL_FUNC , "", BID_PHOTO     , "사진"),
		DLG_BUTTON(STARTX+580, 	   STARTY+220, 420, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLGRAY, CALL_FUNC , "", BID_AMI , "설치 계량기"),
		DLG_BUTTON(STARTX+200, 	   STARTY+220, 380, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLGRAY, CALL_FUNC , "", BID_MTR , "철거 계량기"),
		DLG_BUTTON(STARTX+620,     STARTY+830, 180, 69, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPOSSIBLE, "불가"),
		DLG_BUTTON(STARTX+800,     STARTY+830, 200, 69, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_SAVE      , "완료"),

		DLG_TEXT(STARTX+150, 	  STARTY+65,  320, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA1 , ""),
		DLG_TEXT(STARTX+470,	  STARTY+65,  180, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA31, ""),
		DLG_TEXT(STARTX+650, 	  STARTY+65,  130, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA2 , ""),
		DLG_TEXT(STARTX+780,      STARTY+65,  220, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_PAGE, m_szCnt_index), 
		DLG_TEXT(STARTX+200, 	 STARTY+120,  800,100, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA3 , ""),
		// DLG_TEXT(STARTX, 		 STARTY+220,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA4 , "항목"),
		DLG_BUTTON(STARTX, 		 STARTY+220,  200, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR,BTNCTRLGRAY,CALL_FUNC,"", BID_PAY , "교체"),
		// DLG_TEXT(STARTX+200, 	 STARTY+220,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA5 , "철거 계량기"),
		// DLG_TEXT(STARTX+580, 	 STARTY+220,  420, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA6 , "설치 계량기"),
		DLG_TEXT(STARTX, 		 STARTY+270,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA7 , "등급"),
		DLG_TEXT(STARTX+200, 	 STARTY+270,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA8 , ""),
		DLG_TEXT(STARTX+580, 	 STARTY+270,  420, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA9 , ""),
		DLG_TEXT(STARTX, 	 	 STARTY+320,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA10, "모델"),
		DLG_TEXT(STARTX+200, 	 STARTY+320,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA11, ""),
		DLG_TEXT(STARTX+580, 	 STARTY+320,  420, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA12, ""),
		DLG_TEXT(STARTX, 	 	 STARTY+370,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA19, "타입"),
		DLG_TEXT(STARTX+200, 	 STARTY+370,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA20, ""),
		DLG_TEXT(STARTX+580, 	 STARTY+370,  420, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA21, ""),
		DLG_TEXT(STARTX, 	 	 STARTY+420,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA16, "자리"),
		DLG_TEXT(STARTX+200, 	 STARTY+420,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA17, ""),
		DLG_TEXT(STARTX+580, 	 STARTY+420,  420, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA18, ""),
		DLG_TEXT(STARTX, 		 STARTY+470,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA22, "기물"),
		DLG_TEXT(STARTX+200, 	 STARTY+470,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA23, ""),
		DLG_EDIT(STARTX+580,	 STARTY+470,  420, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA1,20, ""),
		// DLG_TEXT(STARTX, 		 STARTY+520,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA24, "원격"),
		DLG_BUTTON(STARTX, 		 STARTY+520,  200, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR,BTNCTRLGRAY,CALL_FUNC,"", BID_REMOTE , "원격"),
		DLG_TEXT(STARTX+200, 	 STARTY+520,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA25, ""),		
		DLG_TEXT(STARTX, 		 STARTY+570,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA26, "종류"),
		// DLG_BUTTON(STARTX, 		 STARTY+570,  200, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR,BTNCTRLGRAY,CALL_FUNC,"", BID_BALANCE , "종류"),
		DLG_TEXT(STARTX+200, 	 STARTY+570,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA27, ""),
		DLG_TEXT(STARTX, 	 	 STARTY+620,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA13, "상태"),
		DLG_TEXT(STARTX+200, 	 STARTY+620,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA14, ""),
		//DLG_TEXT(STARTX+580, 	 STARTY+620,  405, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA15, ""),
		DLG_TEXT(STARTX, 		 STARTY+670,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA28, "유효"),
		DLG_TEXT(STARTX+200, 	 STARTY+670,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA29, ""),
		DLG_TEXT(STARTX, 		 STARTY+720,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA30, "지침"),
		DLG_EDIT(STARTX+200,	 STARTY+720,  380, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA2,9, ""),
		DLG_EDIT(STARTX+580,	 STARTY+720,  420, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA3,9, ""),
		// DLG_TEXT(STARTX+580, 	 STARTY+770,  220, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA32, ""),
		DLG_EDIT(STARTX+580, 	 STARTY+770,  220, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA11,9, ""),
		DLG_TEXT(STARTX, 		 STARTY+770,  200, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA33, "사유"),

		DLG_COMBO(STARTX+580, STARTY+520, 420, 290, 100, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA1, 10),
		DLG_COMBO(STARTX+580, STARTY+570, 420, 290, 100, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA2, 10),
		DLG_COMBO(STARTX+580, STARTY+620, 420, 290, 100, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA3, 10),
		DLG_COMBO(0, 0, 0, 0, 0, 0, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA8, 10),
		DLG_COMBO(STARTX+580, STARTY+670, 420, 290, 100, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA4, 10),
		DLG_COMBO(STARTX+200, STARTY+770, 380, 290, 100, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA5, 10),

		//숫자 자판
		DLG_TEXT(0,    STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ONE, "1"),
		DLG_TEXT(333,  STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_TWO, "2"),
		DLG_TEXT(666,  STARTY+940, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_THREE, "3"),
		DLG_TEXT(0,   STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FOUR, "4"),
		DLG_TEXT(333, STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FIVE, "5"),
		DLG_TEXT(666, STARTY+1030, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SIX, "6"),
		DLG_TEXT(0,   STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SEVEN, "7"),
		DLG_TEXT(333, STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_EIGHT, "8"),
		DLG_TEXT(666, STARTY+1120, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_NINE, "9"),
		DLG_TEXT(333, STARTY+1210, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ZERO, "0"),
		DLG_TEXT(666, STARTY+1210, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_DEL, "←"),
	};	
	
	// PDA 다이얼로그
	//---------------------------------------------------------------
	DlgObject	DlgRes_P[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
		DLG_ICON(P_TTLTX, 0, ICON_TITLE, ""),		
		//타이틀
		DLG_TEXT(P_TX, P_TY, P_STWD, P_STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, WHITE, TRANSPARENT, TXT_TITLE, m_szTitle),
		DLG_BUTTON(P_BTNX, P_BTNY, P_BTNWD, P_BTNHD, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", GID_PREV, ""),

		DLG_BUTTON(STARTX,          STARTY-40, 150, 55, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_CUST      , "고객"),
		DLG_BUTTON(STARTX,		    STARTY+15, 200, 110, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_ADDR      , "지번"),
		DLG_BUTTON(STARTX+800,     STARTY+730, 200, 60, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_MEMO      , "메모"),
		DLG_BUTTON(STARTX,		   STARTY+800, 140, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_PREVPG    , "◀"),
		DLG_BUTTON(STARTX+140,     STARTY+800, 140, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_NEXTPG    , "▶"),
		DLG_BUTTON(STARTX+280,     STARTY+800, 180, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, SANDYBROWN, CALL_FUNC , "", BID_BARCODE   , "바코드"),
		DLG_BUTTON(STARTX+460,     STARTY+800, 180, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, SANDYBROWN, CALL_FUNC , "", BID_PHOTO     , "사진"),
		DLG_BUTTON(STARTX+640,     STARTY+800, 180, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPOSSIBLE, "불가"),
		DLG_BUTTON(STARTX+820,     STARTY+800, 180, 99, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_SAVE      , "완료"),
														  
		DLG_TEXT(STARTX+150, 	  STARTY-40,  300, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA1 , ""),
		DLG_TEXT(STARTX+450,	  STARTY-40,  180, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA31, ""),
		DLG_TEXT(STARTX+630, 	  STARTY-40,  130, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA2 , ""),
		DLG_TEXT(STARTX+760,      STARTY-40,  240, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_PAGE, m_szCnt_index), 
		DLG_TEXT(STARTX+200, 	  STARTY+15,  800,110, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA3 , ""),
		DLG_TEXT(STARTX, 		 STARTY+125,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA4 , "항목"),
		DLG_TEXT(STARTX+200, 	 STARTY+125,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA5 , "철거 계량기"),
		// DLG_TEXT(STARTX+580, 	 STARTY+125,  420, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA6 , "설치 계량기"),
		DLG_TEXT(STARTX, 		 STARTY+180,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA7 , "등급"),
		DLG_TEXT(STARTX+200, 	 STARTY+180,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA8 , ""),
		DLG_TEXT(STARTX+580, 	 STARTY+180,  420, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA9 , ""),
		DLG_TEXT(STARTX, 	 	 STARTY+235,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA10, "모델"),
		DLG_TEXT(STARTX+200, 	 STARTY+235,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA11, ""),
		DLG_TEXT(STARTX+580, 	 STARTY+235,  420, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA12, ""),
		DLG_TEXT(STARTX, 	 	 STARTY+290,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA19, "타입"),
		DLG_TEXT(STARTX+200, 	 STARTY+290,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA20, ""),
		DLG_TEXT(STARTX+580, 	 STARTY+290,  420, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA21, ""),
		DLG_TEXT(STARTX, 	 	 STARTY+345,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA16, "자리"),
		DLG_TEXT(STARTX+200, 	 STARTY+345,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA17, ""),
		DLG_TEXT(STARTX+580, 	 STARTY+345,  420, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA18, ""),
		DLG_TEXT(STARTX, 		 STARTY+400,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA22, "기물"),
		DLG_TEXT(STARTX+200, 	 STARTY+400,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA23, ""),
		DLG_EDIT(STARTX+580,	 STARTY+400,  420, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA1,20, ""),
		DLG_TEXT(STARTX, 		 STARTY+455,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA24, "원격"),
		DLG_TEXT(STARTX+200, 	 STARTY+455,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA25, ""),		
		DLG_TEXT(STARTX, 		 STARTY+510,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA26, "종류"),
		DLG_TEXT(STARTX+200, 	 STARTY+510,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA27, ""),
		DLG_TEXT(STARTX, 	 	 STARTY+565,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA13, "상태"),
		DLG_TEXT(STARTX+200, 	 STARTY+565,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA14, ""),
		//DLG_TEXT(STARTX+580, 	 STARTY+620,  405, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA15, ""),
		DLG_TEXT(STARTX, 		 STARTY+620,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA28, "유효"),
		DLG_TEXT(STARTX+200, 	 STARTY+620,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA29, ""),
		DLG_TEXT(STARTX, 		 STARTY+675,  200, 55, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA30, "지침"),
		DLG_EDIT(STARTX+200,	 STARTY+675,  380, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA2,9, ""),
		DLG_EDIT(STARTX+580,	 STARTY+675,  420, 55, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA3,9, ""),
		DLG_TEXT(STARTX, 		 STARTY+730,  200, 60, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA33, "사유"),
		// DLG_TEXT(STARTX+580, 	 STARTY+730,  220, 60, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA32, ""),
		DLG_EDIT(STARTX+580, 	 STARTY+730,  220, 60, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA11,9, ""),

		DLG_COMBO(STARTX+580, STARTY+455, 420, 290, 100, 55, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA1, 10),
		DLG_COMBO(STARTX+580, STARTY+510, 420, 290, 100, 55, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA2, 10),
		DLG_COMBO(STARTX+580, STARTY+565, 420, 290, 100, 55, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA3, 10),
		DLG_COMBO(0, 0, 0, 0, 0, 0, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA8, 10),
		DLG_COMBO(STARTX+580, STARTY+620, 420, 290, 100, 55, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA4, 10),
		DLG_COMBO(STARTX+200, STARTY+730, 380, 290, 100, 60, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA5, 10),
	};		

	// 메인 다이얼로그
	//---------------------------------------------------------------
	DlgObject	DlgRes_IMPOSSIBLE[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, ""),
		DLG_ICON(POPTX, POPTY, ICON_TITLE, ""),
		DLG_TEXT(POPTX, POPTY, POPSTWD, POPSTHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "불가사유등록"),
		DLG_BUTTON(BTNX_7, P_BTNY, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_IMPCANCEL, ""),

		DLG_BUTTON(STARTX,     STARTY+150, 500, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPPHOTO , "사진 촬영"),
		DLG_BUTTON(STARTX+500, STARTY+150, 500, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPVIEW , "사진보기"),
		DLG_BUTTON(STARTX,     STARTY+250, 500, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPCANCEL , "취 소"),
		DLG_BUTTON(STARTX+500, STARTY+250, 500, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPOK , "확 인"),
		
		DLG_TEXT(STARTX, 	   STARTY-29,  300, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA34, "방문일자"),
		DLG_TEXT(STARTX, 	   STARTY+41,  300, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA35, "불가사유"),
		
		DLG_COMBO(STARTX+300,  STARTY-29, 700, 290, 200, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA6, 15),
		DLG_COMBO(STARTX+300,  STARTY+41, 700, 290, 200, 70, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA7, 30),
	};	
	
	// PDA 다이얼로그
	//---------------------------------------------------------------
	DlgObject	DlgRes_IMPOSSIBLE_P[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, ""),
		DLG_ICON(POPTX, POPTY, ICON_TITLE, ""),
		DLG_TEXT(POPTX, POPTY, POPSTWD, POPSTHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "불가사유등록"),
		DLG_BUTTON(BTNX_7, P_BTNY, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_IMPCANCEL, ""),

		DLG_BUTTON(STARTX,     STARTY+140, 500, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPPHOTO , "사진 촬영"),
		DLG_BUTTON(STARTX+500, STARTY+140, 500, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPVIEW , "사진보기"),
		DLG_BUTTON(STARTX,     STARTY+230, 500, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPCANCEL , "취 소"),
		DLG_BUTTON(STARTX+500, STARTY+230, 500, 80, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_IMPOK , "확 인"),
		
		DLG_TEXT(STARTX, 	   STARTY-40,  300, 80, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA34, "방문일자"),
		DLG_TEXT(STARTX, 	   STARTY+40,  300, 80, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA35, "불가사유"),
		
		DLG_COMBO(STARTX+300,  STARTY-40, 700, 290, 200, 80, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA6, 15),
		DLG_COMBO(STARTX+300,  STARTY+40, 700, 290, 200, 80, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA7, 30),
	};		

	// 메인 다이얼로그
	//---------------------------------------------------------------
	DlgObject	DlgRes_VC[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, ""),
		DLG_ICON(POPTX, POPTY, ICON_TITLE, ""),
		DLG_TEXT(POPTX, POPTY, POPSTWD, POPSTHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "지침입력"),
		DLG_BUTTON(BTNX_7, P_BTNY, BTNWD_2, BTNHT_2, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_VCCANCEL, ""),

		DLG_BUTTON(STARTX,     STARTY+300, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_VCCANCEL , "취 소"),
		DLG_BUTTON(STARTX+600, STARTY+300, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_VCOK , "확 인"),
		
		DLG_TEXT(STARTX, 	 	 STARTY-29,  250, 79, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA36, ""),
		DLG_TEXT(STARTX+250,     STARTY-29,  375, 79, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA37, "철거지침"),
		DLG_TEXT(STARTX+625, 	 STARTY-29,  375, 79, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA38, "설치지침"),
		DLG_TEXT(STARTX,		 STARTY+50,  250, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA39, "Vc"),
		DLG_EDIT(STARTX+250,	 STARTY+50,  375, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA4, 15, ""),
		DLG_EDIT(STARTX+625,	 STARTY+50,  375, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA5, 15, ""),
		DLG_TEXT(STARTX, 	    STARTY+120,  250, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA40, "Va"),
		DLG_EDIT(STARTX+250,	STARTY+120,  375, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA6, 15, ""),
		DLG_EDIT(STARTX+625,	STARTY+120,  375, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA7, 15, ""),
		DLG_TEXT(STARTX, 	   	STARTY+190,  250, 70, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA41, "Vm"),
		DLG_EDIT(STARTX+250,	STARTY+190,  375, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA8, 15, ""),
		DLG_EDIT(STARTX+625,	STARTY+190,  375, 70, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA9, 15, ""),
		
	};	
	
	// PDA 다이얼로그
	//---------------------------------------------------------------
	DlgObject	DlgRes_VC_P[] = 
	{
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, ""),
		DLG_ICON(P_TTLTX, 0, ICON_TITLE, ""),
		DLG_TEXT(P_TX, P_TY, P_STWD, P_STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "불가사유등록"),
		DLG_BUTTON(P_BTNX, P_BTNY, P_BTNWD, P_BTNHD, 0, 0, BUTSTY_BORDER, 0, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_VCCANCEL, ""),

		DLG_BUTTON(STARTX,     STARTY+320, 400, 100, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_VCCANCEL , "취 소"),
		DLG_BUTTON(STARTX+600, STARTY+320, 400, 100, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_VCOK , "확 인"),
		
		DLG_TEXT(STARTX, 	 	 STARTY-40,  250, 80, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA36, ""),
		DLG_TEXT(STARTX+250,     STARTY-40,  375, 80, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA37, "철거지침"),
		DLG_TEXT(STARTX+625, 	 STARTY-40,  375, 80, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA38, "설치지침"),
		DLG_TEXT(STARTX,		 STARTY+40,  250, 80, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA39, "Vc"),
		DLG_EDIT(STARTX+250,	 STARTY+40,  375, 80, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA4, 15, ""),
		DLG_EDIT(STARTX+625,	 STARTY+40,  375, 80, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA5, 15, ""),
		DLG_TEXT(STARTX, 	    STARTY+120,  250, 80, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA40, "Va"),
		DLG_EDIT(STARTX+250,	STARTY+120,  375, 80, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA6, 15, ""),
		DLG_EDIT(STARTX+625,	STARTY+120,  375, 80, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA7, 15, ""),
		DLG_TEXT(STARTX, 	   	STARTY+200,  250, 80, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA41, "Vm"),
		DLG_EDIT(STARTX+250,	STARTY+200,  375, 80, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA8, 15, ""),
		DLG_EDIT(STARTX+625,	STARTY+200,  375, 80, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA9, 15, ""),
	};		

	DlgObject	DlgRes_AMI[] = 
	{	
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
		DLG_TEXT(0, 0, 998, BTNHT_1, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, WHITE, TRANSPARENT, TXT_BORDER, ""),
		DLG_ICON(0, BTNY_2, ICON_TITLE, ""),
		//타이틀
		DLG_TEXT(TX, TY, STWD, STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "AMI입력"),
		
		DLG_BUTTON(STARTX+600, STARTY+450, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_AMIOK , "확 인"),
		DLG_BUTTON(STARTX+150, STARTY+450, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_AMIBARCODE , "바코드"),
		
		DLG_TEXT(STARTX, 		 STARTY+65,  400, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA42 , " 항 목 "),
		// DLG_TEXT(STARTX+230, 	 STARTY+65,  350, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA43 , "철거 계량기"),
		DLG_TEXT(STARTX+400, 	 STARTY+65,  600, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA44 , "설치 계량기"),
		DLG_TEXT(STARTX, 		 STARTY+115, 400, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA45 , "통신사"),
		DLG_TEXT(STARTX, 		 STARTY+165, 400, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA46 , "통신번호"),
		DLG_TEXT(STARTX+400,     STARTY+165, 600, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTFRCOLOR, EDTCTRLBK, TXT_DATA48, ""),
		DLG_BUTTON(STARTX+400,   STARTY+165, 600, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_WRITE1,  ""),
		DLG_TEXT(STARTX, 		 STARTY+215, 400, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA47 , "유입구분"),
		DLG_TEXT(STARTX, 		 STARTY+265, 400, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA68 , "집중기설치비용"),
		DLG_TEXT(STARTX, 		 STARTY+315, 400, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA49 , "교체기관"),
		DLG_TEXT(STARTX, 		 STARTY+365, 400, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA50 , "교체사유"),
		
		DLG_COMBO(STARTX+400,  STARTY+115, 600, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA9, 15),
		DLG_COMBO(STARTX+400,  STARTY+215, 600, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA10, 15),
		DLG_COMBO(STARTX+400,  STARTY+265, 600, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA18, 15),
		DLG_COMBO(STARTX+400,  STARTY+315, 600, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA11, 15),
		DLG_COMBO(STARTX+400,  STARTY+365, 600, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA12, 15),

		//숫자 자판
		DLG_TEXT(0,    STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ONE, "1"),
		DLG_TEXT(333,  STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_TWO, "2"),
		DLG_TEXT(666,  STARTY+940, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_THREE, "3"),
		DLG_TEXT(0,   STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FOUR, "4"),
		DLG_TEXT(333, STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FIVE, "5"),
		DLG_TEXT(666, STARTY+1030, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SIX, "6"),
		DLG_TEXT(0,   STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SEVEN, "7"),
		DLG_TEXT(333, STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_EIGHT, "8"),
		DLG_TEXT(666, STARTY+1120, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_NINE, "9"),
		DLG_TEXT(333, STARTY+1210, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ZERO, "0"),
		DLG_TEXT(666, STARTY+1210, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_DEL, "←"),
	};

	DlgObject	DlgRes_MTR[] = 
	{	
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
		DLG_TEXT(0, 0, 998, BTNHT_1, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, WHITE, TRANSPARENT, TXT_BORDER, ""),
		DLG_ICON(0, BTNY_2, ICON_TITLE, ""),
		//타이틀
		DLG_TEXT(TX, TY, STWD, STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "철거계량기 바코드"),
		
		DLG_BUTTON(STARTX+600, STARTY+450, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_BARCODEOK , "확 인"),
		DLG_BUTTON(STARTX+150, STARTY+450, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_MTRBARCODE , "바코드"),
		
		DLG_TEXT(STARTX, 		 STARTY+65,  330, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA52 , " 항 목 "),
		// DLG_TEXT(STARTX+230, 	 STARTY+65,  350, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA43 , "철거 계량기"),
		
		DLG_TEXT(STARTX+330, 	 STARTY+65,  770, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA53 , "철거 계량기"),
		DLG_TEXT(STARTX+330, 	 STARTY+115, 770, 50, 80,50, 0, EDITSTY_BORDER, TXTFRCOLOR, TXTINCTRLBK, TXT_DATA54, ""),
		DLG_TEXT(STARTX, 		 STARTY+115, 330, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA55 , "기존기물번호"),
		DLG_TEXT(STARTX,		 STARTY+165, 330, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA56 , "새기물번호"),
		DLG_TEXT(STARTX+330,     STARTY+165, 660, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTFRCOLOR, EDTCTRLBK, TXT_DATA51, ""),
		DLG_BUTTON(STARTX+330,   STARTY+165, 660, 50, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLMNBKCOLOR, CALL_FUNC , "", BID_WRITE2,  ""),

		//숫자 자판
		DLG_TEXT(0,    STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ONE, "1"),
		DLG_TEXT(333,  STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_TWO, "2"),
		DLG_TEXT(666,  STARTY+940, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_THREE, "3"),
		DLG_TEXT(0,   STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FOUR, "4"),
		DLG_TEXT(333, STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FIVE, "5"),
		DLG_TEXT(666, STARTY+1030, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SIX, "6"),
		DLG_TEXT(0,   STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SEVEN, "7"),
		DLG_TEXT(333, STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_EIGHT, "8"),
		DLG_TEXT(666, STARTY+1120, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_NINE, "9"),
		DLG_TEXT(333, STARTY+1210, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ZERO, "0"),
		DLG_TEXT(666, STARTY+1210, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_DEL, "←"),
	};

	DlgObject	DlgRes_PAY[] = 
	{	
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
		DLG_TEXT(0, 0, 998, BTNHT_1, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, WHITE, TRANSPARENT, TXT_BORDER, ""),
		DLG_ICON(0, BTNY_2, ICON_TITLE, ""),
		//타이틀
		DLG_TEXT(TX, TY, STWD, STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "교체소요비용"),
		
		DLG_BUTTON(STARTX+600, STARTY+350, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_PAYOK , "확 인"),
		
		DLG_TEXT(STARTX, 		 STARTY+65,  230, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA57 , " 항 목 "),
		// DLG_TEXT(STARTX+230, 	 STARTY+65,  350, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA43 , "철거 계량기"),
		DLG_TEXT(STARTX+230, 	 STARTY+65,  770, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA58 , "소요비용"),
		DLG_TEXT(STARTX, 		 STARTY+115, 230, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA59 , "배터리"),
		DLG_TEXT(STARTX, 		 STARTY+165, 230, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA60 , "지시부"),
		// DLG_TEXT(STARTX, 		 STARTY+215, 230, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA61 , "기타비용"),
		// DLG_TEXT(STARTX+230,     STARTY+215, 760, 50, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, TXTFRCOLOR, EDTCTRLBK, TXT_DATA48, ""),
		// DLG_EDIT(STARTX+230, 	 STARTY+215, 760, 50, 0, 0, 0, EDITSTY_BORDER, TXTFRCOLOR, PDAEDTCTRLBK, EDT_DATA12,9, ""),
		
		DLG_COMBO(STARTX+230,  STARTY+115, 770, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA13, 15),
		DLG_COMBO(STARTX+230,  STARTY+165, 770, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA14, 15),

		//숫자 자판
		DLG_TEXT(0,    STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ONE, "1"),
		DLG_TEXT(333,  STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_TWO, "2"),
		DLG_TEXT(666,  STARTY+940, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_THREE, "3"),
		DLG_TEXT(0,   STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FOUR, "4"),
		DLG_TEXT(333, STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FIVE, "5"),
		DLG_TEXT(666, STARTY+1030, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SIX, "6"),
		DLG_TEXT(0,   STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SEVEN, "7"),
		DLG_TEXT(333, STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_EIGHT, "8"),
		DLG_TEXT(666, STARTY+1120, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_NINE, "9"),
		DLG_TEXT(333, STARTY+1210, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ZERO, "0"),
		DLG_TEXT(666, STARTY+1210, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_DEL, "←"),
	};

	DlgObject	DlgRes_REMOTE[] = 
	{	
		NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
		DLG_TEXT(0, 0, 998, BTNHT_1, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, WHITE, TRANSPARENT, TXT_BORDER, ""),
		DLG_ICON(0, BTNY_2, ICON_TITLE, ""),
		//타이틀
		DLG_TEXT(TX, TY, STWD, STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "원격시스템 관리항목"),
		
		DLG_BUTTON(STARTX+600, STARTY+350, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_REMOTEOK , "확 인"),
		
		DLG_TEXT(STARTX, 		 STARTY+65,  230, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA62 , " 항 목 "),
		DLG_TEXT(STARTX+230, 	 STARTY+65,  770, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA63 , "원격시스템"),
		DLG_TEXT(STARTX, 		 STARTY+115, 230, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA64 , "관리사"),
		
		DLG_COMBO(STARTX+230,  STARTY+115, 770, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA15, 15),
		

		//숫자 자판
		DLG_TEXT(0,    STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ONE, "1"),
		DLG_TEXT(333,  STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_TWO, "2"),
		DLG_TEXT(666,  STARTY+940, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_THREE, "3"),
		DLG_TEXT(0,   STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FOUR, "4"),
		DLG_TEXT(333, STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FIVE, "5"),
		DLG_TEXT(666, STARTY+1030, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SIX, "6"),
		DLG_TEXT(0,   STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SEVEN, "7"),
		DLG_TEXT(333, STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_EIGHT, "8"),
		DLG_TEXT(666, STARTY+1120, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_NINE, "9"),
		DLG_TEXT(333, STARTY+1210, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ZERO, "0"),
		DLG_TEXT(666, STARTY+1210, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_DEL, "←"),
	};

	// DlgObject	DlgRes_BALANCE[] = 
	// {	
	// 	NORM_DLG ("", "", DLGSTY_HSCROLLBAR|DLGSTY_VSCROLLBAR|DLGSTY_TITLE, 0, MAINBKCOLOR, WHITE, BLUE, TITLE_HEIGHT, 0),		
	// 	DLG_TEXT(0, 0, 998, BTNHT_1, 0, 0, 0, EDITSTY_BORDER|EDITSTY_BOLD, WHITE, TRANSPARENT, TXT_BORDER, ""),
	// 	DLG_ICON(0, BTNY_2, ICON_TITLE, ""),
	// 	//타이틀
	// 	DLG_TEXT(TX, TY, STWD, STHT, 0, 0, EDITSTY_BORDER, EDITSTY_BOLD, TTLCTRLFR, TTLCTRLBK, TXT_TITLE, "정산 현황"),
		
	// 	DLG_BUTTON(STARTX+600, STARTY+350, 400, 70, 0, 0, BUTSTY_BOLD, BUTSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, CALL_FUNC , "", BID_BALANCEOK , "확 인"),
		
	// 	DLG_TEXT(STARTX, 		 STARTY+65,  230, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA65 , " 항 목 "),
	// 	DLG_TEXT(STARTX+230, 	 STARTY+65,  770, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA66 , "정산 반영여부"),
	// 	DLG_TEXT(STARTX, 		 STARTY+115, 230, 50, 0, 0, 0, EDITSTY_BORDER, TXTTTLFRCOLOR, TXTCTRLBK, TXT_DATA67 , "정산대상"),
		
	// 	DLG_COMBO(STARTX+230,  STARTY+115, 770, 50, 80, 50, TXTFRCOLOR, TXTINCTRLBK, CALL_FUNC, "", CMB_DATA17, 15),
		

	// 	//숫자 자판
	// 	DLG_TEXT(0,    STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ONE, "1"),
	// 	DLG_TEXT(333,  STARTY+940, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_TWO, "2"),
	// 	DLG_TEXT(666,  STARTY+940, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_THREE, "3"),
	// 	DLG_TEXT(0,   STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FOUR, "4"),
	// 	DLG_TEXT(333, STARTY+1030, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_FIVE, "5"),
	// 	DLG_TEXT(666, STARTY+1030, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SIX, "6"),
	// 	DLG_TEXT(0,   STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_SEVEN, "7"),
	// 	DLG_TEXT(333, STARTY+1120, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_EIGHT, "8"),
	// 	DLG_TEXT(666, STARTY+1120, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_NINE, "9"),
	// 	DLG_TEXT(333, STARTY+1210, 333, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_ZERO, "0"),
	// 	DLG_TEXT(666, STARTY+1210, 334, 90, 0, 0, 0, EDITSTY_BOLD|EDITSTY_BORDER, BTNMENUFRCOLOR, BTNCTRLBKCOLOR, TXT_KEY_DEL, "←"),
	// };
	
	//----------------------------------------------------------------------
	bool	main (quad MsgType, quad wParam, quad lParam)
	{
		EVENT_HANDLER (MsgType, wParam, lParam);
		return TRUE;
	}
	
//┌─────────────────────────────────────┐
//│ 				   『	OnInit Function  』  				              │
//└─────────────────────────────────────┘
	void	OnInit(char bFirst)
	{
		long lCnt;
		char szDate[15];
		
		m_bFirst = bFirst;
		
		switch (bFirst)
		{
			case INIT_MAIN:
				switch (theDevInfo.m_nType)
				{
					case FAMILY_PDA:
						CREATE_DIALOG_OBJECT (DlgRes_P, SIZEOF(DlgRes_P));
						break;
					default:
						CREATE_GLOBAL_BUTTON (SysButRes_MAIN);
						CREATE_DIALOG_OBJECT (DlgRes, SIZEOF(DlgRes));
						break;		
				}
				
				Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
				g_nAddrFlag = 0;
				
				
				SetBtnImg();
				SetStyle();
				SetCombo();
				
				if( m_lSaveFlag == 1 )
				{
					m_lSaveFlag = 0;
					OnButton(BID_NEXTPG);
					break;
				}
				
				if( g_lDataflag == 0 )
				{
					SetData();
					ReDraw();

					if( Str_Cmp(stMtrChg.MTR_SUPPLY_STS, "20") == 0 )
					{
						if( MessageBoxEx (CONFIRM_YESNO, "공급상태 '중지'세대 입니다. \n 교체를 진행하시겠습니까?")  == MB_OK)
						{
						}
						else
						{
							ShowSip(FALSE);
							g_Sipflag = 0;
							
							g_Del_GcPhoto();
							Set_Index();
							Card_Move("C6301_LST");
							break;
						}
					}
					else if( Str_Cmp(stMtrChg.MTR_SUPPLY_STS, "30") == 0 )
					{
						if( MessageBoxEx (CONFIRM_YESNO, "공급상태 '해지'세대 입니다. \n 교체를 진행하시겠습니까?")  == MB_OK)
						{
						}
						else
						{
							ShowSip(FALSE);
							g_Sipflag = 0;
							
							g_Del_GcPhoto();
							Set_Index();
							Card_Move("C6301_LST");
							break;
						}
					}

					if( Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0 )
					{
						if(Str_Len(stMtrChg.BEFO_MTR_ID_NUM) == 0)
						{	
							MessageBoxEx(CONFIRM_OK, "철거계량기 바코드 스캔화면으로 이동합니다.");
							g_lDataflag = 1;
							
							OnInit(INIT_MTR);
							ReMtr();
							break;
							
						}
					}

					
				}
				else
				{
					ReDraw();
				}

				
				
				//스트럭쳐에 데이터 셋팅 후에 콤보값을 정해야함.
				SetCombo_Valid();
				
				Mem_Set( (byte*)m_szTitle, 0x00, sizeof(m_szTitle) );
				if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0 && Str_Cmp(stMtrChg.NOBILL_YN, "N") == 0)
				{
					if(Str_Cmp(stMtrChg.AMI_OBJ_YN, "Y") == 0)
					{
						Str_Cpy(m_szTitle, "AMI 민원교체");
					}
					else
					{
						Str_Cpy(m_szTitle, "가정용 민원교체");
					}
					
				}
				else if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 )
				{
					Str_Cpy(m_szTitle, "가정용 노후교체");
				}
				else if( Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0 )
				{
					Str_Cpy(m_szTitle, "가정용 무전표교체");
				}

				
				// szMtr_supply_sts
			
				
			
				

				ON_DRAW();

/*	제거
				//메모, 메모 존재시 메모화면 출력. , g_lMoveFlag = 0 메모출력, g_lMoveFlag = 1 메모 출력x
				if( Str_Len(stMtrChg.MEMO) > 0 && g_lMoveFlag == 0 )
				{
					g_nMemoFlag = 6;
					g_lMoveFlag = 1;
					Card_Move("CM_MEMO");
					break;
				}
*/
				break;
			case INIT_IMPOSSIBLE:
				switch (theDevInfo.m_nType)
				{
					case FAMILY_PDA:
						CREATE_DIALOG_OBJECT (DlgRes_IMPOSSIBLE_P, SIZEOF(DlgRes_IMPOSSIBLE_P));
						break;
					default:
						CREATE_DIALOG_OBJECT (DlgRes_IMPOSSIBLE, SIZEOF(DlgRes_IMPOSSIBLE));
						break;		
				}
				
				SetBtnImg();
				SetStyle();
				SetCombo();
				
				Mem_Set( (byte*)szDate, 0x00, sizeof(szDate) );
				Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
				Str_ItoA(Time_GetDate(), m_szTmp, 10);
				g_Str_DateType( szDate, m_szTmp);
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA6), szDate);
				
				ImpossibleDraw();
				
				ON_DRAW();
				break;
			case INIT_VC:
				switch (theDevInfo.m_nType)
				{
					case FAMILY_PDA:
						CREATE_DIALOG_OBJECT (DlgRes_VC_P, SIZEOF(DlgRes_VC_P));
						break;
					default:
						CREATE_DIALOG_OBJECT (DlgRes_VC, SIZEOF(DlgRes_VC));
						break;		
				}
				SetBtnImg();
				SetStyle();
				VcDraw();
				break;
			case INIT_AMI:				
				switch (theDevInfo.m_nType)
				{
					default:
						CREATE_DIALOG_OBJECT (DlgRes_AMI, SIZEOF(DlgRes_AMI));
						break;
				}
				
				SetBtnImg();
				SetStyle();
				SetCombo();
				
				// SetData();
				// ReDraw();

				ON_DRAW();
				break;		

			case INIT_MTR:		
				switch (theDevInfo.m_nType)
					{
						default:
							CREATE_DIALOG_OBJECT (DlgRes_MTR, SIZEOF(DlgRes_MTR));
							break;
					}
				
				SetBtnImg();
				SetStyle();
				break;
			
			case INIT_PAY:
				switch (theDevInfo.m_nType)
				{
					default:
						CREATE_DIALOG_OBJECT (DlgRes_PAY, SIZEOF(DlgRes_PAY));
						break;
				}
				SetBtnImg();
				SetStyle();
				SetCombo();
				break;

			case INIT_REMOTE:
				switch (theDevInfo.m_nType)
				{
					default:
						CREATE_DIALOG_OBJECT (DlgRes_REMOTE, SIZEOF(DlgRes_REMOTE));
						break;
				}
				SetBtnImg();
				SetStyle();
				SetCombo();
				break;

			// case INIT_BALANCE:
			// 	switch (theDevInfo.m_nType)
			// 	{
			// 		default:
			// 			CREATE_DIALOG_OBJECT (DlgRes_BALANCE, SIZEOF(DlgRes_BALANCE));
			// 			break;
			// 	}
			// 	SetBtnImg();
			// 	SetStyle();
			// 	SetCombo();
			// 	break;
					
		}
	}

//------------------------------------------------------------------
	void	OnButton(long ID)
	{	
		char szSql[256];
		long lCnt;
	
		switch(ID)
		{
			case BID_CUST:
				//g_lChgMtr_WorkFlag > = 0 가정용 계량기, = 1 대용량 계량기, = 2 보정기
				g_lChgMtr_WorkFlag = 0;

				g_lDataflag = 1;
				SaveInput();
				Set_Index();
				g_nPhotoFlag = 7;
				Card_Move("C6301_CUSTINFO");
				break;
			case BID_ADDR:
				if( g_nAddrFlag == 0)
				{
					g_nAddrFlag = 1;
				}
				else
				{
					g_nAddrFlag = 0;
				}
				AddrDraw();
				break;
			case BID_MEMO:
				g_nMemoFlag = 6;
				g_lDataflag = 1;
				//g_lMoveFlag = 1;
				SaveInput();
				Set_Index();
				Str_Cpy(g_szMTR_NUM, stMtrChg.MTR_NUM);
				Card_Move("CM_MEMO");
				break;
			case BID_BARCODE:
				m_lBarLen = Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1)));
				
				if( m_lBarLen == 12 )
				{
					Mem_Set( (byte*)m_szBartmp, 0x00, sizeof(m_szBartmp) );
					Str_Cpy(m_szBartmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1)));
					
					PRINT("m_szBartmp0000000000000000 : %s",m_szBartmp,0,0);
					PRINT("stMtrChg.MTR_ID_NUMstMtrChg.MTR_ID_NUM : %s",stMtrChg.MTR_ID_NUM,0,0);

					if (Str_Cmp(m_szBartmp, stMtrChg.MTR_ID_NUM) == 0)
					{
						MessageBoxEx (CONFIRM_OK, "철거계량기와 설치계량기 \n 기물번호가 동일합니다.");
					}
					else
					{
						Barcode_Func();
						// Move_Card();
						ON_DRAW();
					}
					
				}
				else
				{
					MessageBoxEx (CONFIRM_OK, "기물번호 자리수가 상이합니다 \n (12자리)");
					// EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),   "");
				}

				Barcode();
				break;
			case BID_PHOTO:
				Mem_Set( (byte*)g_szSqlWhere, 0x00, sizeof(g_szSqlWhere) );
				Str_Cpy(g_szSqlWhere, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA3)));

				//g_lChgMtr_WorkFlag > = 0 가정용 계량기, = 1 대용량 계량기, = 2 보정기
				g_lChgMtr_WorkFlag = 0;
				g_lDataflag = 1;
				g_nPhotoFlag = 7;
				SaveInput();
				Set_Index();
				Card_Move("C6301_PHOTO");
				break;
			case BID_IMPOSSIBLE:
/*
				if( Str_Len(stMtrChg.REPL_NOT_PERMIT_WHY) > 0 )
				{
					MessageBoxEx (CONFIRM_OK, "이미 불가 입력한 자료입니다.");
					break;
				}
				else if( Str_Cmp(stMtrChg.SEND_YN, "S") == 0 || Str_Cmp(stMtrChg.SEND_YN, "Y") == 0 )
				{
					MessageBoxEx (CONFIRM_OK, "이미 교체 완료한 자료 입니다.");
					break;
				}
*/
				if( ( Str_Cmp(stMtrChg.SEND_YN, "S") == 0 || Str_Cmp(stMtrChg.SEND_YN, "Y") == 0 ) && Str_Len(stMtrChg.REPL_NOT_PERMIT_WHY) > 0 )
				{
					if( MessageBoxEx (CONFIRM_YESNO, "교체 불가를 정상으로 되돌리시겠습니까?")  == MB_OK)
					{
						Imp_Cancle();
						SetData();
						ReDraw();
						break;
					}
					else
					{
						break;
					}
				}
				else
				{
					g_lDataflag = 1;
					SaveInput();
					Set_Index();

					Mem_Set( (byte*)g_szSqlWhere, 0x00, sizeof(g_szSqlWhere) );
					Str_Cpy(g_szSqlWhere, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA3)));
					ON_EXIT();
					OnInit(INIT_IMPOSSIBLE);
				}
				break;
			case BID_SAVE:
				if( Str_Cmp(stMtrChg.SEND_YN, "Y") == 0 )
				{
					MessageBoxEx (CONFIRM_OK, "이미 송신완료한 자료 입니다.");
				}
				else if( Str_Cmp(stMtrChg.SEND_YN, "S") == 0 && Str_Len(stMtrChg.REPL_NOT_PERMIT_WHY) == 0 )
				{
					if( MessageBoxEx (CONFIRM_YESNO, "완료를 취소하겠습니까?")  == MB_OK)
					{
						Save_Cancle(ID);
						SetData();
						ReDraw();
						Set_Index();
						ON_DRAW();
						break;
					}
					else
					{
						break;
					}
				}
				else
				{
					Set_Index();
					if( Validate() )
					{
						OnButton(BID_NEXTPG);
					}
				}
				break;
			case BID_PREVPG:
				g_lDataflag = 0;
				//g_lMoveFlag = 0;
				Prev_Mtr();
				break;
			case BID_NEXTPG:
				g_lDataflag = 0;
				//g_lMoveFlag = 0;
				Next_Mtr();
				break;
			case GID_HOME:
				ShowSip(FALSE);
				g_Sipflag = 0;
				
				if( MessageBoxEx (CONFIRM_YESNO, "메인 메뉴로 나가시겠습니까?")  == MB_OK)
				{
					g_Del_GcPhoto();
					Set_Index();
					Card_Move("MENU");
				}
				break;
			case GID_MENU:
				ShowSip(FALSE);
				g_Sipflag = 0;
				
				if( MessageBoxEx (CONFIRM_YESNO, "계량기교체 메뉴로 나가시겠습니까?")  == MB_OK)
				{
					g_Del_GcPhoto();
					Set_Index();
					Card_Move("C6301_MENU");
				}
				break;
			case GID_KEYBOARD:
				g_SHOW_SIP();
				break;
			case GID_SCREEN:
				g_MOVE_DLG(400);
				break;
			case GID_CMMNWK:
				break;				
			case GID_PREV:
				if( m_bFirst == INIT_AMI )
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
				else if( m_bFirst == INIT_MTR )
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
				else if( m_bFirst == INIT_PAY )
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
				else if( m_bFirst == INIT_REMOTE )
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
				// else if( m_bFirst == INIT_BALANCE )
				// {
				// 	ON_EXIT();
				// 	OnInit(INIT_MAIN);
				// }
				else
				{
					ShowSip(FALSE);
					g_Sipflag = 0;
					
					g_Del_GcPhoto();
					Set_Index();
					Card_Move("C6301_LST");
				}
				break;	
			case GID_VMEXIT:
				Set_Index();
				g_Exit_DelGcData();
				break;
					
//불가사유
			case BID_IMPOK:
				if( Save_Impossible() )
				{
					Save_Cancle(ID);
					m_lSaveFlag = 1;
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
				break;
			case BID_IMPVIEW:
				Photo_View();
				break;
			case BID_IMPPHOTO:
				Shoto_Photo();
				break;
			case BID_IMPCANCEL:
				Imp_Cancle();
				ON_EXIT();
				OnInit(INIT_MAIN);
				break;
//지침입력
			case BID_VCOK:
				if( Vc_Validate() )
				{
					if( Save_Result() )
					{
						Set_Index();
						Card_Move("C631_LST");
					}
				}
				break;
			case BID_VCCANCEL:
				MessageBoxEx (CONFIRM_OK, "모든 지침을 입력하여야 합니다.");
			
				ON_EXIT();
				OnInit(INIT_MAIN);
				break;
			case BID_AMI:
				g_lDataflag = 1;
				SaveInput();
				Set_Index();
				Mem_Set( (byte*)m_lCheckAMI, 0x00, sizeof(m_lCheckAMI));
				Str_Cpy(m_lCheckAMI, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));				

				if(Str_Cmp(m_lCheckAMI, "AMI") == 0 && Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0 ){
					//MessageBoxEx (CONFIRM_OK, m_lCheckAMI);									
					OnInit(INIT_AMI);
					ReAmi();
				
				}else{}	
				break;
			case BID_AMICANCEL:
				ON_EXIT();
				OnInit(INIT_MAIN);
				break;
			case BID_AMIOK:
				if( Save_Ami() )
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
				}
				// SaveInputAmi();
				break;

			case BID_AMIBARCODE:
			     
				 m_lBarLen = Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA48)));
				if( m_lBarLen > 1 )
				{
					Mem_Set( (byte*)m_szBartmp, 0x00, sizeof(m_szBartmp) );
					Str_Cpy(m_szBartmp, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA48)));
					
					ON_DRAW();
				}
				
				Barcode();
 			    break;

			case BID_WRITE1:
				g_EditCtrl_ShowEditInput( Get_hDlgCtrlByID(TXT_DATA48), EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA48)) );
				break;				

			case BID_WRITE2:
				g_EditCtrl_ShowEditInput( Get_hDlgCtrlByID(TXT_DATA51), EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA51)) );
				break;	

			case BID_BARCODEOK:
				Save_Mtr();
				
				break;
			case BID_MTRBARCODE:
				 
				 m_lBarLen = Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA51)));
				if( m_lBarLen > 1 )
				{	
					Mem_Set( (byte*)m_szBartmp, 0x00, sizeof(m_szBartmp) );
					Str_Cpy(m_szBartmp, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA51)));
					
					ON_DRAW();
				}
				
				Barcode();	
				break;

			case BID_MTR:
				g_lDataflag = 1;

				SaveInput();
				Set_Index();
				// Mem_Set( (byte*)m_lCheckAMI, 0x00, sizeof(m_lCheckAMI));
				// Str_Cpy(m_lCheckAMI, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));				
				if(Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)
				{
					if(Str_Len(stMtrChg.BEFO_MTR_ID_NUM) == 0)
					{
						OnInit(INIT_MTR);
						ReMtr();
					}

				}
				break;

			case BID_PAY:
				// if(Str_Cmp(stUserinfo.szcenter_cd, "41") )
				g_lDataflag = 1;
				SaveInput();
				Set_Index();
				Mem_Set( (byte*)m_lCheckPAY, 0x00, sizeof(m_lCheckPAY));
				Str_Cpy(m_lCheckPAY, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));				

				Mem_Set( (byte*)m_lCheckPAY_2, 0x00, sizeof(m_lCheckPAY_2));
				Str_Cpy(m_lCheckPAY_2, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)));				
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {
					if(Str_Cmp(m_lCheckPAY, "펄스") == 0 || Str_Cmp(m_lCheckPAY, "다기능") == 0 || Str_Cmp(m_lCheckPAY, "누출점검용") == 0 
					|| Str_Cmp(m_lCheckPAY, "디지털 누출") == 0	|| Str_Cmp(m_lCheckPAY, "누출점검용(듀얼)") == 0 || Str_Cmp(m_lCheckPAY, "디지털 누출(듀얼)") == 0 )
					{
						// if(Str_Cmp(m_lCheckPAY_2, "미설치") != 0 && Str_Cmp(m_lCheckPAY_2, "") != 0 )
						if(Str_Cmp(m_lCheckPAY_2, "지시부형") == 0 || Str_Cmp(m_lCheckPAY_2, "CDMA") == 0 || Str_Cmp(m_lCheckPAY_2, "통합원격") == 0 || Str_Cmp(m_lCheckPAY_2, "디지로그") == 0 || Str_Cmp(m_lCheckPAY_2, "디지털변환기") == 0 )
						{
							if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
							{
								OnInit(INIT_PAY);
								RePay();
							}
							
						}
					}
					
				// }

				break;
			
			case BID_PAYOK:
				if( Save_Pay() )
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				}
				break;
			
			case BID_REMOTE:
				// if(Str_Cmp(stUserinfo.szcenter_cd, "41") )
				g_lDataflag = 1;
				SaveInput();
				Set_Index();
				Mem_Set( (byte*)m_lCheckPAY, 0x00, sizeof(m_lCheckPAY));
				Str_Cpy(m_lCheckPAY, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));				

				Mem_Set( (byte*)m_lCheckPAY_2, 0x00, sizeof(m_lCheckPAY_2));
				Str_Cpy(m_lCheckPAY_2, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)));			
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {
					if(Str_Cmp(m_lCheckPAY, "일반") != 0  )
					{
						// if(Str_Cmp(m_lCheckPAY_2, "미설치") != 0 && Str_Cmp(m_lCheckPAY_2, "") != 0 )
						if(Str_Cmp(m_lCheckPAY_2, "지시부형") == 0 || Str_Cmp(m_lCheckPAY_2, "CDMA") == 0 || Str_Cmp(m_lCheckPAY_2, "통합원격") == 0 || Str_Cmp(m_lCheckPAY_2, "디지로그") == 0 || Str_Cmp(m_lCheckPAY_2, "디지털변환기") == 0 )
						{
							if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
							{
								OnInit(INIT_REMOTE);
								ReRemote();
							}
							
						}
					}
					
				// }

				break;
			
			case BID_REMOTEOK:
				if( Save_Remote() )
				{
					ON_EXIT();
					OnInit(INIT_MAIN);
				// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
				}
				// SaveInputAmi();
				break;

			// case BID_BALANCE:

			// 	// if(Str_Cmp(stUserinfo.szcenter_cd, "41") )
			// 	g_lDataflag = 1;
			// 	SaveInput();
			// 	Set_Index();
			// 	Mem_Set( (byte*)m_lCheckPAY, 0x00, sizeof(m_lCheckPAY));
			// 	Str_Cpy(m_lCheckPAY, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));				

			// 	Mem_Set( (byte*)m_lCheckPAY_2, 0x00, sizeof(m_lCheckPAY_2));
			// 	Str_Cpy(m_lCheckPAY_2, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)));				
				
			// 	if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
			// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
			// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
			// 	{
			// 		if(Str_Cmp(m_lCheckPAY, "일반") != 0  )
			// 		{
			// 			if(Str_Cmp(m_lCheckPAY_2, "미설치") != 0 && Str_Cmp(m_lCheckPAY_2, "") != 0 )
			// 			{
			// 				OnInit(INIT_BALANCE);
			// 				// ReRemote();
			// 			}
			// 		}
					
			// 	}

			// 	break;
				
		}
	}		

//-------------------------------------------------------------------
	void	OnChar(long nChar)
	{
		if( m_bFirst == INIT_MAIN )
		{
			//숫자만 입력 가능
			if( Get_iDlgCtrlByID(EDT_DATA2) == m_lEditCtrlIndex ||
			    Get_iDlgCtrlByID(EDT_DATA3) == m_lEditCtrlIndex ||
				Get_iDlgCtrlByID(EDT_DATA11) == m_lEditCtrlIndex 
				)
			{
				if( (nChar < 48 ||  nChar > 57) )
				{
					MessageBoxEx (CONFIRM_OK, "숫자만 입력가능합니다.");
					EditCtrl_SetStr(Get_hDlgCtrlByIndex(m_lEditCtrlIndex), "");
					return;
				}
			}
		}
		else if( m_bFirst == INIT_VC )
		{
			//숫자만 입력 가능
			if( Get_iDlgCtrlByID(EDT_DATA4) == m_lEditCtrlIndex ||
			    Get_iDlgCtrlByID(EDT_DATA5) == m_lEditCtrlIndex ||
			    Get_iDlgCtrlByID(EDT_DATA6) == m_lEditCtrlIndex ||
			    Get_iDlgCtrlByID(EDT_DATA7) == m_lEditCtrlIndex ||
			    Get_iDlgCtrlByID(EDT_DATA8) == m_lEditCtrlIndex ||
			    Get_iDlgCtrlByID(EDT_DATA9) == m_lEditCtrlIndex  )
			{
				if( (nChar < 48 ||  nChar > 57) )
				{
					MessageBoxEx (CONFIRM_OK, "숫자만 입력가능합니다.");
					EditCtrl_SetStr(Get_hDlgCtrlByIndex(m_lEditCtrlIndex), "");
					return;
				}
			}
		}
		else if( m_bFirst == INIT_PAY )
		{
 			if( Get_iDlgCtrlByID(EDT_DATA12) == m_lEditCtrlIndex)
			{
				if( (nChar < 48 ||  nChar > 57) )
				{
					MessageBoxEx (CONFIRM_OK, "숫자만 입력가능합니다.");
					EditCtrl_SetStr(Get_hDlgCtrlByIndex(m_lEditCtrlIndex), "");
					return;
				}	
			}
		}
		// else if( m_bFirst == INIT_AMI)
		// {
		// 	if( Get_iDlgCtrlByID(TXT_DATA48) == m_lEditCtrlIndex)
		// 	{
		// 		if( (nChar < 48 ||  nChar > 57) )
		// 		{
		// 			MessageBoxEx (CONFIRM_OK, "숫자만 입력가능합니다.");
		// 			EditCtrl_SetStr(Get_hDlgCtrlByIndex(m_lEditCtrlIndex), "");
		// 			return;
		// 		}
		// 	}
		// }
	}


	//-------------------------------------------------------------------------
	void	OnPointing(long nAction, long X, long Y)
	{
		long lActiveIndex = -1;

		//EDITCTRL에 ACTIVE시에 CTRLINDEX를 저장
		//키보드 BUTTONCTRL이 ACTIVE시에도 EDITCTRL에 커서를 두기위해서 INDEX를 저장
		lActiveIndex = Dialog_GetActiveCtrlIndex(this->m_hDlg);	
		
		if( m_bFirst == INIT_MAIN )
		{
			if( POINTING_UP == nAction )
			{
				m_lEditCtrlIndex = lActiveIndex;
				
				if( theDevInfo.m_nType > FAMILY_PDA )
				{
					if( X > DMS_X(STARTX+580) && X < DMS_X(STARTX+1000) && Y > DMS_Y(STARTY+470-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+520-(g_Dlgflag*400)) )
					{
						if( Get_iDlgCtrlByID(EDT_DATA1) == lActiveIndex )	
						{
							
							g_Dlgflag = 0;
							g_MOVE_DLG(400);
							
							
							ShowSip(FALSE);
							g_Sipflag = 0;
							
							//ShowSip(TRUE);
							//g_Sipflag = 1;
							
						}
					}
					else if( X > DMS_X(STARTX+200) && X < DMS_X(STARTX+580) && Y > DMS_Y(STARTY+720-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+770-(g_Dlgflag*400)) 
						  || X > DMS_X(STARTX+580) && X < DMS_X(STARTX+1000) && Y > DMS_Y(STARTY+720-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+770-(g_Dlgflag*400))
						  || X > DMS_X(STARTX+580) && X < DMS_X(STARTX+800) && Y > DMS_Y(STARTY+770-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+820-(g_Dlgflag*400)))
					{
						if( Get_iDlgCtrlByID(EDT_DATA2) == lActiveIndex || Get_iDlgCtrlByID(EDT_DATA3) == lActiveIndex
						   || Get_iDlgCtrlByID(EDT_DATA11) == lActiveIndex)	
						{	
							if(Get_iDlgCtrlByID(EDT_DATA11) == lActiveIndex)
							{
								if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA11)), "기타부품") == 0 )
								{
									EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA11), "");
								}
							}
							g_Dlgflag = 0;
							g_MOVE_DLG(400);
							
							ShowSip(FALSE);
							g_Sipflag = 0;
						}
					}
					else
					{
						if( X > DMS_X(0) && X < DMS_X(333) && Y > DMS_Y(STARTY+940-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1030-(g_Dlgflag*400))  )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '1' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(333) && X < DMS_X(666) && Y > DMS_Y(STARTY+940-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1030-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '2' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(666) && X < DMS_X(1000) && Y > DMS_Y(STARTY+940-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1030-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '3' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(0) && X < DMS_X(333) && Y > DMS_Y(STARTY+1030-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1120-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '4' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(333) && X < DMS_X(666) && Y > DMS_Y(STARTY+1030-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1120-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '5' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(666) && X < DMS_X(1000) && Y > DMS_Y(STARTY+1030-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1120-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '6' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(0) && X < DMS_X(333) && Y > DMS_Y(STARTY+1120-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1210-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '7' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(333) && X < DMS_X(666) && Y > DMS_Y(STARTY+1120-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1210-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '8' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(666) && X < DMS_X(1000) && Y > DMS_Y(STARTY+1120-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1210-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '9' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(333) && X < DMS_X(666) && Y > DMS_Y(STARTY+1210-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1300-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '0' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(666) && X < DMS_X(1000) && Y > DMS_Y(STARTY+1210-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1300-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_KEY( 5 );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else
						{
							g_Dlgflag = 1;
							g_MOVE_DLG(1);
						
							ShowSip(FALSE);
							g_Sipflag = 0;
						}
					}
					
					ON_DRAW();
				}
			}
		}
		else if( m_bFirst == INIT_VC )
		{
			if( POINTING_UP == nAction )
			{
				m_lEditCtrlIndex = lActiveIndex;
				
				if( theDevInfo.m_nType > FAMILY_PDA )
				{
					if( X > DMS_X(STARTX+250) && X < DMS_X(STARTX+625) && Y > DMS_Y(STARTY+50) && Y < DMS_Y(STARTY+120) ||
						X > DMS_X(STARTX+625) && X < DMS_X(STARTX+1000) && Y > DMS_Y(STARTY+50) && Y < DMS_Y(STARTY+120) ||
						X > DMS_X(STARTX+250) && X < DMS_X(STARTX+625) && Y > DMS_Y(STARTY+120) && Y < DMS_Y(STARTY+190) ||
						X > DMS_X(STARTX+625) && X < DMS_X(STARTX+1000) && Y > DMS_Y(STARTY+120) && Y < DMS_Y(STARTY+190) ||
						X > DMS_X(STARTX+250) && X < DMS_X(STARTX+625) && Y > DMS_Y(STARTY+190) && Y < DMS_Y(STARTY+260) ||
						X > DMS_X(STARTX+625) && X < DMS_X(STARTX+1000) && Y > DMS_Y(STARTY+190) && Y < DMS_Y(STARTY+260) )
					{
						if( Get_iDlgCtrlByID(EDT_DATA4) == lActiveIndex ||
							Get_iDlgCtrlByID(EDT_DATA5) == lActiveIndex ||
							Get_iDlgCtrlByID(EDT_DATA6) == lActiveIndex ||
							Get_iDlgCtrlByID(EDT_DATA7) == lActiveIndex ||
							Get_iDlgCtrlByID(EDT_DATA8) == lActiveIndex ||
							Get_iDlgCtrlByID(EDT_DATA9) == lActiveIndex )	
						{
							ShowSip(FALSE);
							g_Sipflag = 0;

							ShowSip(TRUE);
							g_Sipflag = 1;
						}
					}
					else
					{
						ShowSip(FALSE);
						g_Sipflag = 0;
					}
				}
				
				ON_DRAW();
			}
		}
		else if( m_bFirst == INIT_PAY )
		{
			if( POINTING_UP == nAction )
			{
				m_lEditCtrlIndex = lActiveIndex;
				
				if( theDevInfo.m_nType > FAMILY_PDA )
				{
					if( X > DMS_X(STARTX+230) && X < DMS_X(STARTX+1000) && Y > DMS_Y(STARTY+215-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+465-(g_Dlgflag*400)))
					{
						if( Get_iDlgCtrlByID(EDT_DATA12) == lActiveIndex )	
						{
							// if(Get_iDlgCtrlByID(EDT_DATA11) == lActiveIndex)
							// {
							// 	if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA11)), "기타부품") == 0 )
							// 	{
							// 		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA11), "");
							// 	}
								
							// }
							
							g_Dlgflag = 1;
							g_MOVE_DLG(400);	
							
							ShowSip(FALSE);
							g_Sipflag = 0;
						}
					}
					else
					{
						if( X > DMS_X(0) && X < DMS_X(333) && Y > DMS_Y(STARTY+940-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1030-(g_Dlgflag*400))  )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '1' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(333) && X < DMS_X(666) && Y > DMS_Y(STARTY+940-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1030-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '2' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(666) && X < DMS_X(1000) && Y > DMS_Y(STARTY+940-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1030-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '3' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(0) && X < DMS_X(333) && Y > DMS_Y(STARTY+1030-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1120-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '4' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(333) && X < DMS_X(666) && Y > DMS_Y(STARTY+1030-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1120-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '5' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(666) && X < DMS_X(1000) && Y > DMS_Y(STARTY+1030-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1120-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '6' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(0) && X < DMS_X(333) && Y > DMS_Y(STARTY+1120-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1210-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '7' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(333) && X < DMS_X(666) && Y > DMS_Y(STARTY+1120-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1210-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '8' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(666) && X < DMS_X(1000) && Y > DMS_Y(STARTY+1120-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1210-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '9' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(333) && X < DMS_X(666) && Y > DMS_Y(STARTY+1210-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1300-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_CHAR( '0' );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else if( X > DMS_X(666) && X < DMS_X(1000) && Y > DMS_Y(STARTY+1210-(g_Dlgflag*400)) && Y < DMS_Y(STARTY+1300-(g_Dlgflag*400)) )
						{
							if( g_Dlgflag == 1 )
							{
								ON_KEY( 5 );
								VM_PlaySound(CLICKSOUND);
							}
						}
						else
						{
							g_Dlgflag = 1;
							g_MOVE_DLG(1);
						
							ShowSip(FALSE);
							g_Sipflag = 0;
						}
					}
					
					ON_DRAW();
				}
			}
		}
	}

//------------------------------------------------------------------
	void	OnSelect(long Index)
	{
		long i, lCnt;
		char szTmp[30];
		char szRemoteCd[20];
		char szMtrKindCd[20];
		long lActiveIndex;
		
		lActiveIndex = Dialog_GetActiveCtrlIndex(this->m_hDlg);
		
		if( m_bFirst == INIT_MAIN )
		{
			if( lActiveIndex == Get_iDlgCtrlByID(CMB_DATA1 + 1) )
			{
				Mem_Set( (byte*)m_szRemote, 0x00, sizeof(m_szRemote));
				Str_Cpy(m_szRemote, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)));

				Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
				Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
				SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30008' AND ITEM_KNAME = '%s' ", m_szRemote, 0, 0 );
				g_Sql_RetStr( m_szSql, 20, m_szTmp );		
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// 		|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
				// 		|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {
					if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "다기능") == 0 
						|| Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "누출점검용") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털 누출") == 0
						|| Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "누출점검용(듀얼)") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털 누출(듀얼)") == 0)
					{
						if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
						}
						
						// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);
						
					}
					else if(Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털(듀얼)") == 0 )
					{
						ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
						// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);
					}
					else if (Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "펄스") == 0)
					{
						// if(Str_Cmp(m_szTmp, "10") != 0 ) //미설치가 아니면						
						if(Str_Cmp(m_szTmp, "20") == 0 || Str_Cmp(m_szTmp, "30") == 0 || Str_Cmp(m_szTmp, "40") == 0 || Str_Cmp(m_szTmp, "50") == 0 || Str_Cmp(m_szTmp, "60") == 0 )
						{
							if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
							{
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
							}
						}
						// else if(Str_Cmp(m_szTmp, "10") == 0) //미설치
						else
						{
							
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);

						}
						
						// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
						// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);
					}
					else
					{
						ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLBKCOLOR);
					}
					//20240723 박준범차장님 기존 디지로그만 변경가능이였는데 다른 원격구분도 변경가능하도록 요청(?)
					// if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
					// {
					// 	if(Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0 ) //디지로그
					// 	{
					// 		if (Str_Cmp(m_szTmp, "20") == 0 || Str_Cmp(m_szTmp, "40") == 0 ) //지시부형과 통합원격으로 변경가능.
					// 		{}
					// 		else if(Str_Cmp(m_szTmp,stMtrChg.MTR_REMOTE_FLAG) != 0)
					// 		{
					// 			MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
					// 			return;
					// 		}
					// 		else
					// 		{
								
					// 		}
					// 	}
					// 	else if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, stMtrChg.AFTER_MTR_REMOTE_FLAG) != 0)
					// 	{	
					// 		// MessageBoxEx (CONFIRM_OK, "철거계량기와 설치계량기\n 원격구분이 같아야 합니다.");
					// 		MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
					// 		return;
					// 	}

					// }
					

					// if( Str_Cmp(stMtrChg.MTR_KIND,"20") == 0 && Str_Cmp(stMtrChg.AFTER_MTR_KIND,"21") == 0) //디지털은 디지털(듀얼)과 교체가능
					// {}
					// else if( Str_Cmp(stMtrChg.MTR_KIND,"60") == 0 && Str_Cmp(stMtrChg.AFTER_MTR_KIND,"61") == 0)//누출점검은 누출점검(듀얼) 교체가능
					// {}
					// else if( Str_Cmp(stMtrChg.MTR_KIND,"65") == 0 && Str_Cmp(stMtrChg.AFTER_MTR_KIND,"66") == 0)//디지털누출점검은 디지털누출점검(듀얼) 교체가능
					// {}
					// else if( Str_Cmp(stMtrChg.AFTER_MTR_KIND, stMtrChg.MTR_KIND) != 0)
					// {
					// 	// MessageBoxEx (CONFIRM_OK, "철거계량기와 설치계량기 \n 종류가 같아야 합니다.");
					// 	MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.44444");
					// 	return;
					// }
				// }
				// else
				// {
				// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_PAY), FALSE );								
				// 	ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GRAY);
				// }
				
			}
			else if( lActiveIndex == Get_iDlgCtrlByID(CMB_DATA3 + 1) )
			{
				Mem_Set( (byte*)szRemoteCd, 0x00, sizeof(szRemoteCd) );
				Mem_Set( (byte*)szMtrKindCd, 0x00, sizeof(szMtrKindCd) );
				
				Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
				Mem_Cpy((byte *)szTmp, (byte *)EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1))+5, 1);
				
				i = Str_AtoI(szTmp);
				
				if( i == 2 )
				{
					if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA3)), "N:신품") != 0 )
					{
						// 종류 : 일반
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						Str_Cpy(szMtrKindCd, "10");
						
						// 원격 : 미설치, 비활성화
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						Str_Cpy(szRemoteCd, "10");	
					}
					else
					{
						// 종류 : 펄스
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 3));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						Str_Cpy(szMtrKindCd, "30");
						
						/*
						// 원격 : 지시부형, 활성화
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 1));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						Str_Cpy(szRemoteCd, "20");
						*/
						
						// 원격 : 활성화
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					}
				}
			}
			else if( lActiveIndex == Get_iDlgCtrlByID(CMB_DATA2 + 1) )
			{
				Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql));
				Str_Cpy(m_szSql, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));	

				if(Str_Cmp(m_szSql, "AMI") == 0 && Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0 )
				{
					ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
				}
			}
			
			ON_DRAW();
		}
		
		return;
	}	

//------------------------------------------------------------------
	void SetBtnImg(void)
	{
		void* h;

		if( m_bFirst == INIT_MAIN )
		{
			IconCtrl_SetImage(Get_hDlgCtrlByID(ICON_TITLE), 0, g_pImgMainTtl );		//타이틀
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_TITLE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	
			if( theDevInfo.m_nType > FAMILY_PDA )
			{
				//상단공통메뉴
				h = GetSysButHandle(GID_HOME);
				ButCtrl_SetImage( h,  g_pImgHomeI);
				ButCtrl_SetActiveImage( h,  g_pImgHomeA);
				
				h = GetSysButHandle(GID_KEYBOARD);
				ButCtrl_SetImage( h,  g_pImgKeybrdI);
				ButCtrl_SetActiveImage( h,  g_pImgKeybrdA);
				
				h = GetSysButHandle(GID_SCREEN);
				ButCtrl_SetImage( h,  g_pImgScreenI);
				ButCtrl_SetActiveImage( h,  g_pImgScreenA);
				
				h = GetSysButHandle(GID_CMMNWK);
				ButCtrl_SetImage( h,  g_pImgCmmnwrkI);
				ButCtrl_SetActiveImage( h,  g_pImgCmmnwrkA);
				
				h = GetSysButHandle(GID_VMEXIT);
				ButCtrl_SetImage( h,  g_pImgExitI);
				ButCtrl_SetActiveImage( h,  g_pImgExitA);
			}
		}
		else if( m_bFirst == INIT_AMI )
		{
			IconCtrl_SetImage(Get_hDlgCtrlByID(ICON_TITLE), 0, g_pImgMainTtl );		//타이틀
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_TITLE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			
	
			if( theDevInfo.m_nType > FAMILY_PDA )
			{
				//상단공통메뉴
				h = GetSysButHandle(GID_HOME);
				ButCtrl_SetImage( h,  g_pImgHomeI);
				ButCtrl_SetActiveImage( h,  g_pImgHomeA);
				
				h = GetSysButHandle(GID_KEYBOARD);
				ButCtrl_SetImage( h,  g_pImgKeybrdI);
				ButCtrl_SetActiveImage( h,  g_pImgKeybrdA);
				
				h = GetSysButHandle(GID_SCREEN);
				ButCtrl_SetImage( h,  g_pImgScreenI);
				ButCtrl_SetActiveImage( h,  g_pImgScreenA);
				
				h = GetSysButHandle(GID_CMMNWK);
				ButCtrl_SetImage( h,  g_pImgCmmnwrkI);
				ButCtrl_SetActiveImage( h,  g_pImgCmmnwrkA);
				
				h = GetSysButHandle(GID_VMEXIT);
				ButCtrl_SetImage( h,  g_pImgExitI);
				ButCtrl_SetActiveImage( h,  g_pImgExitA);
			}
		}
		else if( m_bFirst == INIT_MTR )
		{
			IconCtrl_SetImage(Get_hDlgCtrlByID(ICON_TITLE), 0, g_pImgMainTtl );		//타이틀
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_TITLE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			
			if( theDevInfo.m_nType > FAMILY_PDA )
			{
				//상단공통메뉴
				h = GetSysButHandle(GID_HOME);
				ButCtrl_SetImage( h,  g_pImgHomeI);
				ButCtrl_SetActiveImage( h,  g_pImgHomeA);
				
				h = GetSysButHandle(GID_KEYBOARD);
				ButCtrl_SetImage( h,  g_pImgKeybrdI);
				ButCtrl_SetActiveImage( h,  g_pImgKeybrdA);
				
				h = GetSysButHandle(GID_SCREEN);
				ButCtrl_SetImage( h,  g_pImgScreenI);
				ButCtrl_SetActiveImage( h,  g_pImgScreenA);
				
				h = GetSysButHandle(GID_CMMNWK);
				ButCtrl_SetImage( h,  g_pImgCmmnwrkI);
				ButCtrl_SetActiveImage( h,  g_pImgCmmnwrkA);
				
				h = GetSysButHandle(GID_VMEXIT);
				ButCtrl_SetImage( h,  g_pImgExitI);
				ButCtrl_SetActiveImage( h,  g_pImgExitA);
			}

		}
		else
		{
			IconCtrl_SetImage(Get_hDlgCtrlByID(ICON_TITLE), 0, g_pImgPopTtlL );		//타이틀
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_TITLE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		}

	}
	
//------------------------------------------------------------------
	void SetStyle(void)
	{
		if( m_bFirst == INIT_MAIN )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_PAGE ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA1 ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA2 ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA4 ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA5 ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        // EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA6 ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA7 ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA8 ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA9 ), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA10), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA11), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA12), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA13), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA14), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA16), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA17), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA18), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA19), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA20), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA21), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA22), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA23), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA24), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA25), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA26), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA27), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA28), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA29), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA30), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA31), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA32), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA33), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA1), EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA2), EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA3), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA11), EDITALIGN_MIDDLE);



	        EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA1), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA2), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA3), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA4), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA5), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
	        
	        EditCtrl_SetMultiLine(Get_hDlgCtrlByID(TXT_DATA3), TRUE, 2, EDITSEP_NONE );
	        EditCtrl_SetMultiLine(Get_hDlgCtrlByID(CMB_DATA2), TRUE, 2, EDITSEP_NONE );
			EditCtrl_SetMultiLine(Get_hDlgCtrlByID(CMB_DATA3), TRUE, 2, EDITSEP_NONE );
			

			if( theDevInfo.m_nType > FAMILY_PDA )
			{
				//숫자판
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_ONE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_TWO), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_THREE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_FOUR), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_FIVE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_SIX), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_SEVEN), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_EIGHT), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_NINE), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_ZERO), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
				EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_KEY_DEL), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			}
		}
		else if( m_bFirst == INIT_IMPOSSIBLE )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA34), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA35), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA6), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA7), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		}
		else if( m_bFirst == INIT_VC )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA37), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA38), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA39), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA40), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA41), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA4), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA5), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA6), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA7), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA8), EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(EDT_DATA9), EDITALIGN_MIDDLE);
		}
		else if( m_bFirst == INIT_AMI )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA42), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA43), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA44), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA45), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA46), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA47), EDITALIGN_CENTER|EDITALIGN_MIDDLE);			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA68), EDITALIGN_CENTER|EDITALIGN_MIDDLE);			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA48), EDITALIGN_TOP);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA49), EDITALIGN_CENTER|EDITALIGN_MIDDLE);			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA50), EDITALIGN_CENTER|EDITALIGN_MIDDLE);			
			EditCtrl_SetMultiLine(Get_hDlgCtrlByID(TXT_DATA48), TRUE, 2, EDITSEP_NONE );
			

			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA9), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA10), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA11), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA12), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA18), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		}
		else if( m_bFirst == INIT_MTR )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA51), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA52), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA53), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA54), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA55), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA56), EDITALIGN_CENTER|EDITALIGN_MIDDLE);			
		}
		else if( m_bFirst == INIT_PAY )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA57), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA58), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA59), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA60), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA61), EDITALIGN_CENTER|EDITALIGN_MIDDLE);

			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA13), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA14), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		}
		else if( m_bFirst == INIT_REMOTE )
		{
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA62), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA63), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA64), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			
			EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA15), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		}
		// else if( m_bFirst == INIT_BALANCE )
		// {
		// 	EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA65), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		// 	EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA66), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		// 	EditCtrl_SetAlign( Get_hDlgCtrlByID(TXT_DATA67), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
			
		// 	EditCtrl_SetAlign( Get_hDlgCtrlByID(CMB_DATA17), EDITALIGN_CENTER|EDITALIGN_MIDDLE);
		// }


	}

//------------------------------------------------------------------
	void SetCombo(void)
	{
		long i;
		long lRet, lDate, lYear, lMonth;
		char szDate[30];
		char szYear[20];
		char szYear2[20];
		char szMonth[20];
		char szRet[30];
	
		if( m_bFirst == INIT_MAIN )
		{
			//원격
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008'", CMB_DATA1+2);
			//종류
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087'", CMB_DATA2+2);
			//교체사유
			
			if (Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)
			{
				Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
				g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30009' AND CODE_ITEM <> '300' AND CODE_ITEM <> '001'  AND CODE_ITEM <> '202'", CMB_DATA5+2);	
			}
			else
			{
				Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
				g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30009' AND CODE_ITEM <> '300' AND CODE_ITEM <> '001' AND CODE_ITEM <> '202' AND CODE_ITEM <> '301'", CMB_DATA5+2);	
			}
			

			if( Str_Len(stMtrChg.AFTER_MTR_ID_NUM) > 0 )
			{
				Mem_Set( (byte*)szYear, 0x00, sizeof(szYear) );
				Mem_Set( (byte*)szYear2, 0x00, sizeof(szYear2) );
				Mem_Set( (byte*)szDate, 0x00, sizeof(szDate) );
				
				// 바코드 년도
				Mem_Cpy((byte *)szYear, (byte *)stMtrChg.AFTER_MTR_ID_NUM, 2);
				
				if( Str_Len(szYear) == 0 )
				{
					return;
				}
				
				// 현재 년도
				Str_ItoA(Time_GetYear(), szDate, 10);
				Mem_Cpy((byte *)szYear2, (byte *)szDate+2, 2);
				
				// 현재 월
				lMonth = Time_GetMonth();
				
				ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
				ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
				
				// 상반기
				if( lMonth < 7 )
				{
					// 교체(월) 기준 (1월~ 6월)은 기물번호 바코드 앞 2자리가 (전년) 및 (당해년도) 인 경우 [신품]
					if( Str_AtoI(szYear) == Str_AtoI(szYear2) || Str_AtoI(szYear) == (Str_AtoI(szYear2) - 1) )
					{
						//상태 value
						Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
						//상태 code
						Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);	
					}
					else
					{
						if(Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)
						{
							//상태 value
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
							//상태 code
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);	
						}
						else
						{
							//상태 value
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM <> '10' AND A.CODE_ITEM <> '20' UNION ALL SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
							//상태 code
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004'  AND A.CODE_ITEM <> '10'  AND A.CODE_ITEM <> '20' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);					  
						}
						
					}
				}
				//하반기
				else
				{
					// 교체(월) 기준 (7월~12월)은 기물번호 바코드 앞 2자리가 (당해년도) 인 경우 [신품]
					if( Str_AtoI(szYear) == Str_AtoI(szYear2) )
					{
						//상태 value
						Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
						//상태 code
						Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);	
					}
					else
					{
						if(Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)
						{
							//상태 value
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
							//상태 code
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);	
						}
						else
						{
							//상태 value
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM <> '10' AND A.CODE_ITEM <> '20' UNION ALL SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
							//상태 code
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004'  AND A.CODE_ITEM <> '10'  AND A.CODE_ITEM <> '20' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);					  	
						}
					}
				}
			}
			else
			{
				if( g_lDataflag == 1 && Str_Cmp(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10") != 0 )
				{
					//구형 바코드(수리품) 스캔 후 상태 콤보박스 셋팅
					//상태 value
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM <> '10' AND A.CODE_ITEM <> '20' UNION ALL SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
					//상태 code
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004'  AND A.CODE_ITEM <> '10'  AND A.CODE_ITEM <> '20' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);		
				}
				else
				{
					//일반적인 상태 콤보박스 셋팅
					//상태 value
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
					//상태 code
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
				}
			}
		}
		else if( m_bFirst == INIT_IMPOSSIBLE )
		{
			//방문일자
			lDate = Time_GetDate();
			for(i = 0 ; i < 5 ; i++)
			{
				Mem_Set( (byte*)szDate, 0x00, sizeof(szDate) );
				Mem_Set( (byte*)szRet, 0x00, sizeof(szRet) );
				lRet = Time_DateUpDown ( lDate, -i ); 
				Str_ItoA(lRet, szRet, 10);
				g_Str_DateType( szDate, szRet);
				ListCtrl_AddItem (Get_hDlgCtrlByID(CMB_DATA6+2), szDate, 0, ICON_NONE);
			}
			
			//불가사유
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30125'", CMB_DATA7+2);
		}
		else if( m_bFirst == INIT_AMI)
		{
			//원격
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C31074'", CMB_DATA9+2);
			//유입구분
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C31072'", CMB_DATA10+2);
			//집중기설치비용
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30023' AND CODE_ITEM != 'U'", CMB_DATA18+2);
			//무전표 교체기관
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30054'", CMB_DATA11+2);
			//무전표 교체사유
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30123'", CMB_DATA12+2);

		}
		else if( m_bFirst == INIT_PAY)
		{
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30023' AND CODE_ITEM != 'U'", CMB_DATA13+2);

			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30023' AND CODE_ITEM != 'U'", CMB_DATA14+2);

		}
		else if( m_bFirst == INIT_REMOTE)
		{
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			g_Sql_SetCombo("SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C31097' ORDER BY CAST(CODE_ITEM AS INTEGER)", CMB_DATA15+2);

		}
		return;
	}

//------------------------------------------------------------------
	void SetCombo_Valid(void)
	{
		//유효 콤보 셋팅
		long i;
		long lRet, lDate, lYear, lMonth;
		char szDate[30];
		char szYear[20];
		char szYear2[20];
		char szMonth[20];
		char szRet[30];

		//유효
		Mem_Set( (byte*)szYear, 0x00, sizeof(szYear) );
		lYear = Time_GetYear();
		Str_ItoA(lYear, szYear, 10);
		
		Mem_Set( (byte*)szMonth, 0x00, sizeof(szMonth) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		lMonth = Time_GetMonth();
		if( lMonth < 10 )
		{
			Str_ItoA(lMonth, m_szTmp, 10);
			Str_Cpy(szMonth, "0");
			Str_Cat(szMonth, m_szTmp);
		}
		else
		{
			Str_ItoA(lMonth, m_szTmp, 10);
			Str_Cpy(szMonth, m_szTmp);
		}

		Str_Cat(szYear, szMonth);
		Str_Cat(szYear, "15");
		lDate = Str_AtoI(szYear) + 50000;		//5년
		for(i = 0 ; i < 6 ; i++)
		{
			lRet = Time_DateUpDown ( lDate, -(i*30) ); 
			Mem_Set( (byte*)szRet, 0x00, sizeof(szRet) );
			Mem_Set( (byte*)szDate, 0x00, sizeof(szDate) );
			Str_ItoA( lRet, szDate, 10);
			Mem_Cpy( (byte*)szRet, (byte*)szDate, 6);
			ListCtrl_AddItem (Get_hDlgCtrlByID(CMB_DATA4+2), szRet, 0, ICON_NONE);
		}
		
		return;
	}

//------------------------------------------------------------------
	void SetData(void)
	{
		long i;
		char szindex[5];
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();

		Mem_Set((byte*)&stMtrChg, 0x00, sizeof(stMtrChg));
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );

		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			goto Finally;
		}

		

		hstmt = sql->CreateStatement(sql,
"SELECT \
ROWID, MTR_NUM, OBJ_CRT_YMD, REPL_OCCU_FLAG, CENTER_CD, PDA_REPL_JOB_ITEM, INST_PLACE_NUM, CITY, AREA, TOWN, VILLAGE \
, ADDR1_M, ADDR1_S, LOT_NUM_SECOND_ADDR, TRIM(CO_LIVE_NM), TRIM(HOUSE_CNT), BLD_NM, DETA_FLOOR, CUST_NUM, CUST_TYPE_CD, CUST_NM \
, FIRM_NM, BIZ_REGI_NUM, TRIM(SOC_NUM), REPRE_NM, CP_DDD, CP_EXN, CP_NUM, OWNHOUSE_TEL_DDD, OWNHOUSE_TEL_EXN, OWNHOUSE_TEL_NUM \
, FIRM_TEL_DDD, FIRM_TEL_EXN, FIRM_TEL_NUM, USE_CONT_NUM, PROD_NM, CONT_YMD, CNL_YMD, MTR_ID_NUM, MTR_MODEL_CD, MTR_GRD \
, MTR_FORM, MTR_TYPE, MTR_REMOTE_FLAG, MTR_KIND, MTR_FORM_APPRO_YN, MTR_DIGIT_CNT, MTR_NEW_FIX_FLAG, FIX_FIRM_NM_CD \
, MTR_VALID_YM, MTR_LOC_FLAG, MTR_DETA_LOC, COMPENS_NUM, COMPENS_ID_NUM, COMPENS_MODEL_CD, COMPENS_FLAG, COMPENS_VALID_YM \
, COMPENS_FORM_APPRO_YN, BEFO_INDI_VM, BEFO_INDI_VA, BEFO_INDI_VC, REPL_STS, ZIP_NO1, ZIP_NO2, MTR_FEE_FREE_FLAG, MTR_REPL_WHY \
, MTR_BAR, AFTER_MTR_ID_NUM, AFTER_MTR_MODEL_CD, AFTER_MTR_GRD, AFTER_MTR_FORM, AFTER_MTR_TYPE, AFTER_MTR_REMOTE_FLAG \
, AFTER_MTR_KIND, AFTER_MTR_DIGIT_CNT, AFTER_MTR_NEW_FIX_FLAG, AFTER_FIX_FIRM_NM_CD, AFTER_MTR_VALID_YM, COMPENS_FEE_FREE_FLAG \
, COMPENS_REPL_WHY, COMPENS_BAR, AFTER_COMPENS_NUM, AFTER_COMPENS_ID_NUM, AFTER_COMPENS_MODEL_CD, AFTER_COMPENS_VALID_YM \
, AFTER_COMPENS_PRESS, REMOVE_INDI_VM, REMOVE_INDI_VA, REMOVE_INDI_VC, REMOVE_MTR_FLAG, REPL_NOT_PERMIT_WHY, JOB_DTM \
, JOBER_EMPID, MTR_PHOTO, COMPENS_PHOTO, CUST_SIGN, SEND_YN, AFTER_MTR_APPRO_YN, AFTER_FORM_APPRO_YN, INST_INDI_VM, INST_INDI_VA \
, INST_INDI_VC, TEMPER, PRESS, REVIS_PARA, BEFO_TEMPER, BEFO_PRESS, BEFO_REVIS_PARA, UPD_DTM, UPD_EMPID, CRT_DTM, CRT_EMPID \
, PDA_NUM, TREAT_FLAG, REVIS_FLAG, MTR_SUPPLY_STS, TRIM(COMPENS_MAKER_NM), VISIT_YMD, MEMO, LAW_TOWN, NEW_ROAD_NM, NEW_ADDR_M, NEW_ADDR_S, BACK_REPL_STS, CONT_STS_CD,COMM_NUM_24,COMM_FIRM,INFLOW_FLAG \
, NOBILL_YN , PROD_CONT_SEQ ,BULD_CENTER_CD ,CHK_BULD_CENTER_CD, REPL_TREAT_INSTI , NO_BILL_REPL_WHY ,IFNULL(OTHER_PRICE,'') , IFNULL(BATTERY_YN,'') , IFNULL(MTRDISPLAY_YN,'') , IFNULL(REMOTE_SYSTEM,'') , 'N' , AMI_OBJ_YN , CONCENT_INST_AMT_YN \
FROM C6301_CHANGEDATA WHERE ROWID = ?"
		);
		
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		i = 0;
		Mem_Set((byte*)&szindex, 0x00, sizeof(szindex));
		Str_ItoA(g_lindex,szindex,10);

		sql->Bind(sql, i++, 'U', (long*)&szindex , 4, DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally;
		}

		if(sql->Next(sql) == TRUE )
		{	
			i = 0;
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.ROWID                   , 3  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_NUM                 , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.OBJ_CRT_YMD             , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REPL_OCCU_FLAG          , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CENTER_CD               , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.PDA_REPL_JOB_ITEM       , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.INST_PLACE_NUM          , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CITY                    , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AREA                    , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.TOWN                    , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.VILLAGE                 , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.ADDR1_M                 , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.ADDR1_S                 , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.LOT_NUM_SECOND_ADDR     , 100+1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CO_LIVE_NM              , 60 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.HOUSE_CNT               , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BLD_NM                  , 150+1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.DETA_FLOOR              , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CUST_NUM                , 10 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CUST_TYPE_CD            , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CUST_NM                 , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.FIRM_NM                 , 50 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BIZ_REGI_NUM            , 10 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.SOC_NUM                 , 13 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REPRE_NM                , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CP_DDD                  , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CP_EXN                  , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CP_NUM                  , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.OWNHOUSE_TEL_DDD        , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.OWNHOUSE_TEL_EXN        , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.OWNHOUSE_TEL_NUM        , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.FIRM_TEL_DDD            , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.FIRM_TEL_EXN            , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.FIRM_TEL_NUM            , 4  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.USE_CONT_NUM            , 10 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.PROD_NM                 , 50 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CONT_YMD                , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CNL_YMD                 , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_ID_NUM              , 20 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_MODEL_CD            , 5  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_GRD                 , 7  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_FORM                , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_TYPE                , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_REMOTE_FLAG         , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_KIND                , 3  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_FORM_APPRO_YN       , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_DIGIT_CNT           , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_NEW_FIX_FLAG        , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.FIX_FIRM_NM_CD          , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_VALID_YM            , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_LOC_FLAG            , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_DETA_LOC            , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_NUM             , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_ID_NUM          , 20 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_MODEL_CD        , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_FLAG            , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_VALID_YM        , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_FORM_APPRO_YN   , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BEFO_INDI_VM            , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BEFO_INDI_VA            , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BEFO_INDI_VC            , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REPL_STS                , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.ZIP_NO1                 , 3  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.ZIP_NO2                 , 3  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_FEE_FREE_FLAG       , 1  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_REPL_WHY            , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_BAR                 , 20 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_ID_NUM        , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_MODEL_CD      , 5  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_GRD           , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_FORM          , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_TYPE          , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_REMOTE_FLAG   , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_KIND          , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_DIGIT_CNT     , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_NEW_FIX_FLAG  , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_FIX_FIRM_NM_CD    , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_VALID_YM      , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_FEE_FREE_FLAG   , 1  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_REPL_WHY        , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_BAR             , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_COMPENS_NUM       , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_COMPENS_ID_NUM    , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_COMPENS_MODEL_CD  , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_COMPENS_VALID_YM  , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_COMPENS_PRESS     , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REMOVE_INDI_VM          , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REMOVE_INDI_VA          , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REMOVE_INDI_VC          , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REMOVE_MTR_FLAG         , 6  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REPL_NOT_PERMIT_WHY     , 3  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.JOB_DTM                 , 14 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.JOBER_EMPID             , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_PHOTO               , 128+1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_PHOTO           , 128+1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CUST_SIGN               , 200+1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.SEND_YN                 , 1  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_MTR_APPRO_YN      , 1  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AFTER_FORM_APPRO_YN     , 1  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.INST_INDI_VM            , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.INST_INDI_VA            , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.INST_INDI_VC            , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.TEMPER                  , 13 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.PRESS                   , 7  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REVIS_PARA              , 10 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BEFO_TEMPER             , 13 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BEFO_PRESS              , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BEFO_REVIS_PARA         , 10 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.UPD_DTM                 , 14 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.UPD_EMPID               , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CRT_DTM                 , 14 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CRT_EMPID               , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.PDA_NUM                 , 1  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.TREAT_FLAG              , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REVIS_FLAG              , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTR_SUPPLY_STS          , 20 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMPENS_MAKER_NM        , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.VISIT_YMD               , 8  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MEMO                    , 100+1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.LAW_TOWN                , 30 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.NEW_ROAD_NM             , 255+1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.NEW_ADDR_M              , 10 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.NEW_ADDR_S              , 10 +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BACK_REPL_STS           , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CONT_STS_CD             , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMM_NUM_24             , 24  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.COMM_FIRM               , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.INFLOW_FLAG             , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.NOBILL_YN               , 1  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.PROD_CONT_SEQ           , 10  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BULD_CENTER_CD          , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CHK_BULD_CENTER_CD          , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REPL_TREAT_INSTI        , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.NO_BILL_REPL_WHY        , 9  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.OTHER_PRICE             , 10  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.BATTERY_YN              , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.MTRDISPLAY_YN           , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.REMOTE_SYSTEM           , 2  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.OLD_MTR_ID_NUM          , 25  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.AMI_OBJ_YN          	   , 1  +1, DECRYPT );
			sql->GetValue( sql, i++, 'U', (long*) stMtrChg.CONCENT_INST_AMT_YN        , 1  +1, DECRYPT );

			

			

			



			
			

			


		}
		else
		{
			PRINT("::sql->Next fail [%s]",sql->GetLastError(sql),0,0);
			goto Finally;
		}

Finally:
		DelSqLite(sql);
		
		// 계약상태 해지면 고객명, 전화번호, 생년월일 안보이도록 수정
		if( Str_Cmp(stMtrChg.CONT_STS_CD, "30") == 0 )
		{
			Mem_Set((byte *)stMtrChg.CUST_NM, 0x00, sizeof(stMtrChg.CUST_NM));
			Str_Cpy( stMtrChg.CUST_NM, "" );
			
			Mem_Set((byte *)stMtrChg.CP_DDD, 0x00, sizeof(stMtrChg.CP_DDD));
			Str_Cpy( stMtrChg.CP_DDD, "" );
			
			Mem_Set((byte *)stMtrChg.CP_EXN, 0x00, sizeof(stMtrChg.CP_EXN));
			Str_Cpy( stMtrChg.CP_EXN, "" );
			
			Mem_Set((byte *)stMtrChg.CP_NUM, 0x00, sizeof(stMtrChg.CP_NUM));
			Str_Cpy( stMtrChg.CP_NUM, "" );
			
			Mem_Set((byte *)stMtrChg.OWNHOUSE_TEL_DDD, 0x00, sizeof(stMtrChg.OWNHOUSE_TEL_DDD));
			Str_Cpy( stMtrChg.OWNHOUSE_TEL_DDD, "" );
			
			Mem_Set((byte *)stMtrChg.OWNHOUSE_TEL_EXN, 0x00, sizeof(stMtrChg.OWNHOUSE_TEL_EXN));
			Str_Cpy( stMtrChg.OWNHOUSE_TEL_EXN, "" );
			
			Mem_Set((byte *)stMtrChg.OWNHOUSE_TEL_NUM, 0x00, sizeof(stMtrChg.OWNHOUSE_TEL_NUM));
			Str_Cpy( stMtrChg.OWNHOUSE_TEL_NUM, "" );
			
			Mem_Set((byte *)stMtrChg.SOC_NUM, 0x00, sizeof(stMtrChg.SOC_NUM));
			Str_Cpy( stMtrChg.SOC_NUM, "" );
		}
		
		return;

	}

	/*=======================================================================================
	함수명 : Prev_Mtr
	기  능 : 이전 버튼시 이전대상을 찾는다.
	Param  : 
	Return : 
	========================================================================================*/
	void Prev_Mtr(void)
	{
		char szPdaReplJobItem[20];
		char szMtrGrd[20];
		char szNobill_Yn[2];

		if( g_nActIndex > 0 )
		{
			g_nActIndex--;
			g_lindex = g_SREACHFILE_GetSeq(SREACH_FILE, g_nActIndex);
		}
		else
		{
			g_nActIndex = -1;
		}
		
		if( g_nActIndex < 2 )
		{	//검색 후, 첫번째 고객 메세지 박스 변수
			m_lPrev--;
		}

		if( g_lindex <= 0 || g_nActIndex < 0 )
		{
			g_nActIndex = 0;
			g_lindex = g_SREACHFILE_GetSeq(SREACH_FILE, g_nActIndex);

			if( m_lPrev < 0 )
			{
				m_lPrev = 0;
				//MessageBoxEx (CONFIRM_OK, "첫번째 고객입니다.");
			}
			return;
		}
		
		g_nPhotoFlag = 7;
		g_Del_GcPhoto();
		
		Mem_Set((byte*)szPdaReplJobItem, 0x00, sizeof(szPdaReplJobItem));
		Mem_Set((byte*)m_szSql, 0x00, sizeof(m_szSql));
		SPRINT(m_szSql, "SELECT PDA_REPL_JOB_ITEM FROM C6301_CHANGEDATA WHERE ROWID = '%d'", g_lindex, 0, 0);
		g_Sql_RetStr( m_szSql, 20, szPdaReplJobItem );
		
		Mem_Set((byte*)szMtrGrd, 0x00, sizeof(szMtrGrd));
		Mem_Set((byte*)m_szSql, 0x00, sizeof(m_szSql));
		SPRINT(m_szSql, "SELECT MTR_GRD FROM C6301_CHANGEDATA WHERE ROWID = '%d'", g_lindex, 0, 0);
		g_Sql_RetStr( m_szSql, 20, szMtrGrd );

		Mem_Set((byte*)szNobill_Yn, 0x00, sizeof(szNobill_Yn));
		Mem_Set((byte*)m_szSql, 0x00, sizeof(m_szSql));
		SPRINT(m_szSql, "SELECT NOBILL_YN FROM C6301_CHANGEDATA WHERE ROWID = '%d'", g_lindex, 0, 0);
		g_Sql_RetStr( m_szSql, 20, szNobill_Yn );

		//g_nBojungFlag;    //계량기 보정기기 유무 Flag , Flag = 0 보정기없음, Flag = 1 보정기있음, Flag = 2 단일보정기
		if( (Str_Cmp(szPdaReplJobItem, "10") == 0 || Str_Cmp(szPdaReplJobItem, "30") == 0) && Str_Cmp(szNobill_Yn, "N") == 0)
		{
			if( Str_AtoI(szMtrGrd) >= 10 )
			{
				if( Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "10") == 0 )
				{
					g_nBojungFlag = 0;
				}
				else
				{
					g_nBojungFlag = 1;
				}
				Set_Index();
				Card_Move("C6301_BIGCHG");
			}
			else if( Str_AtoI(szMtrGrd) < 10 )
			{
				if( Str_Cmp(szPdaReplJobItem, "10") == 0 )
				{
					g_nBojungFlag = 0;
				}
				else
				{
					g_nBojungFlag = 1;
				}
				Set_Index();
				ON_EXIT();
				OnInit(INIT_MAIN);
			}
		}
		else if( Str_Cmp(szPdaReplJobItem, "20") == 0 )
		{
			g_nBojungFlag = 2;
			Set_Index();
			Card_Move("C6301_BOJUNGCHG");
		}
		else if( Str_Cmp(szPdaReplJobItem, "10") == 0 && Str_Cmp(szNobill_Yn, "Y") == 0  )
		{
			if( Str_AtoI(szMtrGrd) < 10 )
			{
				g_nBojungFlag = 0;

				Set_Index();
				ON_EXIT();
				OnInit(INIT_MAIN);
			}

		}

		//무전표교체일때 이동하는 로직필요 1221
		
		return;
	}
	
	/*=======================================================================================
	함수명 : Next_Mtr
	기  능 : 다운 버튼시 다음대상을 찾는다.
	Param  : 
	Return : 
	========================================================================================*/
	void Next_Mtr(void)
	{
		char szPdaReplJobItem[20];
		char szMtrGrd[20];
		char szNobill_Yn[2];
	
		m_lPrev = 0;

		g_nActIndex++;
		g_lindex = g_SREACHFILE_GetSeq(SREACH_FILE, g_nActIndex);
		
		if( g_nActIndex > m_lTotCnt || g_lindex < 0 )
		{
			if( g_SREACHFILE_GetSeq(SREACH_FILE, g_nActIndex) < g_nActIndex )
			{
				g_nActIndex = g_nActIndex-1;
			}
			g_lindex = g_SREACHFILE_GetSeq(SREACH_FILE, g_nActIndex);
			
			//MessageBoxEx (CONFIRM_OK, "마지막 고객입니다.");
			//마지막 대상 점검 시 화면 리프레시
			SetData();
			ReDraw();
			
			return;
		}
		g_nPhotoFlag = 7;
		g_Del_GcPhoto();
		
		Mem_Set((byte*)szPdaReplJobItem, 0x00, sizeof(szPdaReplJobItem));
		Mem_Set((byte*)m_szSql, 0x00, sizeof(m_szSql));
		SPRINT(m_szSql, "SELECT PDA_REPL_JOB_ITEM FROM C6301_CHANGEDATA WHERE ROWID = '%d'", g_lindex, 0, 0);
		g_Sql_RetStr( m_szSql, 20, szPdaReplJobItem );
		
		Mem_Set((byte*)szMtrGrd, 0x00, sizeof(szMtrGrd));
		Mem_Set((byte*)m_szSql, 0x00, sizeof(m_szSql));
		SPRINT(m_szSql, "SELECT MTR_GRD FROM C6301_CHANGEDATA WHERE ROWID = '%d'", g_lindex, 0, 0);
		g_Sql_RetStr( m_szSql, 20, szMtrGrd );

		Mem_Set((byte*)szNobill_Yn, 0x00, sizeof(szNobill_Yn));
		Mem_Set((byte*)m_szSql, 0x00, sizeof(m_szSql));
		SPRINT(m_szSql, "SELECT NOBILL_YN FROM C6301_CHANGEDATA WHERE ROWID = '%d'", g_lindex, 0, 0);
		g_Sql_RetStr( m_szSql, 20, szNobill_Yn );

		//g_nBojungFlag;    //계량기 보정기기 유무 Flag , Flag = 0 보정기없음, Flag = 1 보정기있음, Flag = 2 단일보정기
		if( (Str_Cmp(szPdaReplJobItem, "10") == 0 || Str_Cmp(szPdaReplJobItem, "30") == 0) && Str_Cmp(szNobill_Yn, "N") == 0)
		{
			if( Str_AtoI(szMtrGrd) >= 10 )
			{
				if( Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "10") == 0 )
				{
					g_nBojungFlag = 0;
				}
				else
				{
					g_nBojungFlag = 1;
				}
				Set_Index();
				Card_Move("C6301_BIGCHG");
			}
			else if( Str_AtoI(szMtrGrd) < 10 )
			{
				if( Str_Cmp(szPdaReplJobItem, "10") == 0 )
				{
					g_nBojungFlag = 0;
				}
				else
				{
					g_nBojungFlag = 1;
				}
				Set_Index();
				ON_EXIT();
				OnInit(INIT_MAIN);
			}
		}
		else if( Str_Cmp(szPdaReplJobItem, "20") == 0 )
		{
			g_nBojungFlag = 2;
			Set_Index();
			Card_Move("C6301_BOJUNGCHG");
		}
		else if( Str_Cmp(szPdaReplJobItem, "10") == 0 && Str_Cmp(szNobill_Yn, "Y") == 0  )
		{
			if( Str_AtoI(szMtrGrd) < 10 )
			{
				g_nBojungFlag = 0;

				Set_Index();
				ON_EXIT();
				OnInit(INIT_MAIN);
			}

		}
		return;
	}

	/*=======================================================================================
	함수명 : Set_Index
	기  능 : 최종 인덱스 저장한다.
	Param  : 
	Return : TRUE :성공
			 FALSE:파일이 없을시에 실패
	========================================================================================*/
	void Set_Index(void)
	{
		char szSql[201];
		
		Mem_Set((byte*)szSql, 0x00, sizeof(szSql));

		PRINT("g_nWorkFlag :%d",g_nWorkFlag,0,0);

		if( g_nWorkFlag > 699 && g_nWorkFlag < 710 )
		{
			SPRINT(szSql, "UPDATE RCV_LOG SET PARAM8 =%d WHERE GUBUN = '8' ", g_nActIndex, 0, 0);
		}
		else if( g_nWorkFlag > 709 && g_nWorkFlag < 720 )
		{
			SPRINT(szSql, "UPDATE RCV_LOG SET PARAM9 =%d WHERE GUBUN = '8' ", g_nActIndex, 0, 0);
		}
		else if( g_nWorkFlag > 719 && g_nWorkFlag < 730 )
		{
			SPRINT(szSql, "UPDATE RCV_LOG SET PARAM10 =%d WHERE GUBUN = '8' ", g_nActIndex, 0, 0);
		}
		else if( g_nWorkFlag > 739 )
		{
			SPRINT(szSql, "UPDATE RCV_LOG SET PARAM11 =%d WHERE GUBUN = '8' ", g_nActIndex, 0, 0);
		}
		g_Sql_DirectExecute(szSql);
	}

	/*=======================================================================================
	함수명 : FS_GetSrchTotCnt
	기  능 : 검색인덱스파일의 레코드 수를 리턴한다.
	Param  : nPos:검색 인덱스 파일의 순번
 	Return : 레코드수
	========================================================================================*/
	long FS_GetSrchTotCnt(void)
	{
		long size = 0;
		
		size = FFS_GetSize( SREACH_FILE );
		size = size/SRCH_FS_SIZE;
		return size;
	}


//------------------------------------------------------------------
	void AddrDraw(void)
	{
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );

		if( g_nAddrFlag == 0)
		{
			ButCtrl_SetText(Get_hDlgCtrlByID(BID_ADDR), "지번");
			
			if( Str_Len(stMtrChg.CO_LIVE_NM) == 0 )
			{
				Str_Cpy( m_szTmp, stMtrChg.TOWN);
				Str_Cat( m_szTmp, " ");
				Str_Cat( m_szTmp, stMtrChg.VILLAGE);
				Str_Cat( m_szTmp, " ");
				Str_Cat( m_szTmp, stMtrChg.ADDR1_M);
				Str_Cat( m_szTmp, "-");
				Str_Cat( m_szTmp, stMtrChg.ADDR1_S);
				Str_Cat( m_szTmp, " ");
				Str_Cat( m_szTmp, stMtrChg.HOUSE_CNT);
				Str_Cat( m_szTmp, " ");
				Str_Cat( m_szTmp, stMtrChg.LOT_NUM_SECOND_ADDR);
			}
			else
			{
				Str_Cpy( m_szTmp, stMtrChg.TOWN);
				Str_Cat( m_szTmp, " ");
				Str_Cat( m_szTmp, stMtrChg.VILLAGE);
				Str_Cat( m_szTmp, " ");
				Str_Cat( m_szTmp, stMtrChg.ADDR1_M);
				Str_Cat( m_szTmp, "-");
				Str_Cat( m_szTmp, stMtrChg.ADDR1_S);
				Str_Cat( m_szTmp, " ");
				Str_Cat( m_szTmp, stMtrChg.CO_LIVE_NM);
				Str_Cat( m_szTmp, " ");
				Str_Cat( m_szTmp, stMtrChg.BLD_NM);
				Str_Cat( m_szTmp, "-");
				Str_Cat( m_szTmp, stMtrChg.HOUSE_CNT);
			}
		}
		else
		{
			ButCtrl_SetText(Get_hDlgCtrlByID(BID_ADDR), "도로명");
			Str_Cpy( m_szTmp, stMtrChg.NEW_ROAD_NM);
			Str_Cat( m_szTmp, " ");
			Str_Cat( m_szTmp, stMtrChg.NEW_ADDR_M);
			Str_Cat( m_szTmp, "-");
			Str_Cat( m_szTmp, stMtrChg.NEW_ADDR_S);
			Str_Cat( m_szTmp, " ");
			Str_Cat( m_szTmp, stMtrChg.HOUSE_CNT);
			Str_Cat( m_szTmp, " ");
			Str_Cat( m_szTmp, stMtrChg.LOT_NUM_SECOND_ADDR);
		}
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA3), m_szTmp);
		
		return;
	}

	void ReRemote(void)
	{	
		long lCnt = 0;
		long i;
		
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C31097' AND CODE_ITEM = '%s' ", stMtrChg.REMOTE_SYSTEM, 0, 0 );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );		

		
		if( Str_Cmp(m_szTmp, "") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA15)   , "");	
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA15)   , m_szTmp);	
			}
		
		ON_DRAW();
		return;
	}
	
	
	void RePay(void)
	{	
		long lCnt = 0;
		long i;
		
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30023' AND CODE_ITEM = '%s' ", stMtrChg.BATTERY_YN, 0, 0 );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );		

		
		if( Str_Cmp(m_szTmp, "") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA13)   , "미설치");	
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA13)   , m_szTmp);	
			}

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30023' AND CODE_ITEM = '%s' ", stMtrChg.MTRDISPLAY_YN, 0, 0 );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );		
		
		
		if( Str_Cmp(m_szTmp, "") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA14)   , "미설치");	
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA14)   , m_szTmp);	
			}
		
		ON_DRAW();
		return;
	}

	void ReAmi(void)
	{		
		long lCnt = 0;
		long i;

		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA48), stMtrChg.COMM_NUM_24);

		PRINT("1111111111111111111111111111111 : %s",stMtrChg.COMM_FIRM,0,0);

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C31074' AND CODE_ITEM = '%s' ", stMtrChg.COMM_FIRM, 0, 0 );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );		
		
		if( Str_Cmp(m_szTmp, "") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA9)   , "");	
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA9)   , m_szTmp);	
			}
		


		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C31072' AND CODE_ITEM = '%s' ", stMtrChg.INFLOW_FLAG, 0, 0 );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		if( Str_Cmp(m_szTmp, "") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA10)   , "");	
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA10)   , m_szTmp);	
			}

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30054' AND CODE_ITEM = '%s' ", stMtrChg.REPL_TREAT_INSTI, 0, 0 );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );		
		
		if( Str_Cmp(m_szTmp, "") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA11)   , "");	
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA11)   , m_szTmp);	
			}

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30123' AND CODE_ITEM = '%s' ", stMtrChg.NO_BILL_REPL_WHY, 0, 0 );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );		
		
		if( Str_Cmp(m_szTmp, "") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA12)   , "");	
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA12)   , m_szTmp);	
			}

		if( Str_Cmp(stMtrChg.SEND_YN, "S") == 0 || Str_Cmp(stMtrChg.SEND_YN, "Y") == 0 )
			{
				if( Str_Len(stMtrChg.COMM_NUM_24) > 0 )
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_AMIOK), FALSE );								
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_AMIOK), TRUE );	
							
				}
			}	

		if( Str_Cmp(stMtrChg.NOBILL_YN, "Y") != 0 ) 
		{
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(TXT_DATA49), FALSE );								
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(TXT_DATA49), TRUE );	
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(TXT_DATA50), FALSE );								
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(TXT_DATA50), TRUE );	

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA11+1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA11+1), TRUE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA12+1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA12+1), TRUE );

		}

		if( Str_Cmp(stMtrChg.AMI_OBJ_YN, "Y") != 0 )
		{
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(TXT_DATA68), FALSE );								
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(TXT_DATA68), TRUE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA18+1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA18+1), TRUE );
		}
		else
		{
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(TXT_DATA68), TRUE );								
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(TXT_DATA68), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA18+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA18+1), FALSE );
		}
		


		
		ON_DRAW();
		return;
	}

	void ReMtr(void)
	{		
		long lCnt = 0;
		long i;

		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA54), stMtrChg.MTR_ID_NUM);
		
		ON_DRAW();
		return;
	}
//------------------------------------------------------------------
	void ReDraw(void)	
	{
		char szfilenm[256];
		long lCnt = 0;
		long i;
	
		m_lTotCnt = FS_GetSrchTotCnt();
		SPRINT(m_szCnt_index, "%d/%d", g_nActIndex+1, m_lTotCnt, 0);

		
		//주소 표시
		AddrDraw();

		//고객번호
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA1), stMtrChg.CUST_NUM);
		
		EditCtrl_SetForeColorEx(Get_hDlgCtrlByID(TXT_DATA2), BLUE);
		if( Str_Cmp(stMtrChg.MTR_LOC_FLAG, "10") == 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA2), "내부");
		}
		else if( Str_Cmp(stMtrChg.MTR_LOC_FLAG, "20") == 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA2), "외부");
		}
		
		//철거 계량기정보
		//등급
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA8), stMtrChg.MTR_GRD);
		//모델
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT MTR_MODEL_NM FROM MTR_MODEL WHERE MTR_MODEL_CD = '%s'  ",stMtrChg.MTR_MODEL_CD, 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA11)   , m_szTmp);

		//상태
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		if( Str_Len(stMtrChg.MTR_NEW_FIX_FLAG) > 0 )
		{
			if( Str_Cmp(stMtrChg.MTR_NEW_FIX_FLAG, "20") == 0 )
			{
				lCnt = ListCtrl_GetItemNum(Get_hDlgCtrlByID(CMB_DATA3+2));
				for( i = 0 ; i < lCnt ; i++ )
				{
					Mem_Cpy((byte *)m_szTmp, (byte *)ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA8+2), i)+2, 2);
					if( Str_Cmp(m_szTmp, stMtrChg.FIX_FIRM_NM_CD) == 0 )
					{
						EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA14), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), i));
						break;
					}
				}
			}
			else 
			{
				// //1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {
					//EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA14), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));
					// EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA14), "N:신품");
				// }
				// else
				// {
					EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA14), "N:신품");
				// }
			}
		}

		//자리
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA17), stMtrChg.MTR_DIGIT_CNT);
		//타입
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'B30003' AND CODE_ITEM = '%s'",stMtrChg.MTR_TYPE, 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA20)   , m_szTmp);		
		//기물번호
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA23), stMtrChg.MTR_ID_NUM);
		//철거계량기 기물번호 값 
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA54), stMtrChg.MTR_ID_NUM);
		//원격
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s'",stMtrChg.MTR_REMOTE_FLAG, 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA25)   , m_szTmp);	
		//종류
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087' AND CODE_ITEM = '%s'",stMtrChg.MTR_KIND, 0, 0   );
		g_Sql_RetStr( m_szSql, 30, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA27)   , m_szTmp);	
		//유효
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA29), stMtrChg.MTR_VALID_YM);


		if( Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "10") == 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA31), "계량기");
		}
		else if( Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "20") == 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA31), "보정기");
		}
		else if( Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "30") == 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA31), "계+보");
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA31), "무전표");
		}

		//지침
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA2), stMtrChg.REMOVE_INDI_VC);

		//사유 
		//노후교체의 경우 default 노후 입력.
		if( g_lDataflag == 0 && ( Str_Cmp(stMtrChg.SEND_YN, "N") == 0 || Str_Cmp(stMtrChg.SEND_YN, "") == 0 ) && Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 )
		{
			EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA5)   , "노후");	
		}
		else
		{
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
			SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30009' AND CODE_ITEM = '%s'",stMtrChg.MTR_REPL_WHY, 0, 0   );
			g_Sql_RetStr( m_szSql, 30, m_szTmp );
			
			if( Str_Cmp(m_szTmp, "") == 0 )
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA5)   , "노후");	
			}
			else
			{
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA5)   , m_szTmp);	
			}
			
		}

		if( Str_Cmp(stMtrChg.MTR_REPL_WHY, "300") == 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA32), "유상");
			Str_Cpy(stMtrChg.MTR_FEE_FREE_FLAG, "Y");
		}
		else if( Str_Cmp(stMtrChg.MTR_REPL_WHY, "301") == 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA32), "유상");
			Str_Cpy(stMtrChg.MTR_FEE_FREE_FLAG, "Y");
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA32), "무상");
			Str_Cpy(stMtrChg.MTR_FEE_FREE_FLAG, "N");
		}
		
		if( Str_Len(stMtrChg.MEMO) > 0 )
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MEMO), RED);
		}
		else
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MEMO), BTNCTRLBKCOLOR);
		}
		
		if( Str_Len(EditCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA5))) < 1 )
		{
			if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0 )
			{
				Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
				Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
				SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30009' AND CODE_ITEM = '200'", 0, 0, 0   );
				g_Sql_RetStr( m_szSql, 30, m_szTmp );
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA5)   , m_szTmp);
				
				ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA5+2));
				Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
				g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30009' AND CODE_ITEM <> '300' AND CODE_ITEM <> '001' AND CODE_ITEM <> '100' AND CODE_ITEM <> '202' AND CODE_ITEM <> '301'", CMB_DATA5+2);	

				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			}
			else
			{
				Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
				Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
				SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30009' AND CODE_ITEM = '100'", 0, 0, 0   );
				g_Sql_RetStr( m_szSql, 30, m_szTmp );
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA5)   , m_szTmp);
			}
		}
		
		//사진유무
		lCnt = 0;
		if( Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "10") == 0 || Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "30") == 0 )
		{
			//철거계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Str_Cpy(szfilenm, "M");
			Str_Cat(szfilenm, "B");
			Str_Cat(szfilenm, "M");
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.NOBILL_YN);
			Str_Cat(szfilenm, ".jjp");
	
			Mem_Set((byte*)m_szTmp, 0x00, sizeof(m_szTmp));
			SPRINT (m_szTmp, "%s/%s",PHOTO_GC, szfilenm, 0);

			if(FFS_Exist(m_szTmp) <= 0)
			{
				lCnt++;
			}

			//설치계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Str_Cpy(szfilenm, "M");
			Str_Cat(szfilenm, "A");
			Str_Cat(szfilenm, "M");
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.NOBILL_YN);
			Str_Cat(szfilenm, ".jjp");
	
			Mem_Set((byte*)m_szTmp, 0x00, sizeof(m_szTmp));
			SPRINT (m_szTmp, "%s/%s",PHOTO_GC, szfilenm, 0);

			if(FFS_Exist(m_szTmp) <= 0)
			{
				lCnt++;
			}
		}

		if( lCnt == 0 )
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PHOTO), RED);
		}
		else
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PHOTO), SANDYBROWN);
		}

		if( Str_Cmp(stMtrChg.SEND_YN, "S") == 0 || Str_Cmp(stMtrChg.SEND_YN, "Y") == 0 )
		{
			if( Str_Len(stMtrChg.MTR_BAR) > 0 )
			{
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_SAVE), RED);
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_IMPOSSIBLE), BTNCTRLBKCOLOR);
			}
			else
			{
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_SAVE), BTNCTRLBKCOLOR);
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_IMPOSSIBLE), RED);
			}
		}
		else
		{
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_SAVE), BTNCTRLBKCOLOR);
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_IMPOSSIBLE), BTNCTRLBKCOLOR);
		}


		//불가 대상 업무 버튼 비활성화(바코드, 사진, 완료)
		//교체 업무 완료 진행 시 업무 버튼 비활성화(바코드, 사진, 완료)
		if( (Str_Cmp(stMtrChg.SEND_YN, "S") == 0 || Str_Cmp(stMtrChg.SEND_YN, "Y") == 0 ) )
		{
			if( Str_Len(stMtrChg.REPL_NOT_PERMIT_WHY) > 0 )
			{
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_BARCODE), FALSE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_BARCODE), TRUE );
	
				// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_PHOTO), FALSE );
				// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_PHOTO), TRUE );
	
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_SAVE), FALSE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_SAVE), TRUE );
			}
			else
			{
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_BARCODE), FALSE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_BARCODE), TRUE );
	
				// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_PHOTO), FALSE );
				// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_PHOTO), TRUE );
	
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_IMPOSSIBLE), FALSE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_IMPOSSIBLE), TRUE );
			}
		}
		else
		{
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_BARCODE), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_BARCODE), FALSE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_PHOTO), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_PHOTO), FALSE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_SAVE), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_SAVE), FALSE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(BID_IMPOSSIBLE), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(BID_IMPOSSIBLE), FALSE );
		}
		
		// 20180529 완료된 건에 대해서 TEXT,콤보 막음
		if( (Str_Cmp(stMtrChg.SEND_YN, "S") == 0 || Str_Cmp(stMtrChg.SEND_YN, "Y") == 0 ) )
		{
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1), TRUE );
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA2), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA2), TRUE );
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA3), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA3), TRUE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA4+1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA4+1), TRUE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA5+1), FALSE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA5+1), TRUE );
		}
		else
		{
			if (Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)		
			{
				if(Str_Len(stMtrChg.BEFO_MTR_ID_NUM) == 0)
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1), TRUE );
					ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MTR), RED);
				}
				else
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1), FALSE );
					ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MTR), BTNCTRLGRAY);
				}
			}
			else
			{
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1), FALSE );
				ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_MTR), BTNCTRLGRAY);
			}
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA2), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA2), FALSE );
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA3), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA3), FALSE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA4+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA4+1), FALSE );

			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA5+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA5+1), FALSE );
		}

		InstMtrDraw();

		ON_DRAW();
		return;
	}
	
//-----------------------------------------------------------------
//설치계량기정보
	void InstMtrDraw(void)
	{
		long i, lCnt;
		//등급
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9), stMtrChg.AFTER_MTR_GRD);
		
		//모델
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT MTR_MODEL_NM FROM MTR_MODEL WHERE MTR_MODEL_CD = '%s'  ",stMtrChg.AFTER_MTR_MODEL_CD, 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA12)   , m_szTmp);
		
		//타입
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'B30003' AND CODE_ITEM = '%s'",stMtrChg.AFTER_MTR_TYPE, 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA21)   , m_szTmp);
			
		//자리
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18), stMtrChg.AFTER_MTR_DIGIT_CNT);
		
		//기물번호
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1), stMtrChg.AFTER_MTR_ID_NUM);
		
		//원격
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s'",stMtrChg.AFTER_MTR_REMOTE_FLAG, 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);

		//종류
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087' AND CODE_ITEM = '%s'",stMtrChg.AFTER_MTR_KIND, 0, 0   );
		g_Sql_RetStr( m_szSql, 30, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2)   , m_szTmp);	

		Mem_Set( (byte*)m_lCheckPAY, 0x00, sizeof(m_lCheckPAY));
		Str_Cpy(m_lCheckPAY, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)));				

		Mem_Set( (byte*)m_lCheckPAY_2, 0x00, sizeof(m_lCheckPAY_2));
		Str_Cpy(m_lCheckPAY_2, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)));				
	
		if( (Str_Cmp(stMtrChg.SEND_YN, "S") != 0 && Str_Cmp(stMtrChg.SEND_YN, "Y") != 0 ) )
		{
			//1213
			//경기도 특수계량기의 경우 원격도 선택 못하도록 변경해야함. 0822
			// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
			// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
			// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
			// {
				if(Str_Cmp(m_lCheckPAY, "펄스") == 0 || Str_Cmp(m_lCheckPAY, "다기능") == 0 || Str_Cmp(m_lCheckPAY, "누출점검용") == 0 
				|| Str_Cmp(m_lCheckPAY, "디지털 누출") == 0	|| Str_Cmp(m_lCheckPAY, "누출점검용(듀얼)") == 0 || Str_Cmp(m_lCheckPAY, "디지털 누출(듀얼)") == 0 )
				{
					// if(Str_Cmp(m_lCheckPAY_2, "미설치") != 0 && Str_Cmp(m_lCheckPAY_2, "") != 0 )
					if(Str_Cmp(m_lCheckPAY_2, "지시부형") == 0 || Str_Cmp(m_lCheckPAY_2, "CDMA") == 0 || Str_Cmp(m_lCheckPAY_2, "통합원격") == 0 || Str_Cmp(m_lCheckPAY_2, "디지털변환기") == 0 )
					{
						if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
						{
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						}
						
					}
					else if (Str_Cmp(m_lCheckPAY_2, "디지로그") == 0 )
					{
						if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
						{
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						}
					}

					if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2))) == 0 )
					{
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					}
					else
					{
						if (Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)		
						{
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						}
						else
						{	
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						}
					}
				}
				else
				{
					if( Str_Cmp(stMtrChg.AFTER_MTR_KIND, "10") == 0 )
					{
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					}
					else if( Str_Cmp(stMtrChg.AFTER_MTR_KIND, "70") == 0 )
					{
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					}
					else
					{
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					}
					
					if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2))) == 0 )
					{
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					}
					else
					{
						if (Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)		
						{
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						}
						else
						{
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						}
						
					}
				}
			// }
			// else
			// {
			// 	if( Str_Cmp(stMtrChg.AFTER_MTR_KIND, "10") == 0 )
			// 	{
			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			// 	}
			// 	else if( Str_Cmp(stMtrChg.AFTER_MTR_KIND, "70") == 0 )
			// 	{
			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			// 	}
			// 	else
			// 	{
			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			// 	}
				
			// 	if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2))) == 0 )
			// 	{
			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
			// 	}
			// 	else
			// 	{
			// 		if (Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)		
			// 		{
			// 			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
			// 			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
			// 		}
			// 		else
			// 		{
			// 			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
			// 			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
			// 		}
					
			// 	}
			// }
			
		}
		
		//상태	
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		if( Str_Cmp(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "20") == 0 && Str_Len(stMtrChg.AFTER_FIX_FIRM_NM_CD) > 0  )
		{
			lCnt = ListCtrl_GetItemNum(Get_hDlgCtrlByID(CMB_DATA3+2));

			for( i = 0 ; i < lCnt ; i++ )
			{
				Mem_Cpy((byte *)m_szTmp, (byte *)ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA8+2), i)+2, 2);

				if( Str_Cmp(m_szTmp, stMtrChg.AFTER_FIX_FIRM_NM_CD) == 0 )
				{
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), i));
					break;
				}
			}
		}
		else if( Str_Cmp(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10") == 0 )
		{
			EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));
		}

		//유효
		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA4), stMtrChg.AFTER_MTR_VALID_YM);

		//지침
		if( Str_Len(stMtrChg.INST_INDI_VC) > 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA3), stMtrChg.INST_INDI_VC);
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA3), "0");
		}

		if( Str_Cmp(stMtrChg.OTHER_PRICE, "기타부품") == 0 || Str_Cmp(stMtrChg.OTHER_PRICE, "") == 0 )
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA11), "기타부품");
			if( Str_Cmp(stMtrChg.AMI_OBJ_YN, "Y") == 0)
			{
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
			}
			else
			{
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
			}
			
			
		}
		else
		{
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA11), stMtrChg.OTHER_PRICE);
		}
		
		//AMI
		if(Str_Cmp(stMtrChg.AFTER_MTR_KIND, "80") == 0 && Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0)
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
		}
		//1213
		// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
		// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
		// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
		// 	{
				if(Str_Cmp(stMtrChg.AFTER_MTR_KIND, "20") == 0 || Str_Cmp(stMtrChg.AFTER_MTR_KIND, "21") == 0
				||Str_Cmp(stMtrChg.AFTER_MTR_KIND, "50") == 0 || Str_Cmp(stMtrChg.AFTER_MTR_KIND, "60") == 0
				||Str_Cmp(stMtrChg.AFTER_MTR_KIND, "61") == 0 || Str_Cmp(stMtrChg.AFTER_MTR_KIND, "65") == 0
				||Str_Cmp(stMtrChg.AFTER_MTR_KIND, "66") == 0 ) 
				{
					if( Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "20") == 0 ||Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "30") == 0 
					|| Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "40") == 0  ||Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "50") == 0 
					|| Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "60") == 0)
					{
						
						m_lSpecialMtrFlag = 1;
						if(Str_Cmp(stMtrChg.BATTERY_YN, "") == 0)
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
						}
						else
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), RED);
						}
						
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

						if(Str_Cmp(stMtrChg.REMOTE_SYSTEM, "") == 0)
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
						}
						else
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), RED);
						}
						
						// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);
					}
					else if(Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "10") == 0 )
					{
						m_lSpecialMtrFlag = 1;
						if(Str_Cmp(stMtrChg.BATTERY_YN, "") == 0)
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
						}
						else
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), RED);
						}
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

						if(Str_Cmp(stMtrChg.REMOTE_SYSTEM, "") == 0)
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
						}
						else
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), RED);
						}
						// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);

					}
				}
			

				if(Str_Cmp(stMtrChg.AFTER_MTR_KIND, "30") == 0 )
				{
					if(Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "30") == 0
					  ||Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "40") == 0 || Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "50") == 0
					  || Str_Cmp(stMtrChg.AFTER_MTR_REMOTE_FLAG, "60") == 0)
					{
						m_lSpecialMtrFlag = 1;
						//BID_PAY 값이 있으면 빨간색 없으면 초록색
						if(Str_Cmp(stMtrChg.BATTERY_YN, "") == 0)
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
						}
						else
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), RED);
						}
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

						//BID_REMOTE 값이 있으면 빨간색 없으면 초록색
						if(Str_Cmp(stMtrChg.REMOTE_SYSTEM, "") == 0)
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
						}
						else
						{
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), RED);
						}

						//BID_BALANCE 값이 있으면 빨간색 없으면 초록색
						// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);
						
					}
				}
			// }

		return;
	}

//-----------------------------------------------------------------	
//화면이동시 입력했던 데이터 저장.
	void SaveInput(void)
	{		
		char szTmp[256];
		long i, lCnt;
	
		//설치계량기 등급
		Str_Cpy(stMtrChg.AFTER_MTR_GRD, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA9)));
		//설치계량기 타입
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'B30003' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA21)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.AFTER_MTR_TYPE );

		//설치계량기 모델
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		SPRINT(m_szSql, "SELECT MTR_MODEL_CD FROM MTR_MODEL WHERE MAKER_NUM = '%s' AND BARCODE_NUM = '%s'  ", m_szMakernum, m_szMtrBarnum, 0 );
		SPRINT(szTmp, " AND MTR_GRD = '%s' AND MTR_TYPE = '%s'", stMtrChg.AFTER_MTR_GRD, stMtrChg.AFTER_MTR_TYPE,0);
		Str_Cat(m_szSql, szTmp);
		g_Sql_RetStr( m_szSql, 20, stMtrChg.AFTER_MTR_MODEL_CD );

		//설치계량기 자리
		Str_Cpy(stMtrChg.AFTER_MTR_DIGIT_CNT, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA18)));
		//설치계량기 기물
		Str_Cpy(stMtrChg.AFTER_MTR_ID_NUM, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1)));
		//설치계량기 원격
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30008' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.AFTER_MTR_REMOTE_FLAG );
		//설치계량기 종류
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30087' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.AFTER_MTR_KIND );

		//설치계량기 상태
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30004' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA3)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.AFTER_MTR_NEW_FIX_FLAG );
		
		//설치계량기 상태
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		Str_Cpy(szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA3)));
		lCnt = ListCtrl_GetItemNum(Get_hDlgCtrlByID(CMB_DATA3+2));

		for( i = 0 ; i < lCnt ; i++ )
		{
			Str_Cpy(m_szTmp, ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), i));

			if( Str_Cmp(m_szTmp, szTmp) == 0 )
			{
				Mem_Cpy((byte *)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, (byte *)ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA8+2), i), 2);
				Mem_Cpy((byte *)stMtrChg.AFTER_FIX_FIRM_NM_CD, (byte *)ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA8+2), i)+2, 2);
				break;
			}
		}
		
		//설치계량기 유효
		Str_Cpy(stMtrChg.AFTER_MTR_VALID_YM, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA4)));
		//철거계량기 지침
		Str_Cpy(stMtrChg.REMOVE_INDI_VC, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA2)));
		//설치계량기 지침
		Str_Cpy(stMtrChg.INST_INDI_VC, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA3)));

		Str_Cpy(stMtrChg.OTHER_PRICE, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA11)));
		
		
		//교체사유
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30009' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA5)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.MTR_REPL_WHY );
		
		if( Str_Cmp(stMtrChg.MTR_REPL_WHY, "300") == 0 || Str_Cmp(stMtrChg.MTR_REPL_WHY, "301") == 0 )
		{
			Str_Cpy(stMtrChg.MTR_FEE_FREE_FLAG, "Y");
		}
		else
		{
			Str_Cpy(stMtrChg.MTR_FEE_FREE_FLAG, "N");
		}
				
	}

	void SaveInputAmi(void)
	{		
		char szTmp[256];
		long i, lCnt;
	
		//설치계량기 통신사
		Str_Cpy(stMtrChg.COMM_NUM_24, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA48)));
		//설치계량기 통신사
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C31074' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA9)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.COMM_FIRM );

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C31072' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA10)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.INFLOW_FLAG );
				
	}
	
//-----------------------------------------------------------------
	bool Validate(void)
	{
		char szMsg[256];
		char szTmp[256];
		char szfilenm[256];
		long lCnt = 0;
		long i;
		bool bRet = TRUE;
		long lPrevGrd, lAfterGrd, lProdCd;
		
		
		//입력된 데이터 스트럭쳐 저장
		SaveInput();

		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1))) == 0 ||
		    Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA12))) == 0 ||
		    Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA21))) == 0 ||
		    Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA9))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "기물번호를 입력하세요.");
			bRet = FALSE;
			goto Finally;
		}

		if( Str_Cmp( g_szBartmp, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA1)) ) != 0 )
		{
			MessageBoxEx (CONFIRM_OK, "재 스캔 또는 바코드버튼을\n다시 눌러주세요.");
			bRet = FALSE;
			goto Finally;
		}
		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA18))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "기물번호가 잘못되었습니다.");
			bRet = FALSE;
			goto Finally;
		}

		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "계량기 종류를 선택하세요.");
			bRet = FALSE;
			goto Finally;
		}
		
		if( Str_Cmp(stMtrChg.AFTER_MTR_KIND, "40") == 0 || Str_Cmp(stMtrChg.AFTER_MTR_KIND, "41") == 0 || Str_Cmp(stMtrChg.AFTER_MTR_KIND, "42") == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "가정용(10등급미만)은 일체형 종류 선택 불가.");
			bRet = FALSE;
			goto Finally;
		}

		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "원격여부를 선택하세요.");
			bRet = FALSE;
			goto Finally;
		}
		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA3))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "계량기 상태를 선택하세요.");
			bRet = FALSE;
			goto Finally;
		}
		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA4))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "계량기 유효년월을 선택하세요.");
			bRet = FALSE;
			goto Finally;
		}
		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA2))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "철거 계량기 지침을 입력하세요.");
			bRet = FALSE;
			goto Finally;
		}

		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA3))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "설치 계량기 지침을 입력하세요.");
			bRet = FALSE;
			goto Finally;
		}
				
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA5))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "계량기 교체사유를 선택하세요.");
			bRet = FALSE;
			goto Finally;
		}

		if(Str_Cmp(stMtrChg.OTHER_PRICE, "기타부품") == 0)
		{
			Str_Cpy(stMtrChg.OTHER_PRICE,"");
		}

		if(Str_Cmp(stMtrChg.AFTER_MTR_KIND, "80") != 0)
		{
			if(Str_Len(stMtrChg.COMM_FIRM) != 0 || Str_Len(stMtrChg.COMM_NUM_24) != 0 || Str_Len(stMtrChg.INFLOW_FLAG) != 0)
			{
				SPRINT(szMsg, "계량기 AMI가 아니면 \n 통신사,통신번호,유입구분\n 교체기관,사유를 지워야합니다.\n 해당정보를 삭제하시겠습니까?", 0,0,0);
				if( MessageBoxEx (CONFIRM_YESNO, szMsg) != MB_OK )
				{
					bRet = FALSE;
					goto Finally;
				}
				else
				{
					Str_Cpy(stMtrChg.COMM_FIRM,"");
					Str_Cpy(stMtrChg.COMM_NUM_24,"");
					Str_Cpy(stMtrChg.INFLOW_FLAG,"");
					Str_Cpy(stMtrChg.REPL_TREAT_INSTI,"");
					Str_Cpy(stMtrChg.NO_BILL_REPL_WHY,"");
				}
			}
			
		}
		
		
		if(Str_Cmp(stMtrChg.AFTER_MTR_KIND, "80") == 0 && Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0)
		{
			if(Str_Len(stMtrChg.COMM_FIRM) == 0 || Str_Len(stMtrChg.COMM_NUM_24) == 0 || Str_Len(stMtrChg.INFLOW_FLAG) == 0 )
			{
				MessageBoxEx (CONFIRM_OK, "AMI정보는 필수입니다.\n 해당화면으로 이동합니다.");
				bRet = FALSE;
				// ON_EXIT();
				// ReAmi();
				g_lDataflag = 1;
				SaveInput();
				Set_Index();
				OnInit(INIT_AMI);
				ReAmi();
				goto Finally;
			}

		}

		// PRINT("stMtrChg.AFTER_MTR_KIND : %s",stMtrChg.AFTER_MTR_KIND,0,0);
		// PRINT("stMtrChg.MTR_KIND : %s",stMtrChg.MTR_KIND,0,0);

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql));
		Str_Cpy(m_szSql, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA1)));
		
		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "펄스") == 0)
		{	
			if(Str_Cmp(m_szSql, "미설치") != 0 && Str_Cmp(m_szSql, "") != 0 )
			{
				//1213
				// if( Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				//     || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
				// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0)
				// {
					if(Str_Cmp(m_szSql, "지시부형") == 0 || Str_Cmp(m_szSql, "CDMA") == 0 || Str_Cmp(m_szSql, "통합원격") == 0 || Str_Cmp(m_szSql, "디지로그") == 0 || Str_Cmp(m_szSql, "디지털변환기") == 0 )
					{	
						if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
						{
							if(Str_Len(stMtrChg.REMOTE_SYSTEM) == 0 )
							{
								MessageBoxEx (CONFIRM_OK, "원격관리 항목을 선택해야 합니다. \n 해당 화면으로 이동합니다.");
								bRet = FALSE;
								g_lDataflag = 1;
								SaveInput();
								Set_Index();
								OnInit(INIT_REMOTE);
								ReRemote();
								goto Finally;
							}
						}
						
					}
				// }						
			}
		}
		else if(Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "다기능") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털") == 0 
			|| Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털(듀얼)") == 0
			|| Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "누출점검용") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "누출점검용(듀얼)") == 0
			|| Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털 누출") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털 누출(듀얼)") == 0)
		{	
			//1213
			// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
			// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
			// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
			// 	{
				if(Str_Cmp(m_szSql, "미설치") != 0 && Str_Cmp(m_szSql, "") != 0 )
				{
					if(Str_Cmp(m_szSql, "지시부형") == 0 || Str_Cmp(m_szSql, "CDMA") == 0 || Str_Cmp(m_szSql, "통합원격") == 0 || Str_Cmp(m_szSql, "디지로그") == 0 || Str_Cmp(m_szSql, "디지털변환기") == 0 )
					{
						if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
						{
							if(Str_Len(stMtrChg.REMOTE_SYSTEM) == 0 )
							{
								MessageBoxEx (CONFIRM_OK, "원격관리 항목을 선택해야 합니다. \n 해당 화면으로 이동합니다.");
								bRet = FALSE;
								g_lDataflag = 1;
								SaveInput();
								Set_Index();
								OnInit(INIT_REMOTE);
								ReRemote();
								goto Finally;
							}
						}
					}
				}
				// }
		}

		
		
		

/*
계량기교체		C31(업무구분) | M(계량기), C(보정기) | B(철거), A(설치) | M(계량기번호) | D( 생성날짜(SYSDATE : YYYYMMDDHHMMSS )
서버 저장 예시 : C31MBM302410422D20161129111620(계량기교체 철거 사진), C31CBM302410422D20161129111620(계량기교체 설치 사진)
클라이언트 저장 파일명 예시 : MBM302410422
*/
		lCnt = 0;
		if( Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "10") == 0 || Str_Cmp(stMtrChg.PDA_REPL_JOB_ITEM, "30") == 0 )
		{
			//철거계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Str_Cpy(szfilenm, "M");
			Str_Cat(szfilenm, "B");
			Str_Cat(szfilenm, "M");
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.NOBILL_YN);
			Str_Cat(szfilenm, ".jjp");
	
			Mem_Set((byte*)m_szTmp, 0x00, sizeof(m_szTmp));
			SPRINT (m_szTmp, "%s/%s",PHOTO_GC, szfilenm, 0);

			if(FFS_Exist(m_szTmp) <= 0)
			{
				lCnt++;
			}

			//설치계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Str_Cpy(szfilenm, "M");
			Str_Cat(szfilenm, "A");
			Str_Cat(szfilenm, "M");
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.NOBILL_YN);
			Str_Cat(szfilenm, ".jjp");
	
			Mem_Set((byte*)m_szTmp, 0x00, sizeof(m_szTmp));
			SPRINT (m_szTmp, "%s/%s",PHOTO_GC, szfilenm, 0);

			if(FFS_Exist(m_szTmp) <= 0)
			{
				lCnt++;
			}
		}

		if( lCnt > 0 )
		{
		 	MessageBoxEx (CONFIRM_OK, "계량기 사진을 촬영하세요.");
		 	bRet = FALSE;
		 	goto Finally;
		}

		// if( lCnt > 0 )
		// {
		//  	if( MessageBoxEx (CONFIRM_YESNO, "계량기 사진촬영으로 이동하겠습니까? (Y/N)")  != MB_OK)
		// 	{
		// 		bRet = FALSE;
		// 		goto Finally;
		// 	}
		// 	else
		// 	{
		// 		Mem_Set( (byte*)g_szSqlWhere, 0x00, sizeof(g_szSqlWhere) );
		// 		Str_Cpy(g_szSqlWhere, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA3)));

		// 		//g_lChgMtr_WorkFlag > = 0 가정용 계량기, = 1 대용량 계량기, = 2 보정기
		// 		g_lChgMtr_WorkFlag = 0;
		// 		g_lDataflag = 1;
		// 		g_nPhotoFlag = 7;
		// 		SaveInput();
		// 		Set_Index();
		// 		Card_Move("C6301_PHOTO");

		// 	}
		// 	// MessageBoxEx (CONFIRM_OK, "계량기 사진을 촬영하세요.");
		//  	// bRet = FALSE;
		//  	// goto Finally;
		// }

		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA5)), "노후") != 0 )
		{
			if( MessageBoxEx (CONFIRM_YESNO, "교체사유 변경으로\n진행을 확인합니다.")  != MB_OK)
			{
				bRet = FALSE;
				goto Finally;
			}

			//위의 메세지 바로 없어지도록
			CloseMessageBox();
			ON_DRAW();
		}
		
		if( Str_AtoI(stMtrChg.BEFO_INDI_VC) > Str_AtoI(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA2))) )
		{
			Mem_Set((byte*)szMsg, 0x00, sizeof(szMsg));
			SPRINT(szMsg, "철거지침(%s)이\n전월지침(%s)보다 작습니다.\n계속 진행하시겠습니까?", EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA2)), stMtrChg.BEFO_INDI_VC,0);
			if( MessageBoxEx (CONFIRM_YESNO, szMsg) != MB_OK )
			{
				bRet = FALSE;
				goto Finally;
			}
			
			//위의 메세지 바로 없어지도록
			CloseMessageBox();
			ON_DRAW();
		}
		
		//g_nBojungFlag = 1 > 보정기 보유, g_nBojungFlag != 1 > 보정기 미보유
		if( g_nBojungFlag == 1 )
		{
			Str_Cpy(stMtrChg.REMOVE_INDI_VM, stMtrChg.REMOVE_INDI_VC);
			Str_Cpy(stMtrChg.REMOVE_INDI_VC, "");
			Str_Cpy(stMtrChg.INST_INDI_VM, stMtrChg.INST_INDI_VC);
			Str_Cpy(stMtrChg.INST_INDI_VC, "");
			Str_Cpy(stMtrChg.AFTER_MTR_APPRO_YN, "Y");
			
			bRet = FALSE;
			Card_Move("C6301_BOJUNGCHG");
		}
		else
		{
			if( Str_Cmp(stMtrChg.REVIS_FLAG, "20") == 0 )
			{
				bRet = FALSE;
				
				//지침입력화면
				ON_EXIT();
				OnInit(INIT_VC);
			}
			else
			{
				bRet = Save_Result();
			}
		}


		if( Str_Cmp(stMtrChg.MTR_KIND,"10") == 0 || Str_Cmp(stMtrChg.MTR_KIND,"70") == 0 || (Str_Cmp(stMtrChg.MTR_KIND,"30") == 0 && Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"10") == 0) || Str_Cmp(stMtrChg.MTR_KIND,"80") == 0)
		{
			//일반 -> 일반은 계량기 종류, 원격구분이 달라도 변경 가능.
		}
		else
		{
			//특수형은 계량기 종류와 원격구분이 다르면 변경 불가능.

		}

Finally:

		return bRet;
	}


//-----------------------------------------------------------------
	bool Save_Result(void)
	{
		long lSign, lSign_Len;
		long idx;
		bool bRet = TRUE;
		char* pRst;
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();
		
		//서명
		Mem_Set((byte*)g_SignBuf, 0xff, sizeof(g_SignBuf));
		lSign = GetSignImgTitleWithOpt( SIGN_WIDTH, SIGN_HEIGHT, (char*)g_SignBuf, "고 객 서 명", SIGN_OPT_NONE );
		if( lSign == SIGN_RET_CANCEL || lSign == SIGN_RET_FAIL )
		{
			bRet = FALSE;
			goto Finally;
		}
		else
		{
			g_png_getbmp(SIGN_WIDTH, SIGN_HEIGHT, g_SignBuf );
			if(g_pjcomm != NULL )
			{
				BASE64_Finalize(g_pjcomm);
				g_pjcomm = NULL;
			}
			g_pjcomm = BASE64_Create();
			lSign_Len = BASE64_Encode(g_pjcomm, g_SignBuf, BMP_SIZE );
			pRst = BASE64_GetResult(g_pjcomm);				
		}

		if( Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "펄스") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "다기능") == 0 
		    || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "누출점검용") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털 누출") == 0
			|| Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "누출점검용(듀얼)") == 0 || Str_Cmp(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA2)), "디지털 누출(듀얼)") == 0)
		{
			if(Str_Cmp(m_szSql, "미설치") != 0 && Str_Cmp(m_szSql, "") != 0 )
			{
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {}
				// else
				// {
					Str_Cpy(stMtrChg.BATTERY_YN, "");
					Str_Cpy(stMtrChg.MTRDISPLAY_YN, "");
					Str_Cpy(stMtrChg.OTHER_PRICE, "");
				// }
			}
			else
			{
				Str_Cpy(stMtrChg.BATTERY_YN, "");
				Str_Cpy(stMtrChg.MTRDISPLAY_YN, "");
				Str_Cpy(stMtrChg.OTHER_PRICE, "");
			}
		}
		else
		{
			Str_Cpy(stMtrChg.BATTERY_YN, "");
			Str_Cpy(stMtrChg.MTRDISPLAY_YN, "");
			Str_Cpy(stMtrChg.OTHER_PRICE, "");
		}

		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		Str_ItoA(Time_GetDate(), stMtrChg.JOB_DTM, 10);
		//Str_ItoA(Time_GetTime(), m_szTmp, 10);
		g_Str_TimeType( m_szTmp , Time_GetTime());
		Str_Chg(stMtrChg.JOB_DTM, STRCHG_DEL_NONDIGIT);
		Str_Chg(m_szTmp, STRCHG_DEL_NONDIGIT);
		Str_Cat(stMtrChg.JOB_DTM, m_szTmp);

		Str_ItoA(Time_GetDate(), stMtrChg.VISIT_YMD, 10);
		Str_Cpy(stMtrChg.AFTER_MTR_FORM, "10");
		Str_Cpy(stMtrChg.AFTER_MTR_APPRO_YN, "Y");
		Str_Cpy(stMtrChg.SEND_YN, "S");

		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			bRet = FALSE;
			goto Finally;
		}

		hstmt = sql->CreateStatement(sql, 
"UPDATE C6301_CHANGEDATA SET \
MTR_FEE_FREE_FLAG = ? , MTR_REPL_WHY = ? , MTR_BAR = ? , AFTER_MTR_ID_NUM = ? \
, AFTER_MTR_MODEL_CD = ? , AFTER_MTR_GRD = ? , AFTER_MTR_FORM = ? , AFTER_MTR_TYPE = ? \
, AFTER_MTR_REMOTE_FLAG = ? , AFTER_MTR_KIND = ? , AFTER_MTR_DIGIT_CNT = ? \
, AFTER_MTR_NEW_FIX_FLAG = ? , AFTER_FIX_FIRM_NM_CD = ? , AFTER_MTR_VALID_YM = ? \
, AFTER_FORM_APPRO_YN = ? , COMPENS_FEE_FREE_FLAG = ? , COMPENS_REPL_WHY = ? \
, COMPENS_BAR = ? , AFTER_COMPENS_NUM = ? , AFTER_COMPENS_ID_NUM = ? , AFTER_COMPENS_MODEL_CD = ? \
, AFTER_COMPENS_VALID_YM = ? , AFTER_COMPENS_PRESS = ? , REMOVE_INDI_VM = ? , REMOVE_INDI_VA = ? \
, REMOVE_INDI_VC = ? , MTR_REMOTE_FLAG = ? , REPL_NOT_PERMIT_WHY = ? , JOB_DTM = ? , JOBER_EMPID = ? \
, CUST_SIGN = ? , SEND_YN = ? , TEMPER = ? , PRESS = ? , TREAT_FLAG = '10' , REVIS_PARA = ? \
, INST_INDI_VM = ? , INST_INDI_VA = ? , INST_INDI_VC = ?, CRT_EMPID = ?, PDA_NUM = ?, UPD_EMPID = ?, VISIT_YMD = ? , COMM_NUM_24 = ? , COMM_FIRM = ? , INFLOW_FLAG = ? , BATTERY_YN = ? , MTRDISPLAY_YN = ? , OTHER_PRICE = ? , REMOTE_SYSTEM = ? , OLD_MTR_ID_NUM = ? \
, REPL_TREAT_INSTI = ? , NO_BILL_REPL_WHY = ? , CONCENT_INST_AMT_YN = ?\
WHERE MTR_NUM = ? AND OBJ_CRT_YMD = ? "
        );
        
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			bRet = FALSE;
			goto Finally;
		}

		idx = 0;
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.MTR_FEE_FREE_FLAG     ,1  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.MTR_REPL_WHY          ,6  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.MTR_BAR               ,20 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_ID_NUM      ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_MODEL_CD    ,5  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_GRD         ,6  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_FORM        ,2 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_TYPE        ,2  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_REMOTE_FLAG ,2  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_KIND        ,2  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_DIGIT_CNT   ,2  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_NEW_FIX_FLAG,2  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_FIX_FIRM_NM_CD  ,2  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_MTR_VALID_YM    ,6  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_FORM_APPRO_YN   ,1  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.COMPENS_FEE_FREE_FLAG ,1  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.COMPENS_REPL_WHY      ,2  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.COMPENS_BAR           ,30 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_COMPENS_NUM     ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_COMPENS_ID_NUM  ,8  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_COMPENS_MODEL_CD,8  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_COMPENS_VALID_YM,6  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.AFTER_COMPENS_PRESS   ,6  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REMOVE_INDI_VM        ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REMOVE_INDI_VA        ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REMOVE_INDI_VC        ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.MTR_REMOTE_FLAG       ,2  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REPL_NOT_PERMIT_WHY   ,3  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.JOB_DTM               ,14 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id		  ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)pRst							  ,Str_Len(pRst) ,DECRYPT);	//서명
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.SEND_YN               ,1  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.TEMPER                ,13  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.PRESS                 ,8  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REVIS_PARA            ,10 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.INST_INDI_VM          ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.INST_INDI_VA          ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.INST_INDI_VC          ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id		  ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szpda_ip      	  ,32,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id		  ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.VISIT_YMD             ,8 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.COMM_NUM_24           ,16 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.COMM_FIRM             ,8 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.INFLOW_FLAG           ,8 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.BATTERY_YN            ,2 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.MTRDISPLAY_YN         ,2 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.OTHER_PRICE           ,10 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REMOTE_SYSTEM         ,2 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.OLD_MTR_ID_NUM        ,25 ,DECRYPT);

		

		

		
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REPL_TREAT_INSTI        ,2 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.NO_BILL_REPL_WHY        ,9 ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.CONCENT_INST_AMT_YN     ,1 ,DECRYPT);
		
		

		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.MTR_NUM		          ,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.OBJ_CRT_YMD			  ,8  ,DECRYPT);
				


		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			bRet = FALSE;
			goto Finally;
		}
		
Finally:

		if(g_pjcomm != NULL )
		{
			BASE64_Finalize(g_pjcomm);
			g_pjcomm = NULL;
		}
		
		DelSqLite(sql);
		return bRet;
	}

	
//-----------------------------------------------------------------
	void	OnUart(long nEvent, long nData)
	{
		char szfilenm[256];

		if (nEvent == UART_BARCODE)
		{
			OnBarcodeRead();
		}		
		else if (nEvent == UART_CAMERA)
		{
			if(nData == 1 )
			{
				Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
				SPRINT (szfilenm, "Camera/%s",  m_szfilenm,0, 0);
				if( FFS_Exist(szfilenm)  )
				{
					//CONVERT_WD : 384, CONVERT_HT : 512 / FileMgr.h에 정의되어있음
					ConvertImage(JPG, szfilenm, CONVERT_WD, CONVERT_HT, g_szphoto, 60*1000);
				
					ImpossibleDraw();
				
					ON_DRAW();
					VmSleep(100);
					FFS_Delete( szfilenm );
				}
			}
		}
	}
	
//----------------------------------------------------------------------------------------------
	void	OnTask(long nEvent, long nData)
	{
		char szTmp[256];
		char szfilenm[256];
		char szPhotopath[256];
		char* szPath = NULL;
		char* ptr;
		long nRet = 0;
		long nLen = 0;
		
//PRINT("nEvent : %d , nData : %d",nEvent,nData,0);
		CloseMessageBox();
		
		if( nEvent == TASK_SYS_CALL )
		{
			if( nData == TASK_CAMERA )
			{
				Mem_Set((byte*)szPhotopath, 0x00, sizeof(szPhotopath));
				Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
				
				szPath = (char*)System_GetResult((char*)&nRet);
				nLen = Str_Len(szPath);
				if( nLen > 19 )
				{
					Mem_Cpy((byte *)szTmp, (byte *)szPath+19, nLen-19);
					Str_Cpy(szPhotopath, "..");
					Str_Cat(szPhotopath, szTmp);
					PRINT(">>> TASK_SYS_CALL:: TASK_CAMERA: path = %s, size = %d ", szPhotopath, nRet, 0);
					
					//원본파일 +19
					Mem_Set((byte*)g_szphoto, 0x00, sizeof(g_szphoto));
					SPRINT (g_szphoto, "%s/%s", PHOTO_GC,  m_szfilenm, 0);
	
					if( FFS_Exist(szPhotopath) )
					{
						//CONVERT_WD : 384, CONVERT_HT : 512 / FileMgr.h에 정의되어있음
						//ConvertImage(JPG, szfilenm, CONVERT_WD, CONVERT_HT, g_szphoto, 60*1000);
						//ConvertImage(JPG, szfilenm, 240, 320, g_szphoto, 60*1000);
						FFS_Copy(szPhotopath, g_szphoto);
						FFS_Delete(szPhotopath);
					}
				}

				//화면 REFRESH
				ImpossibleDraw();
			}
			if( nData == TASK_BARCODE )
			{
				//카메라 바코드 스캔 값
				Mem_Set( (byte*)m_szBartmp, 0x00, sizeof(m_szBartmp) );
				ptr = (char*)System_GetResult((char*)&nRet);
				Str_Cpy(m_szBartmp, ptr);

				if( theDevInfo.m_nType > FAMILY_PDA )
				{
					OnBarcodeRead();
				}

				// Move_Card();
			}
		}

		ON_DRAW();
		return;
	}
	
//-----------------------------------------------------------------
	void Barcode(void)
	{
		long ret = 0;
		handle h = NULL;
		handle hdata = NULL;

		//2017-08-22 Sanghyun Lee
		//카메라 바코드(스마트폰 전용) & 빔 바코드 구분 사용 추가(설정은 공통메뉴에서 진행)
		if( Str_Cmp(g_szBarcodeSet, PHOTO_BARCODE) == 0 && theDevInfo.m_nType > FAMILY_PDA )
		{
			h = JSON_Create( JSON_Object );
			if (h)
			{
				hdata = JSON_Create( JSON_Object );
				if(hdata == NULL)
				{
					goto Finally;
				}
				
				JSON_SetValue	(hdata	, 'C', "desc"				, "카메라바코드");
				JSON_SetValue	(hdata	, 'C', "imgSaveEnabled"		, "false");						//{true, false}
				JSON_SetValue	(hdata	, 'C', "imgOutPath"			, "Barcode/barcode.jpg");		//Smart 하위 경로만 설정
				
				JSON_SetValue	(h		, 'C', "method"				, "BarcodeActivity");
				
				JSON_Attach 	(h		, "data"					, hdata);
			
				System_Call		("Native_System_Call" , JSON_toString(h));
			}
			
		Finally:
		
			if (h)
			{
				JSON_Finalize(h);
			}	
		
			if (hdata)
			{
				JSON_Finalize(hdata);
			}	
		}
		else
		{
			// 스마트폰 -> Barcode_Init, Barcode_Exit 필요 ,, PDA -> Barcode_Init, Barcode_Exit 불필요 
			if( theDevInfo.m_nType > FAMILY_PDA )
			{
				Barcode_Init();
			}

			ret = Barcode_SendCommand( "start" );
		}

		return;
	}
	

//-----------------------------------------------------------------
	void OnBarcodeRead(void)
	{
		long lret = 0;
		long i ;
		char szTmp[30];
		
		if( Str_Cmp(g_szBarcodeSet, BEAM_BARCODE) == 0 )
		{	
			// if(Str_Len(stMtrChg.BEFO_MTR_ID_NUM) > 0)
			// {
				Mem_Set( (byte*)m_szBartmp, 0x00, sizeof(m_szBartmp) );
				lret = Barcode_Read( m_szBartmp );
				//m_lBarLen = Str_Len
			// }
		}

		if( lret < 0 )
		{
			//MessageBoxEx (CONFIRM_OK, "바코드 읽기 실패");
			goto Finally;
		}
		else
		{	
			if( Str_Cmp(m_szBartmp, "READ_FAIL") != 0 )
			{
				if( m_bFirst == INIT_AMI )
				{
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA48),  m_szBartmp);
				}
				else if( m_bFirst == INIT_MTR )
				{
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA51),  m_szBartmp);
					Save_Mtr();
				}
				else
				{
					
					if( Str_Len(m_szBartmp) != 12 )
					{
						MessageBoxEx (CONFIRM_OK, "기물번호 자리수가 상이합니다 \n (12자리)");

						//바코드 인식 전 화면 정보 클리어.
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
						EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
						//바코드 인식 전 스트럭쳐 클리어
						ClearData();
					}
					else
					{
						//바코드 인식 전 화면 정보 클리어.
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
						EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
						EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
						//바코드 인식 전 스트럭쳐 클리어
						ClearData();
					
						//상태 콤보박스 새로 셋팅. 
						//why? 수리품과 새제품 번갈아 찍을 시 수리품에 의해 콤보박스 데이터가 변경되기때문에 새제품 데이터가 보이지 않음.
						ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
						ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));

						Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+5, 1);
						i = Str_AtoI(szTmp);

						//1213
						// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
						// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
						// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
						// {
							if (i == 3 || i == 4 || i == 5)
							{
								//상태 value
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' ", CMB_DATA3+2);

								//상태 code
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10'", CMB_DATA8+2);

							}
							else
							{
								//상태 value
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);

								//상태 code
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);

							}
						
						// }
						// else
						// {
						// 	//상태 value
						// 	Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						// 	g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);

						// 	//상태 code
						// 	Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						// 	g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
						// }
						
						

						Barcode_Func();
						
						// Move_Card();
					}

				}
			}
		}

Finally:

		if( theDevInfo.m_nType > FAMILY_PDA && Str_Cmp(g_szBarcodeSet, BEAM_BARCODE) == 0 )
		{
			Barcode_Exit();
		}
		
		Dialog_SetActiveCtrl(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA1));
		
		ON_DRAW();
		return;
	}
	
//=======================================================================================	
	void OnOldBarcodeRead(void)
	{
		char szTmp[100];
		char szDate[20];
		char szMonth[4];
		char szYear[10];
		char szYear2[10];
		char szModelCd[20];
		char szModelNm[30];
		char szTypeCd[20];
		char szGrdNum[20];
		char szMtrNum1[30];
		char szMtrNum2[15];
		char szMtrCnt[20];
		char szRemoteCd[20];
		long lDate, lBarLen, lCnt;
		long lret = 0;
		long lFlag = -1;
		long i, idx;
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();
		
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Set( (byte*)szDate, 0x00, sizeof(szDate) );
		Mem_Set( (byte*)szMonth, 0x00, sizeof(szMonth) );
		Mem_Set( (byte*)szYear, 0x00, sizeof(szYear) );
		Mem_Set( (byte*)szYear2, 0x00, sizeof(szYear2) );
		Mem_Set( (byte*)szModelCd, 0x00, sizeof(szModelCd) );
		Mem_Set( (byte*)szModelNm, 0x00, sizeof(szModelNm) );
		Mem_Set( (byte*)szTypeCd, 0x00, sizeof(szTypeCd) );
		Mem_Set( (byte*)szGrdNum, 0x00, sizeof(szGrdNum) );
		Mem_Set( (byte*)szMtrNum1, 0x00, sizeof(szMtrNum1) );
		Mem_Set( (byte*)szMtrNum2, 0x00, sizeof(szMtrNum2) );
		Mem_Set( (byte*)szMtrCnt, 0x00, sizeof(szMtrCnt) );
		Mem_Set( (byte*)szRemoteCd, 0x00, sizeof(szRemoteCd) );
		
		if( Str_Len(m_szBartmp) < 12 || Str_NCmp(m_szBartmp, "A", 1) < 0 || Str_NCmp(m_szBartmp, "U", 1) > 0 )
		{
			MessageBoxEx (CONFIRM_OK, "등록되지 않은 제작사 입니다.");
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
			
			ClearData();
			goto Finally;
		}
	
		//제조사 코드
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Set( (byte*)m_szMakernum, 0x00, sizeof(m_szMakernum) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp, 1);
		
		i = Chk_MakerCd(szTmp);
		switch( i ) 
		{
			case 1:
				Str_Cpy(m_szMakernum, "10001");
				break;
			case 2:
				Str_Cpy(m_szMakernum, "10016");
				break;
			case 3:
				Str_Cpy(m_szMakernum, "10015");
				break;
			case 4:
				Str_Cpy(m_szMakernum, "10003");
				break;
			case 5:
				Str_Cpy(m_szMakernum, "10004");
				break;
			case 6:
				Str_Cpy(m_szMakernum, "10014");
				break;
			case 7:
				Str_Cpy(m_szMakernum, "10013");
				break;
			case 8:
				Str_Cpy(m_szMakernum, "10019");
				break;
			case 9:
				Str_Cpy(m_szMakernum, "10012");
				break;
			case 10:
				Str_Cpy(m_szMakernum, "10017");
				break;
			case 11:
				Str_Cpy(m_szMakernum, "10006");
				break;
			case 12:
				Str_Cpy(m_szMakernum, "10011");
				break;
			case 13:
				Str_Cpy(m_szMakernum, "10010");
				break;
			case 14:
				Str_Cpy(m_szMakernum, "10009");
				break;
			case 15:
				Str_Cpy(m_szMakernum, "10002");
				break;
			case 16:
				Str_Cpy(m_szMakernum, "10005");
				break;
			case 17:
				Str_Cpy(m_szMakernum, "10007");
				break;
			case 18:
				Str_Cpy(m_szMakernum, "10008");
				break;
			case 19:
				Str_Cpy(m_szMakernum, "10037");
				break;
			case 20:
				Str_Cpy(m_szMakernum, "10043");
				break;
			case 21:
				Str_Cpy(m_szMakernum, "10038");
				break;
			default:
				MessageBoxEx (CONFIRM_OK, "기물번호 제작사가 잘못 되었습니다.");
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
				
				ClearData();
				goto Finally;
				break;
		}

		//등급
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+1, 1);
		i = Str_AtoI(szTmp);
		switch( i ) 
		{
			case 1:
				Str_Cpy(szGrdNum, "2");
				break;
			case 2:
				Str_Cpy(szGrdNum, "3");
				break;
			case 3:
			case 7:
				Str_Cpy(szGrdNum, "4");
				break;
			case 4:
				Str_Cpy(szGrdNum, "5");
				break;
			case 5:
				Str_Cpy(szGrdNum, "7");
				break;
			case 6:
				Str_Cpy(szGrdNum, "2.5");
				break;
			case 8:
				Str_Cpy(szGrdNum, "6");
				break;
			default:
				MessageBoxEx (CONFIRM_OK, "기물번호 등급이 잘못 되었습니다.");
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
				
				ClearData();
				goto Finally;
				break;
		}
		
		lret = Chk_Grd(szGrdNum);
		if( lret != 0 )
		{
			if( lret == -2 )
			{
				MessageBoxEx (CONFIRM_OK, "가정취사 세대로 등급을 확인하세요.");
			}
			else
			{
				MessageBoxEx (CONFIRM_OK, "등급변경 불가 합니다.");
			}
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
			
			ClearData();
			goto Finally;
		}

		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+2, 1);
		i = Str_AtoI(szTmp);
		switch( i )
		{
			case 1:
				if( Str_Cmp(stMtrChg.MTR_TYPE, "20") != 0 )
				{
					MessageBoxEx (CONFIRM_OK, "기물번호 타입이 이전 계량기 타입과 다릅니다.");
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
					
					ClearData();
					goto Finally;
				}
				Str_Cpy(szTypeCd, "20");
				break;
			case 2:
				if( Str_Cmp(stMtrChg.MTR_TYPE, "10") != 0 )
				{
					MessageBoxEx (CONFIRM_OK, "기물번호 타입이 이전 계량기 타입과 다릅니다.");
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
					
					ClearData();
					goto Finally;
				}
				Str_Cpy(szTypeCd, "10");
				break;
			default:
				ClearData();
				MessageBoxEx (CONFIRM_OK, "기물번호 타입이 잘못 되었습니다.");
				goto Finally;
				break;
				
		}

		//원격
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+3, 1);
		i = Str_AtoI(szTmp);
		switch( i )
		{
			case 1:
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				Str_Cpy(szRemoteCd, "10");
				break;
			case 2:
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 1));
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				Str_Cpy(szRemoteCd, "20");
				break;
			case 3:
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 1));
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				Str_Cpy(szRemoteCd, "20");
				break;
			case 4:
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 1));
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				Str_Cpy(szRemoteCd, "20");
				break;
			default:
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");

				ClearData();
				MessageBoxEx (CONFIRM_OK, "기물번호 원격여부가 잘못 되었습니다.");
				goto Finally;
				break;
		}

		Mem_Set( (byte*)m_szMtrBarnum, 0x00, sizeof(m_szMtrBarnum) );
		Mem_Cpy((byte *)m_szMtrBarnum, (byte *)m_szBartmp, 3);
		lFlag = 0;
		
		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			ClearData();
			goto Finally2;
		}

		hstmt = sql->CreateStatement(sql,
"SELECT MTR_MODEL_CD, MTR_GRD, MTR_DIGIT_CNT, MTR_TYPE, MTR_MODEL_NM FROM MTR_MODEL \
WHERE MAKER_NUM = ? AND BARCODE_NUM = ? AND MTR_GRD = ? AND MTR_TYPE = ?"
		);

		if( hstmt == NULL )
		{
			ClearData();
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally2;
		}

		i = 0;
		sql->Bind(sql, i++, 'U', (long*)&m_szMakernum ,       10, DECRYPT);
		sql->Bind(sql, i++, 'U', (long*)&m_szMtrBarnum ,   10, DECRYPT);
		sql->Bind(sql, i++, 'U', (long*)&szGrdNum ,         5, DECRYPT);
		sql->Bind(sql, i++, 'U', (long*)&szTypeCd ,         5, DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			ClearData();
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			goto Finally2;
		}

		if(sql->Next(sql) == TRUE )
		{	
			idx = 0;
			sql->GetValue( sql, idx++, 'U', (long*) szModelCd			, 5  + 1, DECRYPT );
			sql->GetValue( sql, idx++, 'U', (long*) szGrdNum			, 8  + 1, DECRYPT );
			sql->GetValue( sql, idx++, 'U', (long*) szMtrCnt			, 3  + 1, DECRYPT );
			sql->GetValue( sql, idx++, 'U', (long*) szTypeCd			, 2  + 1, DECRYPT );
			sql->GetValue( sql, idx++, 'U', (long*) szModelNm			, 50 + 1, DECRYPT );
		}
		else
		{
			ClearData();
			PRINT("::sql->Next fail [%s]",sql->GetLastError(sql),0,0);
			goto Finally2;
		}
		
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   szGrdNum);
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  szModelNm);
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  szMtrCnt);
		
		Mem_Cpy((byte *)szMtrNum1, (byte *)m_szBartmp+4, Str_Len(m_szBartmp)-4);
		
		Str_Cpy(stMtrChg.MTR_BAR, m_szBartmp);
		Str_Cpy(stMtrChg.AFTER_MTR_ID_NUM, szMtrNum1);
		Str_Cpy(stMtrChg.AFTER_MTR_GRD, szGrdNum);
		Str_Cpy(stMtrChg.AFTER_MTR_MODEL_CD, szModelCd);
		Str_Cpy(stMtrChg.AFTER_MTR_DIGIT_CNT, szMtrCnt);
		Str_Cpy(stMtrChg.AFTER_MTR_TYPE, szTypeCd);
		
		EditCtrl_SetStr( Get_hDlgCtrlByID(EDT_DATA1)   , stMtrChg.AFTER_MTR_ID_NUM);
	
		//신규 코드 값 삭제
		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
		//상태 value
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM <> '10' AND A.CODE_ITEM <> '20' UNION ALL SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
		//상태 code
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004'  AND A.CODE_ITEM <> '10'  AND A.CODE_ITEM <> '20' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);		
	
		//타입
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'B30003' AND CODE_ITEM = '%s'",stMtrChg.AFTER_MTR_TYPE, 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA21)   , m_szTmp);
		
		lFlag = 1;
		
Finally2:
		DelSqLite(sql);
		
		if( lFlag == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "모델 선택에 실패하였습니다.");
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
			
			ClearData();
		}

Finally:

		ON_DRAW();
		return;
	}
	
	
//----------------------------------------------------------------------------------------------
	bool Save_Impossible(void)
	{
		long idx;
		bool lRet = TRUE;
		char szfilenm[256];
		char szTmp[300];
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();
		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA6))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "방문일자를 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA7))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "불가사유를 선택하세요.");
			lRet = FALSE;
			goto Finally;
		}

//2017-07-19 Sanghyun Lee
//신기호씨 요청으로 불가사유 입력시 사진 필수체크 제거
//		Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
//		Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
//		Str_Cpy(szfilenm, "MNM");				
//		Str_Cat(szfilenm, "_");
//		Str_Cat(szfilenm, stMtrChg.MTR_NUM);
//		Str_Cat(szfilenm, ".jjp");
//		SPRINT (szTmp, "%s/%s",PHOTO_GC, szfilenm, 0);

//		if( FFS_Exist(szTmp) == 0 || FFS_Exist(szTmp) < 0 )
//		{
//			MessageBoxEx (CONFIRM_OK, "불가사유 사진을 촬영하세요.");
//			lRet = FALSE;
//			goto Finally;
//		}

		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		Str_ItoA(Time_GetDate(), stMtrChg.JOB_DTM, 10);
		//Str_ItoA(Time_GetTime(), m_szTmp, 10);
		g_Str_TimeType( m_szTmp , Time_GetTime());
		Str_Chg(stMtrChg.JOB_DTM, STRCHG_DEL_NONDIGIT);
		Str_Chg(m_szTmp, STRCHG_DEL_NONDIGIT);
		Str_Cat(stMtrChg.JOB_DTM, m_szTmp);
		
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		Str_Cpy(m_szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA6)));
		Str_Chg(m_szTmp, STRCHG_DEL_NONDIGIT);
		Str_Cpy(stMtrChg.VISIT_YMD, m_szTmp);
		
		Str_Cpy(stMtrChg.REPL_STS, "30");
		
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30125' AND ITEM_KNAME == '%s' ",EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA7)), 0, 0   );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.REPL_NOT_PERMIT_WHY );
		
		Str_Cpy(stMtrChg.SEND_YN, "S");

		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			lRet = FALSE;
			goto Finally;
		}
	
		hstmt = sql->CreateStatement(sql, "UPDATE C6301_CHANGEDATA SET \
REPL_STS = ?, REPL_NOT_PERMIT_WHY = ?, TREAT_FLAG = '30', VISIT_YMD = ? \
, JOB_DTM = ?, JOBER_EMPID = ?, UPD_EMPID = ?, SEND_YN = ? , CRT_EMPID = ?, PDA_NUM = ? \
WHERE MTR_NUM = ? AND OBJ_CRT_YMD = ?"
		);
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			lRet = FALSE;
			goto Finally;
		}
		
		idx = 0;
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REPL_STS				,2	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REPL_NOT_PERMIT_WHY		,3	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.VISIT_YMD				,8	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.JOB_DTM					,14	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id	 		,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id	 		,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.SEND_YN					,1	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id		  	,9  ,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szpda_ip      	  	,32,DECRYPT);

		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.MTR_NUM					,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.OBJ_CRT_YMD				,8	,DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			lRet = FALSE;
			goto Finally;
		}
		
Finally:

		DelSqLite(sql);
		return lRet;
	}
	
	
//----------------------------------------------------------------------------------------------
	bool Save_Vc(void)
	{
		long idx;
		bool lRet = TRUE;
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();
		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA4))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Vc 설치지침을 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Va 설치지침을 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Vm 설치지침을 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Vc 철거지침을 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA8))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Va 철거지침을 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA9))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Vm 철거지침을 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}


		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			lRet = FALSE;
			goto Finally;
		}
	
		hstmt = sql->CreateStatement(sql, "UPDATE C6301_CHANGEDATA SET \
REPL_STS = ?, REPL_NOT_PERMIT_WHY = ?, TREAT_FLAG = '30', VISIT_YMD = ? \
, JOB_DTM = ?, JOBER_EMPID = ?, UPD_EMPID = ?, SEND_YN = ? \
WHERE MTR_NUM = ? AND OBJ_CRT_YMD = ?"
		);
		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			lRet = FALSE;
			goto Finally;
		}
		
		idx = 0;
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REPL_STS				,2	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.REPL_NOT_PERMIT_WHY		,3	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.VISIT_YMD				,8	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.JOB_DTM					,14	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id	 		,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stUserinfo.szemployee_id	 		,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.SEND_YN					,1	,DECRYPT);
		
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.MTR_NUM					,9	,DECRYPT);
		sql->Bind(sql, idx++, 'U', (long *)stMtrChg.OBJ_CRT_YMD				,8	,DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			lRet = FALSE;
			goto Finally;
		}
		
Finally:

		DelSqLite(sql);
		return lRet;
	}

	bool Save_Mtr(void)
	{
		long idx;
		bool lRet = TRUE;
		SQLITE sql = NewSqLite();
		

		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		Str_Cpy(m_szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA51)));
		Str_Cpy(stMtrChg.BEFO_MTR_ID_NUM, m_szTmp);
		
		if(Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA51))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "계량기의 바코드를 스캔해주세요");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Cmp(stMtrChg.MTR_ID_NUM , stMtrChg.BEFO_MTR_ID_NUM) )
		{
			MessageBoxEx (CONFIRM_OK, "기존 기물번호와 \n 새로운 기물번호가 다릅니다 \n 다시 확인해주세요.");
			Str_Cpy(stMtrChg.BEFO_MTR_ID_NUM, "");
			lRet = FALSE;
			goto Finally;
		}		
		else if( !Str_Cmp(stMtrChg.MTR_ID_NUM , stMtrChg.BEFO_MTR_ID_NUM) )
		{
			ON_EXIT();
			OnInit(INIT_MAIN);
		}

Finally:

		
		return lRet;
	}

	bool Save_Ami(void)
	{
		long idx;
		bool lRet = TRUE;
		SQLITE sql = NewSqLite();

		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA9))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "통신사를 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA48))) == 0)
		{
			MessageBoxEx (CONFIRM_OK, "통신번호를 입력하세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if(Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA48))) > 24 )
		{
			MessageBoxEx (CONFIRM_OK, "통신번호는 24자 이하로 입력해주세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA10))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "유입구분을 선택하세요.");
			lRet = FALSE;
			goto Finally;
		}

		if( Str_Cmp(stMtrChg.AMI_OBJ_YN, "Y") == 0 )
		{
			if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA18))) == 0 )
			{
				MessageBoxEx (CONFIRM_OK, "집중기설치비용을 선택하세요.");
				lRet = FALSE;
				goto Finally;
			}
		}

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C31074' AND ITEM_KNAME == '%s' ",EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA9)), 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		Str_Cpy(stMtrChg.COMM_FIRM, m_szTmp);

		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		Str_Cpy(m_szTmp, EditCtrl_GetStr(Get_hDlgCtrlByID(TXT_DATA48)));
		Str_Cpy(stMtrChg.COMM_NUM_24, m_szTmp);

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C31072' AND ITEM_KNAME == '%s' ",EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA10)), 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		Str_Cpy(stMtrChg.INFLOW_FLAG, m_szTmp);

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30054' AND ITEM_KNAME == '%s' ",EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA11)), 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		Str_Cpy(stMtrChg.REPL_TREAT_INSTI, m_szTmp);

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30123' AND ITEM_KNAME == '%s' ",EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA12)), 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		Str_Cpy(stMtrChg.NO_BILL_REPL_WHY, m_szTmp);

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30023' AND ITEM_KNAME == '%s' ",EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA18)), 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		Str_Cpy(stMtrChg.CONCENT_INST_AMT_YN, m_szTmp);
		

Finally:

		DelSqLite(sql);
		return lRet;
	}

	bool Save_Pay(void)
	{
		long idx;
		long i;
		bool lRet = TRUE;

		SQLITE sql = NewSqLite();

		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA13))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "특수계량기 배터리 유무를 선택해주세요.");
			lRet = FALSE;
			goto Finally;
		}
		else if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA14))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "특수계량기 지시부 유무를 선택해주세요.");
			lRet = FALSE;
			goto Finally;
		}

		// // 배터리
		// i = g_SearchStr( EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA13)), C6301_BATTERY_YN );
		// Str_Cpy(stMtrChg.BATTERY_YN, C6301_BATTERY_YN[i].Code);
		// PRINT("C6301_BATTERY_YN[i].Code : %s",C6301_BATTERY_YN[i].Code,0,0);

		// i = g_SearchStr( EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA14)), C6301_MTRDISPLAY_YN );
		// Str_Cpy(stMtrChg.MTRDISPLAY_YN, C6301_MTRDISPLAY_YN[i].Code);
		// PRINT("stMtrChg.MTRDISPLAY_YN222222222222 : %s",stMtrChg.MTRDISPLAY_YN,0,0);

		// ;
		
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30023' AND CODE_ITEM != 'U' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA13)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.BATTERY_YN );

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30023' AND CODE_ITEM != 'U' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA14)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.MTRDISPLAY_YN );




Finally:

		DelSqLite(sql);
		return lRet;
	}

	bool Save_Remote(void)
	{
		long idx;
		long i;
		bool lRet = TRUE;

		SQLITE sql = NewSqLite();

		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA15))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "원격시스템 관리 회사를 선택해주세요.");
			lRet = FALSE;
			goto Finally;
		}

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C30023' AND ITEM_KNAME = '설치' ", 0, 0, 0 );
		SPRINT(m_szSql, "SELECT CODE_ITEM FROM COMMONCODE WHERE CODE_ID = 'C31097' AND ITEM_KNAME = '%s' ", EditCtrl_GetStr(Get_hDlgCtrlByID(CMB_DATA15)), 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.REMOTE_SYSTEM );

Finally:

		DelSqLite(sql);
		return lRet;
	}
	
	
//----------------------------------------------------------------------------------------------
	long Chk_Grd(char* szAfterGrd)
	{
		long lPrevGrd, lAfterGrd, lProdCd;
		
		//2.5 -> 25로 바꿔 사용
		if( Str_Cmp(stMtrChg.MTR_GRD, "2.5") == 0 )
		{
			lPrevGrd = 25;
		}
		else
		{
			lPrevGrd = Str_AtoI(stMtrChg.MTR_GRD);
		}

		if( Str_Cmp(szAfterGrd, "2.5") == 0 )
		{
			lAfterGrd = 25;
		}
		else
		{
			lAfterGrd = Str_AtoI(szAfterGrd);
		}		
		
		lProdCd = Str_AtoI(stMtrChg.PROD_NM);
	
		switch(lPrevGrd)
		{
			case 2:
			case 25:	//2.5 -> 25로 바꿔 사용
				if( lAfterGrd == 2 || lAfterGrd == 25 || lAfterGrd == 3 )
				{
					return 0;
				}
				else
				{
					return -1;
				}
				break;
			case 3:
				if( lProdCd == 11 )
				{
					if( lAfterGrd == 2 || lAfterGrd == 25 || lAfterGrd == 3 )
					{
						return 0;
					}
					else
					{
						return -2;
					}
				}
				else
				{
					if( lAfterGrd == 3 || lAfterGrd == 4 )
					{
						return 0;
					}
					else
					{
						return -1;
					}
				}
				break;
			case 4:
				if( lProdCd == 11 )
				{
					if( lAfterGrd == 2 || lAfterGrd == 25 || lAfterGrd == 3 || lAfterGrd == 4 )
					{
						return 0;
					}
					else
					{
						return -2;
					}
				}
				else
				{
					if( lAfterGrd == 4 )
					{
						return 0;
					}
					else
					{
						return -1;
					}
				}
				break;
			case 5:
				if( lProdCd == 11 )
				{
					if( lAfterGrd == 2 || lAfterGrd == 25 || lAfterGrd == 3 || lAfterGrd == 5 )
					{
						return 0;
					}
					else
					{
						return -2;
					}
				}
				else
				{
					if( lAfterGrd == 5 || lAfterGrd == 6 || lAfterGrd == 7 )
					{
						return 0;
					}
					else
					{
						return -1;
					}
				}
				break;
			case 6:
			case 7:
				if( lAfterGrd == 6 || lAfterGrd == 7 )
				{
					return 0;
				}
				else
				{
					return -1;
				}
				break;
			case 10:
				if( lAfterGrd == 10 )
				{
					return 0;
				}
				else
				{
					return -1;
				}
				break;
		}
	
		return -1;
	}
	
//----------------------------------------------------------------------------------------------
	long Chk_MakerCd(char* szMakerCd)
	{
		long lRet;
	
		if( szMakerCd[0] == 'A' )
		{
			lRet = 1;
		}
		else if( szMakerCd[0] == 'B' )
		{
			lRet = 2;
		}
		else if( szMakerCd[0] == 'C' )
		{
			lRet = 3;
		}
		else if( szMakerCd[0] == 'D' )
		{
			lRet = 4;
		}
		else if( szMakerCd[0] == 'E' )
		{
			lRet = 5;
		}
		else if( szMakerCd[0] == 'F' )
		{
			lRet = 6;
		}
		else if( szMakerCd[0] == 'G' )
		{
			lRet = 7;
		}
		else if( szMakerCd[0] == 'H' )
		{
			lRet = 8;
		}
		else if( szMakerCd[0] == 'I' )
		{
			lRet = 9;
		}
		else if( szMakerCd[0] == 'J' )
		{
			lRet = 10;
		}
		else if( szMakerCd[0] == 'K' )
		{
			lRet = 11;
		}
		else if( szMakerCd[0] == 'L' )
		{
			lRet = 12;
		}
		else if( szMakerCd[0] == 'M' )
		{
			lRet = 13;
		}
		else if( szMakerCd[0] == 'N' )
		{
			lRet = 14;
		}
		else if( szMakerCd[0] == 'O' )
		{
			lRet = 15;
		}
		else if( szMakerCd[0] == 'P' )
		{
			lRet = 16;
		}
		else if( szMakerCd[0] == 'Q' )
		{
			lRet = 17;
		}
		else if( szMakerCd[0] == 'R' )
		{
			lRet = 18;
		}
		else if( szMakerCd[0] == 'S' )
		{
			lRet = 19;
		}
		else if( szMakerCd[0] == 'T' )
		{
			lRet = 20;
		}
		else if( szMakerCd[0] == 'U' )
		{
			lRet = 21;
		}
		else
		{
			lRet = -1;
		}
		
		return lRet;
	}
	
//----------------------------------------------------------------------------------------------
/*
계량기교체		C31(업무구분) | M(계량기), C(보정기) | B(철거), A(설치), N(불가) | M(계량기번호) | D( 생성날짜(SYSDATE : YYYYMMDDHHMMSS )
점검		C31(업무구분) | M(계량기번호), R(조정기번호), E(점검시행번호), S(장치형 특정번호)  | M(계량기번호) | B(연소기 번호) | N(부적합), B(개선) | 점검부분코드 | 부적합항목코드 | D( 생성날짜(SYSDATE : YYYYMMDDHHMMSS )
민원		C50( 업무구분) | M(계량기) , I(장소) | C(민원접수번호) | T (처리순번) | D( 생성날짜(SYSDATE : YYYYMMDDHHMMSS )
*/
	void Shoto_Photo(void)
	{
		handle h = NULL;
		handle hdata = NULL;
		char *pCamera;
		long nRet;

		Mem_Set((byte*)m_szfilenm, 0x00, sizeof(m_szfilenm));
		Str_Cpy(m_szfilenm, "MNM");				
		Str_Cat(m_szfilenm, "_");
		Str_Cat(m_szfilenm, stMtrChg.MTR_NUM);
		Str_Cat(m_szfilenm, ".jjp");

		if( theDevInfo.m_nType == FAMILY_PDA )
		{
			Mem_Set((byte*)g_szphoto, 0x00, sizeof(g_szphoto));
			SPRINT (g_szphoto, "%s/%s", PHOTO_GC,  m_szfilenm, 0);
			Card_Move("CM_PHOTO");
			return;
			
		}
		else
		{
			//원본파일
		//	Mem_Set((byte*)g_szphoto, 0x00, sizeof(g_szphoto));
		//	SPRINT (g_szphoto, "%s/%s", PHOTO_GC,  m_szfilenm, 0);
			//에뮬에서 확인시...
			//Str_Cpy(szScrPht, szfilenm);
		//	ShootPhoto ( 1, 0, m_szfilenm );
		
			h = JSON_Create( JSON_Object );
			if (h)
			{
				hdata = JSON_Create( JSON_Object );
				if(hdata == NULL)
				{
					goto Finally;
				}
				
				//2017-08-18 Sanghyun Lee
				//카메라 화질 설정(photo_quality)	
				//"MEDIA_QUALITY_AUTO" ->> 에러 발생, 필요X
				//"MEDIA_QUALITY_LOWEST"
				//"MEDIA_QUALITY_LOW" ->> 선택되는 화질이 없음 , 필요X
				//"MEDIA_QUALITY_MEDIUM" ->> 현재 사용중인버전
				//"MEDIA_QUALITY_HIGH"
				//"MEDIA_QUALITY_HIGHEST"
				JSON_SetValue	(hdata	, 'C', "photo_quality"		, "MEDIA_QUALITY_MEDIUM");
				//JSON_SetValue	(hdata	, 'C', "desc"				, "photo");
				JSON_SetValue	(hdata	, 'C', "position_info"		, g_szSqlWhere);
				JSON_SetValue	(h		, 'C', "method"				, "CameraActivity");
				
				JSON_Attach 	(h		, "data"					, hdata);
			
				System_Call		("Native_System_Call" , JSON_toString(h));
			}
			
			Finally:
		
			if (h)
			{
				JSON_Finalize(h);
			}	
		
			if (hdata)
			{
				JSON_Finalize(hdata);
			}	
		}

		return;
	}
	
//----------------------------------------------------------------------------------------------	
//촬영한 사진 삭제
	void Delete_Photo(void)
	{
		char *pCamera;
		char szFullpath[256];
		char szfilenm[100];
		long nRet;

		if( Str_Cmp(stMtrChg.SEND_YN, "S") != 0 && Str_Cmp(stMtrChg.SEND_YN, "Y") != 0 )
		{
			//철거전 계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
			Str_Cpy(szfilenm, "MBM");				
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.NOBILL_YN);
			Str_Cat(szfilenm, ".jjp");
			SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);
	
			if(FFS_Exist(szFullpath) > 0)
			{
				FFS_Delete( szFullpath );
			}
			
			Sleep(50);
	
			//설치전 계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
			Str_Cpy(szfilenm, "MAM");				
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.NOBILL_YN);
			Str_Cat(szfilenm, ".jjp");
			SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);
	
			if(FFS_Exist(szFullpath) > 0)
			{
				FFS_Delete( szFullpath );
			}
		}
		
		return;
	}
	
//----------------------------------------------------------------------------------------------
	void Barcode_Func(void)
	{
		char szTmp[100];
		char szDate[20];
		char szMonth[4];
		char szYear[10];
		char szYear2[10];
		char szMsg[128];
		
		char szModelCd[20];
		char szModelNm[30];
		char szTypeCd[20];
		char szGrdNum[20];
		char szMtrNum1[30];
		char szMtrNum2[15];
		char szMtrCnt[20];
		char szRemoteCd[20];
		char szMtrKindCd[20];
		char szOldMtrIdNum[30];
		
		long lDate, lBarLen, lCnt, lMonth;
		long lret = 0;
		long lFlag = -1;
		long i, idx, z;
		
		handle hdb = NULL;
		handle hstmt = NULL;
		SQLITE sql = NewSqLite();

		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Set( (byte*)szDate, 0x00, sizeof(szDate) );
		Mem_Set( (byte*)szMonth, 0x00, sizeof(szMonth) );
		Mem_Set( (byte*)szYear, 0x00, sizeof(szYear) );
		Mem_Set( (byte*)szYear2, 0x00, sizeof(szYear2) );
			
		Mem_Set( (byte*)szModelCd, 0x00, sizeof(szModelCd) );
		Mem_Set( (byte*)szModelNm, 0x00, sizeof(szModelNm) );
		Mem_Set( (byte*)szTypeCd, 0x00, sizeof(szTypeCd) );
		Mem_Set( (byte*)szGrdNum, 0x00, sizeof(szGrdNum) );
		Mem_Set( (byte*)szMtrNum1, 0x00, sizeof(szMtrNum1) );
		Mem_Set( (byte*)szMtrNum2, 0x00, sizeof(szMtrNum2) );
		Mem_Set( (byte*)szMtrCnt, 0x00, sizeof(szMtrCnt) );
		Mem_Set( (byte*)szRemoteCd, 0x00, sizeof(szRemoteCd) );
		Mem_Set( (byte*)szMtrKindCd, 0x00, sizeof(szMtrKindCd) );
 
		// MessageBoxEx (CONFIRM_OK, m_szBartmp);

		// g_szBartmp에 바코드 저장
		Mem_Set( (byte*)g_szBartmp, 0x00, sizeof(g_szBartmp) );
		Str_Cpy(g_szBartmp, m_szBartmp);
		
		// 바코드 년도
		Mem_Cpy((byte *)szYear, (byte *)m_szBartmp, 2);
		
		// 현재 년도
		Str_ItoA(Time_GetYear(), szDate, 10);
		Mem_Cpy((byte *)szYear2, (byte *)szDate+2, 2);
		
		// 현재 월
		lMonth = Time_GetMonth();

		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+5, 1);
		i = Str_AtoI(szTmp);

		// 상반기
		if( lMonth < 7 )
		{
			// 계량기 종류가 디지털, 디지털(듀얼) , 누출점검 , 누출점검(듀얼), 디지털 누출점검 , 디지털 누출점검(듀얼), 다기능
			// 교체(월) 기준 (1월~ 6월)은 기물번호 바코드 앞 2자리가 (전년) 및 (당해년도) 인 경우 [신품]
			if( Str_AtoI(szYear) == Str_AtoI(szYear2) || Str_AtoI(szYear) == (Str_AtoI(szYear2) - 1) )
			{
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {
					if(i == 2)
					{
						if( MessageBoxEx (CONFIRM_YESNO, "신품 계량기가 맞습니까?")  == MB_OK)
						{
							if (Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "30") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "40") == 0 
							|| Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "50") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "60") == 0 )
							{	
								setBarCodeRsltView(4);
							}	
							else
							{
								setBarCodeRsltView(0);
							}
						}
						else
						{
							setBarCodeRsltView(1);
						}	
					}
					else
					{
						if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
						{
							if (Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "30") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "40") == 0 
								|| Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "50") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "60") == 0 )
							{
								setBarCodeRsltView(4);
							}
							else
							{
								setBarCodeRsltView(3);
							}
						}
						else
						{
							if( MessageBoxEx (CONFIRM_YESNO, "신품 계량기가 맞습니까?")  == MB_OK)
							{
								if (Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "30") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "40") == 0 
								|| Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "50") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "60") == 0 )
								{
									setBarCodeRsltView(4);
								}
								else
								{
									setBarCodeRsltView(0);
								}
								
							}
							else
							{
								setBarCodeRsltView(1);
							}
						}
					}
					
				// }
				// else
				// {	
				// 	if( MessageBoxEx (CONFIRM_YESNO, "신품 계량기가 맞습니까?")  == MB_OK)
				// 	{
				// 		setBarCodeRsltView(0);
				// 	}
				// 	else
				// 	{
				// 		setBarCodeRsltView(1);
				// 	}	
				// }
			}
			else
			{
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {	
					if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
					{
						if (Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "30") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "40") == 0 
						|| Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "50") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "60") == 0 )
						{
							setBarCodeRsltView(4);
						}
						else
						{
							setBarCodeRsltView(2);
						}
					}
					else
					{
						setBarCodeRsltView(2);
					}
				// }
				// else
				// {
				// 	setBarCodeRsltView(2);
				// }
			}
		}
		//하반기
		else
		{
			if( Str_AtoI(szYear) == Str_AtoI(szYear2) )
			{
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {
					if(i == 2)
					{
						// if( MessageBoxEx (CONFIRM_YESNO, "신품 계량기가 맞습니까?")  == MB_OK)
						if( Str_AtoI(szYear) == Str_AtoI(szYear2) )
						{
							if (Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "30") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "40") == 0 
							|| Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "50") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "60") == 0 )
							{	
								setBarCodeRsltView(4);
							}	
							else
							{
								setBarCodeRsltView(0);
							}
						}
						else
						{
							setBarCodeRsltView(1);
						}	
					}
					else
					{
						if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
						{
							if (Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "30") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "40") == 0 
								|| Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "50") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "60") == 0 )
							{
								setBarCodeRsltView(4);
							}
							else
							{
								setBarCodeRsltView(3);
							}
						}
						else
						{
							if( MessageBoxEx (CONFIRM_YESNO, "신품 계량기가 맞습니까?")  == MB_OK)
							{
								if (Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "30") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "40") == 0 
								|| Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "50") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "60") == 0 )
								{
									setBarCodeRsltView(4);
								}
								else
								{
									setBarCodeRsltView(0);
								}
								
							}
							else
							{
								setBarCodeRsltView(1);
							}
						}
					}
					
				// }
				// else
				// {	
				// 	if( MessageBoxEx (CONFIRM_YESNO, "신품 계량기가 맞습니까?")  == MB_OK)
				// 	{
				// 		setBarCodeRsltView(0);
				// 	}
				// 	else
				// 	{
				// 		setBarCodeRsltView(1);
				// 	}	
				// }
			}
			else
			{
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0
				// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {	
					if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
					{
						if (Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "20") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "30") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "40") == 0 
						|| Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "50") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "60") == 0 )
						{
							setBarCodeRsltView(4);
						}
						else
						{
							setBarCodeRsltView(2);
						}
					}
					else
					{
						setBarCodeRsltView(2);
					}
				// }
				// else
				// {
				// 	setBarCodeRsltView(2);
				// }
			}
		}

		if (Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0)		
		{
			setBarCodeRsltView(3);
		}
		// Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		// Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp);
		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		
		//이전기물번호 로직 삭제로 인한 Y -> N 으로 변경 (20231019)
		SPRINT(m_szSql, "SELECT CASE WHEN COUNT(*) > 0 THEN 'N' ELSE 'N' END AS CNT FROM C6301_OLDMTRIDNUM WHERE MTR_ID_NUM = '%s' ", m_szBartmp, 0, 0 );
		// SPRINT(m_szSql, "SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END AS CNT FROM C6301_OLDMTRIDNUM WHERE MTR_ID_NUM = '%s' ", m_szBartmp, 0, 0 );
		g_Sql_RetStr( m_szSql, 20, stMtrChg.OLD_MTR_ID_NUM );
		// Mem_Set( (byte*)szOldMtrIdNum, 0x00, sizeof(szOldMtrIdNum) );
		// Str_Cpy(szOldMtrIdNum, m_szTmp);

		
		//제조사 코드
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+2, 1);
		if( Str_NCmp(szTmp, "0", 1) < 0 || Str_NCmp(szTmp, "9", 1) > 0 )
		{
			//해당되는 값이 아닌 문자가 들어왔을경우, 오류를 내기 위한 숫자 입력
			Str_Cpy(szTmp, "99");
		}
		i = Str_AtoI(szTmp);
		switch( i ) 
		{
			case 1:
				Str_Cpy(m_szMakernum, "10001");
				break;
			case 2:
				Str_Cpy(m_szMakernum, "10002");
				break;
			case 3:
				Str_Cpy(m_szMakernum, "10003");
				break;
			case 4:
				Str_Cpy(m_szMakernum, "10004");
				break;
			case 5:
				Str_Cpy(m_szMakernum, "10005");
				break;
			case 6:
				Str_Cpy(m_szMakernum, "10043");
				break;
			case 7:
				Str_Cpy(m_szMakernum, "10006");
				break;
			case 8:
				Str_Cpy(m_szMakernum, "10038");
				break;
			case 9:
				Str_Cpy(m_szMakernum, "10008");
				break;
			case 0:
				Str_Cpy(m_szMakernum, "10037");
				break;
			default:
				MessageBoxEx (CONFIRM_OK, "기물번호 제작사가 잘못 되었습니다.");
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
				ClearData();
				goto Finally;
				break;
		}

		//등급
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+3, 1);
		i = Str_AtoI(szTmp);
		switch( i ) 
		{
			case 2:
				Str_Cpy(szGrdNum, "2.5");
				break;
			case 3:
				Str_Cpy(szGrdNum, "4");
				break;
			case 4:
				Str_Cpy(szGrdNum, "6");
				break;
			case 5:
				Str_Cpy(szGrdNum, "10");
				break;
			default:
				MessageBoxEx (CONFIRM_OK, "기물번호 등급이 잘못 되었습니다.");
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
				ClearData();
				goto Finally;
				break;
		}
		
		lret = Chk_Grd(szGrdNum);
		if( lret != 0 )
		{
			if( lret == -2 )
			{
				MessageBoxEx (CONFIRM_OK, "가정취사 세대로 등급을 확인하세요.");
			}
			else
			{
				MessageBoxEx (CONFIRM_OK, "등급변경 불가 합니다.");
			}
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
			ClearData();
			goto Finally;
		}

		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+4, 1);
		i = Str_AtoI(szTmp);
		switch( i )
		{
			case 1:
				if( Str_Cmp(stMtrChg.MTR_TYPE, "20") != 0 )
				{
					MessageBoxEx (CONFIRM_OK, "기물번호 타입이 이전 계량기 타입과 다릅니다.");
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
					ClearData();
					goto Finally;
				}
				Str_Cpy(szTypeCd, "20");
				break;
			case 2:
				if( Str_Cmp(stMtrChg.MTR_TYPE, "10") != 0 )
				{
					MessageBoxEx (CONFIRM_OK, "기물번호 타입이 이전 계량기 타입과 다릅니다.");
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
					ClearData();
					goto Finally;
				}
				Str_Cpy(szTypeCd, "10");
				break;
			default:
				MessageBoxEx (CONFIRM_OK, "기물번호 타입이 잘못 되었습니다.");
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
				ClearData();
				goto Finally;
				break;
				
		}

		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+5, 1);
		i = Str_AtoI(szTmp);
		Mem_Set( (byte*)szTmp, 0x00, sizeof(szTmp) );
		Mem_Cpy((byte *)szTmp, (byte *)m_szBartmp+6, 1);
		z = Str_AtoI(szTmp);
		
		switch( i )
		{
			case 1:
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
				// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {	
					// 종류 : 일반
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					Str_Cpy(szMtrKindCd, "10");
					
					// 원격 : 미설치, 비활성화
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "10");

					if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
					{
						if( Str_Cmp(stMtrChg.MTR_KIND, "10") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "70") == 0)
						{
							ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA2+2));
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087'  AND CODE_ITEM IN ('10','30','70')", CMB_DATA2+2);

							// 종류 : 일반
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							Str_Cpy(szMtrKindCd, "");

							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							Str_Cpy(szRemoteCd, "10");
						}
						else if (Str_Cmp(stMtrChg.MTR_KIND, "30") == 0 && Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "10") == 0)
						{
							ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA2+2));
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087'  AND CODE_ITEM IN ('10','30','70')", CMB_DATA2+2);
							
							// 종류 : 일반
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							Str_Cpy(szMtrKindCd, "");
						}
						else
						{
							MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
							ClearData();
							goto Finally;

						}	
					}
					else
					{

						// if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
						// 	||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
						// 	||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 ) //원격구분이 미설치가 아닌거
						// {
						// 	if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
						// 	{
						// 		ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
						// 		ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
						// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
						// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
						// 	}
							
						// }

						// Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						// Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
						// SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
						// g_Sql_RetStr( m_szSql, 20, m_szTmp );
						// EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);

						// ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA2+2));
						// Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						// g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087'  AND CODE_ITEM IN ('10','30','70')", CMB_DATA2+2);

						// 종류 : 일반
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						Str_Cpy(szMtrKindCd, "10");
						
						//원격 : 미설치, 비활성화
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						Str_Cpy(szRemoteCd, "10");
					}
					
				// }
				// else
				// {
				// 	// 종류 : 일반
				// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
				// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				// 	Str_Cpy(szMtrKindCd, "10");
					
				// 	// 원격 : 미설치, 비활성화
				// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
				// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				// 	Str_Cpy(szRemoteCd, "10");
				// }
				
				
				break;
			case 2:
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
				// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {
					// if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 )
					// {
						// 종류 : 펄스
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 3));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						Str_Cpy(szMtrKindCd, "30");

						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						Str_Cpy(szRemoteCd, "10");
						
						
						if( Str_Cmp(stMtrChg.MTR_KIND, "10") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "70") == 0) //일반 및 각도변형
						{
							ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA2+2));
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087'  AND CODE_ITEM IN ('10','30','70')", CMB_DATA2+2);

							// 종류 : 일반
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							Str_Cpy(szMtrKindCd, "");
							
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							Str_Cpy(szRemoteCd, "10");
							
						}
						else if (Str_Cmp(stMtrChg.MTR_KIND, "30") == 0 && Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "10") == 0)
						{
							ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA2+2));
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087'  AND CODE_ITEM IN ('10','30','70')", CMB_DATA2+2);
							
							// 종류 : 일반
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							Str_Cpy(szMtrKindCd, "");

							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							Str_Cpy(szRemoteCd, "10");
						}
						else if (Str_Cmp(stMtrChg.MTR_KIND, "30") == 0)
						{
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
							SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
							g_Sql_RetStr( m_szSql, 20, m_szTmp );
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);	
							
						}
						else 
						{
							MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
							ClearData();
							goto Finally;
						}	

						if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0 ) //원격 구분이 디지로그인 경우에는 통합원격, 지시부 선택가능
						{
							ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA1+2));
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008'  AND CODE_ITEM IN ('20','40','50')", CMB_DATA1+2);
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );

							// Str_Cpy(szRemoteCd, stMtrChg.MTR_REMOTE_FLAG);
						}
						else
						{	
							// 원격 : 비활성화
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							// Str_Cpy(szRemoteCd, "10");
						}

						if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
							||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
							||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 ) //원격구분이 미설치가 아닌거
						{
							if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
							{
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
							}
							
							
						}
				// }
				// else
				// {
				// 	// 신품인 경우 펄스, 지시부형
				// 	if( Str_Cmp(stMtrChg.AFTER_MTR_NEW_FIX_FLAG,"10") == 0 )
				// 	{
				// 		// 종류 : 펄스
				// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 3));
				// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				// 		Str_Cpy(szMtrKindCd, "30");
					
				// 		// 원격 : 지시부형, 활성화
				// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 1));
				// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				// 		Str_Cpy(szRemoteCd, "20");
						
				// 	}
				// 	else//수리품인 경우 일반, 미설치
				// 	{
				// 		// 종류 : 일반
				// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 0));
				// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				// 		Str_Cpy(szMtrKindCd, "10");
						
				// 		// 원격 : 미설치, 비활성화
				// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
				// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				// 		Str_Cpy(szRemoteCd, "10");
				// 	}

				// }
				
				break;
				
			case 3:
				if( z == 5 )
				{
					// 종류 : 누출점검용
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 8));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					Str_Cpy(szMtrKindCd, "60");	

					//1213
					//특수계량기의 경우 철거계량기의 원격 종류와 같도록 설정.
					// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
					// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
					// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
					// {
						if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 )
						{
							if( Str_Cmp(stMtrChg.MTR_KIND, "60") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "61") == 0)
							{}
							else
							{
								MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
								EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
								ClearData();
								goto Finally;
							}
							
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
							SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
							g_Sql_RetStr( m_szSql, 20, m_szTmp );
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);	

							if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0 ) //원격 구분이 디지로그인 경우에는 통합원격, 지시부 선택가능
							{
								ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA1+2));
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008'  AND CODE_ITEM IN ('20','40','50')", CMB_DATA1+2);
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								
							}
							else
							{	
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );

								// Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								// Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
								// SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
								// g_Sql_RetStr( m_szSql, 20, m_szTmp );
								// EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);
							}

							if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
						   		||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
						   		||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 )
							{
								if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
								{
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
								}
								// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);

								
							}
						}
						else
						{
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							Str_Cpy(szRemoteCd, "10");

							
							if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
							{
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
							}
								// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);

								
							
						}

						

					// }
					// else //경기고객센터가 아닌 센터인 경우
					// {
					// 	// 원격 : 통합원격, 활성화
					// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
					// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					// 	Str_Cpy(szRemoteCd, "10");

					// 	// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					// 	// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					// }
				}
				else
				{
					// 종류 : 다기능
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 7));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					Str_Cpy(szMtrKindCd, "50");

					//1213
					//특수계량기의 경우 철거계량기의 원격 종류와 같도록 설정.
					// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
					// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
					// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
					// {
						if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 )
						{
							if( Str_Cmp(stMtrChg.MTR_KIND, "50") != 0 )
							{
								MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
								EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
								EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
								ClearData();
								goto Finally;
							}
							
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
							SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
							g_Sql_RetStr( m_szSql, 20, m_szTmp );
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);	

							if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0 ) //원격 구분이 디지로그인 경우에는 통합원격, 지시부 선택가능
							{
								ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA1+2));
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008'  AND CODE_ITEM IN ('20','40','50')", CMB_DATA1+2);
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							}
							else
							{	
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							}

							if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 ) //원격구분이 미설치가 아닌거
							{	
								if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
								{
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
								}
								// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);

							}
						}
						else
						{
							// 원격 : 미설치, 활성화
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							Str_Cpy(szRemoteCd, "10");

							if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
							{
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
							}

						}

						
					// }
					// else //경기고객센터가 아닌 센터인 경우
					// {
					// 	// 원격 : 미설치, 활성화
					// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
					// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					// 	Str_Cpy(szRemoteCd, "10");

					// 	// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					// 	// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					// }
					
				}
				
				break;
			case 4:
				if( Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0 )
				{
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 10));
					// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					Str_Cpy(szMtrKindCd, "80"); //AMI
					
					if(Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0)
					{
						ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
					}
									
					// 원격 : 통합원격 -> AMI, 활성화
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 6));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					Str_Cpy(szRemoteCd, "81"); //NB-IoT
				}
				else
				{
					if( z == 5 )
					{
						// 종류 : 디지털 누출점검용
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 10));
						// EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), "디지털 누출");
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						Str_Cpy(szMtrKindCd, "65");	
						
						//1213
						//특수계량기의 경우 철거계량기의 원격 종류와 같도록 설정.
						// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
						// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
						// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
						// {
							if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때
							{
								if( Str_Cmp(stMtrChg.MTR_KIND, "65") != 0 )
								{
									
									MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
									ClearData();
									goto Finally;
								}
								
								//원격구분 세팅
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
								SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
								g_Sql_RetStr( m_szSql, 20, m_szTmp );
								EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);	

								if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0 ) //원격 구분이 디지로그인 경우에는 통합원격, 지시부 선택가능
								{
									ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA1+2));
									Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
									g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008'  AND CODE_ITEM IN ('20','40','50')", CMB_DATA1+2);
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									
								}
								else
								{	
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								}

								if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 ) 
								{
									if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
									{
										ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
										ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
										DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
										DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
									}
									// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);
								}

							}
							else 
							{
								// 원격 : 미설치, 활성화
								EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								Str_Cpy(szRemoteCd, "40");

								if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
									{
										ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
										ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
										DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
										DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
									}
							}
							
						// }
						// else //경기고객센터가 아닌 센터인 경우
						// {
						// 	// 원격 : 미설치, 활성화
						// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
						// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						// 	Str_Cpy(szRemoteCd, "40");
						// }
					}
					else
					{
						// 종류 : 디지털
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 1));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						Str_Cpy(szMtrKindCd, "20");
						
						//1213
						//특수계량기의 경우 철거계량기의 원격 종류와 같도록 설정.
						// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
						// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
						// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
						// {
							// if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"10") != 0 ) 
							if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 )
							{
								if( Str_Cmp(stMtrChg.MTR_KIND, "20") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "21") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "30") == 0){}
								else
								{
									MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
									ClearData();
									goto Finally;
								}
								
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
								SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
								g_Sql_RetStr( m_szSql, 20, m_szTmp );
								EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);	

								if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0 ) //원격 구분이 디지로그인 경우에는 통합원격, 지시부 선택가능
								{
									ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA1+2));
									Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
									g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008'  AND CODE_ITEM IN ('20','40','50')", CMB_DATA1+2);
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									
								}
								else
								{	
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								}

								if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 ) 
								{
									// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
									// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);

									// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
									// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
								}

							}
							else //미설치인경우
							{
								// 원격 : 통합원격, 활성화
								EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								Str_Cpy(szRemoteCd, "40");

								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
							}

							// if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
							// 	||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
							// 	||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 ) 
							// 	{
							// 		// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
							// 		ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
							// 		// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);

							// 		// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
							// 		// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
							// 	}
						// }
						// else //경기고객센터가 아닌 센터인 경우
						// {
						// 	// 원격 : 통합원격, 활성화
						// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
						// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						// 	Str_Cpy(szRemoteCd, "40");
						// }
					}
				}
				break;
			// 2023.01.16 황인창 차장님 (무전표 일때에는 4 , 5 도 AMI계량기로 보이도록 수정)
			case 5:
				// 종류 : 무선원격(KT)
				if( Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0 )
				{
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 13));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					Str_Cpy(szMtrKindCd, "80"); //AMI
					
					if(Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0)
					{
						ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
					}
									
					// 원격 : 통합원격 -> AMI, 활성화
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 6));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					Str_Cpy(szRemoteCd, "81"); //NB-IoT

				}
				else
				{
					if( z == 5 )
					{
						//철거계량기의 계량기 종류를 보고 정해야함.
						//ex) 철거계량기가 누출점검(듀얼) 61 (9) 이면 설치도 누출점검(듀얼) 61(9)
						//    철거계량기가 디지털누출점검(듀얼) 66 이면 설치화면도 디지털누출점검(듀얼) 66 (11)
						
						// 종류 : 디지털 누출점검용
						if( Str_Cmp(stMtrChg.MTR_KIND, "60") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "61") == 0)
						{
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 9));
						}
						else if( Str_Cmp(stMtrChg.MTR_KIND, "65") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "66") == 0)
						{
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 11));
						}

						// Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
						// Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
						// SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087' AND CODE_ITEM = '%s' ", stMtrChg.MTR_KIND, 0, 0 );
						// g_Sql_RetStr( m_szSql, 20, m_szTmp );
						// EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2)   , m_szTmp);
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						Str_Cpy(szMtrKindCd, "");	

						//1213
						// 종류 : 디지털 누출점검용
						//특수계량기의 경우 철거계량기의 원격 종류와 같도록 설정.
						// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
						// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
						// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
						// {
							// if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"10") != 0 ) //계량기가 누출점검용이고 원격종류가 미설치가 아닌 경우에만 특수계량기
							if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 )
							{
								if( Str_Cmp(stMtrChg.MTR_KIND, "60") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "65") == 0
								   || Str_Cmp(stMtrChg.MTR_KIND, "61") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "66") == 0 )
								{}
								else
								{
									MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA4),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
									ClearData();
									goto Finally;
								}
								
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
								SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
								g_Sql_RetStr( m_szSql, 20, m_szTmp );
								EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);	

								if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0 ) //원격 구분이 디지로그인 경우에는 통합원격, 지시부 선택가능
								{
									ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA1+2));
									Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
									g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008'  AND CODE_ITEM IN ('20','40','50')", CMB_DATA1+2);
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								}
								else
								{	
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								}
								
								if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 ) 
								{
									if(Str_Cmp(stMtrChg.OLD_MTR_ID_NUM, "N") == 0)
									{
										ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
										ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
										DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
										DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
									}
									// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);
								}
							}
							else //미설치인경우
							{
								// 원격 : 미설치, 활성화
								EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								Str_Cpy(szRemoteCd, "40");

								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
							}

							
						// }
						// else //경기고객센터가 아닌 센터인 경우
						// {
						// 	// 원격 : 미설치, 활성화
						// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
						// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						// 	Str_Cpy(szRemoteCd, "40");
						// }
					}
					else
					{
						// 종류 : 디지털(듀얼)
						EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 2));
						DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
						DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
						Str_Cpy(szMtrKindCd, "21");

						//1213
						//특수계량기의 경우 철거계량기의 원격 종류와 같도록 설정.
						// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
						// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
						// || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
						// {
							if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 )
							{
								if( Str_Cmp(stMtrChg.MTR_KIND, "20") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "21") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "30") == 0){}
								else
								{
									MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
									EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
									ClearData();
									goto Finally;
								}
								
								Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
								Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
								SPRINT(m_szSql, "SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008' AND CODE_ITEM = '%s' ", stMtrChg.MTR_REMOTE_FLAG, 0, 0 );
								g_Sql_RetStr( m_szSql, 20, m_szTmp );
								EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1)   , m_szTmp);	

								if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0 ) //원격 구분이 디지로그인 경우에는 통합원격, 지시부 선택가능
								{
									ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA1+2));
									Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
									g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30008'  AND CODE_ITEM IN ('20','40','50')", CMB_DATA1+2);
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									
								}
								else
								{	
									DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
									DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								}

								if( Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"20") == 0  || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"30") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"40") == 0 || Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"50") == 0
								||Str_Cmp(stMtrChg.MTR_REMOTE_FLAG,"60") == 0 ) 
								{
									// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), GREEN);
									ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
									// ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_BALANCE), GREEN);

									// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
									// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
								}

							}
							else //미설치인경우
							{
								// 원격 : 통합원격, 활성화
								EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
								DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
								DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
								Str_Cpy(szRemoteCd, "40");

								ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), GREEN);
							}

							
						// }
						// else //경기고객센터가 아닌 센터인 경우
						// {
						// 	// 원격 : 통합원격, 활성화
						// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 3));
						// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
						// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
						// 	Str_Cpy(szRemoteCd, "40");
						// }
						
					}
				}
								
				break;
			// 2021.09.16  무선원격KT 추가 및 AMI 추가
			case 6:
				// 종류 : 무선원격(KT)
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 13));
				if( Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0 )
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				}
				else
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				}
				Str_Cpy(szMtrKindCd, "80"); //AMI
				
				if(Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0)
				{
					ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
				}
								
				// 원격 : 통합원격 -> AMI, 활성화
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 6));
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				Str_Cpy(szRemoteCd, "81"); //NB-IoT
				

				
				break;

			case 7:
				//1213
				// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
				// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
				// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
				// {	
					// 종류 : 각도변형
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 12));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					Str_Cpy(szMtrKindCd, "70");
					
					// 원격 : 미설치, 비활성화
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "10");

					if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") == 0 ) //노후교체일때만
					{
						if( Str_Cmp(stMtrChg.MTR_KIND, "10") == 0 || Str_Cmp(stMtrChg.MTR_KIND, "70") == 0)
						{
							ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA2+2));
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087'  AND CODE_ITEM IN ('10','30','70')", CMB_DATA2+2);

							// 종류 : 각도변형
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 12));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							Str_Cpy(szMtrKindCd, "");
						}
						else if (Str_Cmp(stMtrChg.MTR_KIND, "30") == 0 && Str_Cmp(stMtrChg.MTR_REMOTE_FLAG, "10") == 0)
						{
							ListCtrl_ResetAllItems (Get_hDlgCtrlByID(CMB_DATA2+2));
							Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
							g_Sql_SetCombo("SELECT ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'C30087'  AND CODE_ITEM IN ('10','30','70')", CMB_DATA2+2);
							
							// 종류 : 일반
							EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 12));
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							Str_Cpy(szMtrKindCd, "70");
						}
						else
						{
							MessageBoxEx (CONFIRM_OK, "특수계량기 정보가 상이하여\n 처리 할 수 없습니다.");
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
							DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
							DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA4),  "");
							EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_PAY), BTNCTRLGRAY);
							ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_REMOTE), BTNCTRLGRAY);
							ClearData();
							goto Finally;

						}
					}
					// else
					// {
					// 	// 종류 : 각도변형
					// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 12));
					// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					// 	Str_Cpy(szMtrKindCd, "70");
						
					// 	// 원격 : 미설치, 비활성화
					// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
					// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					// 	Str_Cpy(szRemoteCd, "10");
					// }
				// }
				// else
				// {
				// 	// 종류 : 각도변형
				// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 12));
				// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				// 	Str_Cpy(szMtrKindCd, "70");
					
				// 	// 원격 : 미설치, 비활성화
				// 	EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 0));
				// 	DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				// 	DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				// 	Str_Cpy(szRemoteCd, "10");
				// }
				
				break;
			case 8:
				if( z == 1 )
				{
					// 원격 : NB-IOT 
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 6));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "81");

					Str_Cpy(stMtrChg.COMM_FIRM, "20"); //통신사 KT

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA11+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA11+1), FALSE );

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
					

				}
				else if( z == 2 )
				{
					// 원격 : LORAWan
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 13));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "88");

					Str_Cpy(stMtrChg.COMM_FIRM, "20"); //통신사 KT

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

				}
				else if( z == 3 )
				{
					// 원격 : 다채널
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 11));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "86");

					Str_Cpy(stMtrChg.COMM_FIRM, "20"); //통신사 KT

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

				}
				else if( z == 4 )
				{
					// 원격 : 다채널
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 7));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "82");

					Str_Cpy(stMtrChg.COMM_FIRM, "20"); //통신사 KT

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

				}
				else
				{
					// 원격 : 통합원격 -> AMI, 활성화
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 6));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					Str_Cpy(szRemoteCd, "81");

				}
				
				// 종류 : 무선원격(SKT)월
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 13));
				if( Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0 )
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				}
				else
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				}
				// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				Str_Cpy(szMtrKindCd, "80");
				
				if(Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0)
				{
					ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
				}
				
				break;
			case 9:
				if( z == 1 )
				{
					// 원격 : NB-IOT 
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 6));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "81");

					Str_Cpy(stMtrChg.COMM_FIRM, "30"); //통신사 LGT

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA11+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA11+1), FALSE );

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );
					

				}
				else if( z == 2 )
				{
					// 원격 : LORAWan
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 13));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "88");

					Str_Cpy(stMtrChg.COMM_FIRM, "30"); //통신사 LGT

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

				}
				else if( z == 3 )
				{
					// 원격 : 다채널
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 11));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "86");

					Str_Cpy(stMtrChg.COMM_FIRM, "30"); //통신사 LGT

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

				}
				else if( z == 4 )
				{
					// 원격 : 다채널
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 7));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					Str_Cpy(szRemoteCd, "82");

					Str_Cpy(stMtrChg.COMM_FIRM, "30"); //통신사 LGT

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(EDT_DATA11), FALSE );

				}
				else
				{
					// 원격 : 통합원격 -> AMI, 활성화
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA1), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA1+2), 6));
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
					Str_Cpy(szRemoteCd, "81");
				}
				// 종류 : 무선원격(LGT)
				EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA2), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA2+2), 13));
				if( Str_Cmp(stMtrChg.NOBILL_YN, "Y") == 0 )
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				}
				else
				{
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				}
				// DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				// DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				Str_Cpy(szMtrKindCd, "80");
				
				if(Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "20") == 0)
				{
					ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), GREEN);
				}
				
				
				
				break;
			default:
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
				DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
				DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
				EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
				ClearData();
				MessageBoxEx (CONFIRM_OK, "기물번호 종류가 잘못 되었습니다.");
				goto Finally;
				break;
		}
		
		Mem_Set( (byte*)m_szMtrBarnum, 0x00, sizeof(m_szMtrBarnum) );
		Mem_Cpy((byte *)m_szMtrBarnum, (byte *)m_szBartmp+2, 3);
		lFlag = 0;

		hdb = sql->Open(sql);
		if( hdb == NULL )
		{
			ClearData();
			goto Finally2;
		}

		hstmt = sql->CreateStatement(sql,
"SELECT MTR_MODEL_CD, MTR_GRD, MTR_DIGIT_CNT, MTR_TYPE, MTR_MODEL_NM FROM MTR_MODEL \
WHERE MAKER_NUM = ? AND BARCODE_NUM = ? AND MTR_GRD = ? AND MTR_TYPE = ?"
		);

		if( hstmt == NULL )
		{
			PRINT("::SQL_CreateStatement fail [%s]", sql->GetLastError(sql), 0, 0);
			ClearData();
			goto Finally2;
		}

		i = 0;
		sql->Bind(sql, i++, 'U', (long*)m_szMakernum ,        5, DECRYPT);
		sql->Bind(sql, i++, 'U', (long*)m_szMtrBarnum ,   10, DECRYPT);
		sql->Bind(sql, i++, 'U', (long*)szGrdNum ,         8, DECRYPT);
		sql->Bind(sql, i++, 'U', (long*)szTypeCd ,         2, DECRYPT);

		if(sql->Execute(sql) == FALSE)
		{
			PRINT("::SQL_Execute fail [%s]", sql->GetLastError(sql), 0, 0);
			ClearData();
			goto Finally2;
		}

		if(sql->Next(sql) == TRUE )
		{	
			Mem_Set( (byte*)szModelCd, 0x00, sizeof(szModelCd) );
			Mem_Set( (byte*)szGrdNum, 0x00, sizeof(szGrdNum) );
			Mem_Set( (byte*)szMtrCnt, 0x00, sizeof(szMtrCnt) );
			Mem_Set( (byte*)szTypeCd, 0x00, sizeof(szTypeCd) );
			Mem_Set( (byte*)szModelNm, 0x00, sizeof(szModelNm) );
		
			idx = 0;
			sql->GetValue( sql, idx++, 'U', (long*) szModelCd			, 5  + 1, DECRYPT );
			sql->GetValue( sql, idx++, 'U', (long*) szGrdNum			, 8  + 1, DECRYPT );
			sql->GetValue( sql, idx++, 'U', (long*) szMtrCnt			, 3  + 1, DECRYPT );
			sql->GetValue( sql, idx++, 'U', (long*) szTypeCd			, 2  + 1, DECRYPT );
			sql->GetValue( sql, idx++, 'U', (long*) szModelNm			, 50 + 1, DECRYPT );
		}
		else
		{
			ClearData();
			PRINT("::sql->Next fail [%s]",sql->GetLastError(sql),0,0);
			goto Finally2;
		}
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   szGrdNum);
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  szModelNm);
		EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  szMtrCnt);
					
		Str_Cpy(stMtrChg.MTR_BAR, m_szBartmp);
		Str_Cpy(stMtrChg.AFTER_MTR_ID_NUM, m_szBartmp);
		Str_Cpy(stMtrChg.AFTER_MTR_GRD, szGrdNum);
		Str_Cpy(stMtrChg.AFTER_MTR_MODEL_CD, szModelCd);
		Str_Cpy(stMtrChg.AFTER_MTR_DIGIT_CNT, szMtrCnt);
		Str_Cpy(stMtrChg.AFTER_MTR_TYPE, szTypeCd);

		EditCtrl_SetStr( Get_hDlgCtrlByID(EDT_DATA1)   , stMtrChg.AFTER_MTR_ID_NUM);

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		Mem_Set( (byte*)m_szTmp, 0x00, sizeof(m_szTmp) );
		SPRINT(m_szSql, "SELECT  ITEM_KNAME FROM COMMONCODE WHERE CODE_ID = 'B30003' AND CODE_ITEM = '%s'",stMtrChg.AFTER_MTR_TYPE, 0, 0   );
		g_Sql_RetStr( m_szSql, 20, m_szTmp );
		EditCtrl_SetStr( Get_hDlgCtrlByID(TXT_DATA21)   , m_szTmp);
		
		lFlag = 1;
		
		
Finally2:
		DelSqLite(sql);
		
		if( lFlag == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "모델 선택에 실패하였습니다.");
			
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA1+1), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA2+1), FALSE );
			DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA9),   "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA12),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA18),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(TXT_DATA21),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA1),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA2),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA1),  "");
			ClearData();
		}

Finally:
		Barcode_Exit();
		
		ON_DRAW();

		return;
	}
	
//----------------------------------------------------------------------------------------------
	void ImpossibleDraw(void)
	{
		char szfilenm[100];
		char szFullpath[256];
		
		Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
		Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
		Str_Cpy(szfilenm, "MNM");				
		Str_Cat(szfilenm, "_");
		Str_Cat(szfilenm, stMtrChg.MTR_NUM);
		Str_Cat(szfilenm, ".jjp");
		
		SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);
		if( FFS_Exist(szFullpath) > 0 )
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_IMPPHOTO), RED);
		}
		else
		{
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_IMPPHOTO), BTNCTRLBKCOLOR);
		}
	}


//----------------------------------------------------------------------------------------------
	void Save_Cancle(long BtnId)
	{
		char szFullpath[256];
		char szfilenm[100];
		long nRet;
		
		if( BtnId == BID_IMPOK )
		{
			//철거전 계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
			Str_Cpy(szfilenm, "MBM");				
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, ".jjp");
			SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);
	
			if(FFS_Exist(szFullpath) > 0)
			{
				FFS_Delete( szFullpath );
			}
			
			Sleep(50);
	
			//설치전 계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
			Str_Cpy(szfilenm, "MAM");				
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, ".jjp");
			SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);
	
			if(FFS_Exist(szFullpath) > 0)
			{
				FFS_Delete( szFullpath );
			}
		}
		else
		{
			Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			SPRINT(m_szSql, "UPDATE C6301_CHANGEDATA SET \
MTR_FEE_FREE_FLAG = '' , MTR_REPL_WHY = '' , MTR_BAR = '' , AFTER_MTR_ID_NUM = '' \
, AFTER_MTR_MODEL_CD = '' , AFTER_MTR_GRD = '' , AFTER_MTR_FORM = '' , AFTER_MTR_TYPE = '' \
, AFTER_MTR_REMOTE_FLAG = '' , AFTER_MTR_KIND = '' , AFTER_MTR_DIGIT_CNT = '' \
, AFTER_MTR_NEW_FIX_FLAG = '' , AFTER_FIX_FIRM_NM_CD = '' , AFTER_MTR_VALID_YM = '' \
, AFTER_FORM_APPRO_YN = '' , COMPENS_FEE_FREE_FLAG = '' , COMPENS_REPL_WHY = '' \
, COMPENS_BAR = '' , AFTER_COMPENS_NUM = '' , AFTER_COMPENS_ID_NUM = '' , AFTER_COMPENS_MODEL_CD = '' \
, AFTER_COMPENS_VALID_YM = '' , AFTER_COMPENS_PRESS = '' , REMOVE_INDI_VM = '' , REMOVE_INDI_VA = '' \
, REMOVE_INDI_VC = '' , REPL_NOT_PERMIT_WHY = '' , JOB_DTM = '' , JOBER_EMPID = '' \
, CUST_SIGN = '' , SEND_YN = '' , TEMPER = '' , PRESS = '' , TREAT_FLAG = '' , REVIS_PARA = '' \
, INST_INDI_VM = '' , INST_INDI_VA = '' , INST_INDI_VC = '', CRT_EMPID = '', PDA_NUM = '', UPD_EMPID = '', VISIT_YMD = '', SEND_YN = 'N', COMM_NUM_24 ='' , COMM_FIRM = '' , INFLOW_FLAG ='' \
, REPL_TREAT_INSTI = '', NO_BILL_REPL_WHY = '',BATTERY_YN = '' , MTRDISPLAY_YN = '' , OTHER_PRICE = '' , REMOTE_SYSTEM = '' , OLD_MTR_ID_NUM = '' \
WHERE MTR_NUM = '%s' " , stMtrChg.MTR_NUM, 0, 0);
			g_Sql_DirectExecute(m_szSql);
	
			//철거전 계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
			Str_Cpy(szfilenm, "MBM");				
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.NOBILL_YN);
			Str_Cat(szfilenm, ".jjp");
			SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);
	
			if(FFS_Exist(szFullpath) > 0)
			{
				FFS_Delete( szFullpath );
			}
			
			Sleep(50);
	
			//설치전 계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
			Str_Cpy(szfilenm, "MAM");				
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.NOBILL_YN);
			Str_Cat(szfilenm, ".jjp");
			SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);
	
			if(FFS_Exist(szFullpath) > 0)
			{
				FFS_Delete( szFullpath );
			}
	
			//불가입력 계량기
			Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
			Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
			Str_Cpy(szfilenm, "MNM");				
			Str_Cat(szfilenm, "_");
			Str_Cat(szfilenm, stMtrChg.MTR_NUM);
			Str_Cat(szfilenm, ".jjp");
			SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);
	
			if(FFS_Exist(szFullpath) > 0)
			{
				FFS_Delete( szFullpath );
			}
			
			ButCtrl_SetBkColorEx(Get_hDlgCtrlByID(BID_AMI), BTNCTRLGRAY);
		}
	}
	
	
//----------------------------------------------------------------------------------------------
	void Imp_Cancle(void)
	{
		char szFullpath[256];
		char szfilenm[100];
		long nRet;

		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		SPRINT(m_szSql, "UPDATE C6301_CHANGEDATA SET SEND_YN = 'N', REPL_NOT_PERMIT_WHY = '', REPL_STS = '%s' WHERE MTR_NUM = '%s' ", stMtrChg.BACK_REPL_STS, stMtrChg.MTR_NUM, 0);
		g_Sql_DirectExecute(m_szSql);

		//불가입력 계량기
		Mem_Set((byte*)szfilenm, 0x00, sizeof(szfilenm));
		Mem_Set((byte*)szFullpath, 0x00, sizeof(szFullpath));
		Str_Cpy(szfilenm, "MNM");				
		Str_Cat(szfilenm, "_");
		Str_Cat(szfilenm, stMtrChg.MTR_NUM);
		Str_Cat(szfilenm, ".jjp");
		SPRINT (szFullpath, "%s/%s", PHOTO_GC,  szfilenm, 0);

		if(FFS_Exist(szFullpath) > 0)
		{
			FFS_Delete( szFullpath );
		}
	}
	
	
//----------------------------------------------------------------------------------------------
//바코드 잘못된 대상 찍었을 경우, 로컬 데이터 클리어
	void ClearData(void)
	{
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_GRD, 0x00, sizeof(stMtrChg.AFTER_MTR_GRD) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_TYPE, 0x00, sizeof(stMtrChg.AFTER_MTR_TYPE) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_MODEL_CD, 0x00, sizeof(stMtrChg.AFTER_MTR_MODEL_CD) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_DIGIT_CNT, 0x00, sizeof(stMtrChg.AFTER_MTR_DIGIT_CNT) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_ID_NUM, 0x00, sizeof(stMtrChg.AFTER_MTR_ID_NUM) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_REMOTE_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_REMOTE_FLAG) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_KIND, 0x00, sizeof(stMtrChg.AFTER_MTR_KIND) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );
		Mem_Set( (byte*)stMtrChg.AFTER_FIX_FIRM_NM_CD, 0x00, sizeof(stMtrChg.AFTER_FIX_FIRM_NM_CD) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_VALID_YM, 0x00, sizeof(stMtrChg.AFTER_MTR_VALID_YM) );
		Mem_Set( (byte*)stMtrChg.REMOVE_INDI_VC, 0x00, sizeof(stMtrChg.REMOVE_INDI_VC) );
		Mem_Set( (byte*)stMtrChg.INST_INDI_VC, 0x00, sizeof(stMtrChg.INST_INDI_VC) );
		Mem_Set( (byte*)stMtrChg.MTR_REPL_WHY, 0x00, sizeof(stMtrChg.MTR_REPL_WHY) );
		Mem_Set( (byte*)stMtrChg.MTR_FEE_FREE_FLAG, 0x00, sizeof(stMtrChg.MTR_FEE_FREE_FLAG) );
		Mem_Set( (byte*)stMtrChg.AFTER_MTR_GRD, 0x00, sizeof(stMtrChg.AFTER_MTR_GRD) );
	}

//----------------------------------------------------------------------------------------------
	void VcDraw(void)
	{
		//Vc
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA4), stMtrChg.REMOVE_INDI_VC);
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA5), stMtrChg.INST_INDI_VC);
		
		//Va
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA6), stMtrChg.REMOVE_INDI_VA);
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA7), stMtrChg.INST_INDI_VA);
		
		//Vm
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA8), stMtrChg.REMOVE_INDI_VM);
		EditCtrl_SetStr(Get_hDlgCtrlByID(EDT_DATA9), stMtrChg.INST_INDI_VM);
		
		ON_DRAW();
	}	
	
//----------------------------------------------------------------------------------------------
	bool Vc_Validate(void)
	{
		bool bRet = FALSE;
		
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Vc 설치지침을 입력하세요.");
			return bRet;
		}
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Va 설치지침을 입력하세요.");
			return bRet;
		}
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA9))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Vm 설치지침을 입력하세요.");
			return bRet;
		}

		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA4))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Vc 철거지침을 입력하세요.");
			return bRet;
		}
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Va 철거지침을 입력하세요.");
			return bRet;
		}
		if( Str_Len(EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA8))) == 0 )
		{
			MessageBoxEx (CONFIRM_OK, "Vm 철거지침을 입력하세요.");
			return bRet;
		}

		//Vc
		Str_Cpy(stMtrChg.REMOVE_INDI_VC, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA4)));
		Str_Cpy(stMtrChg.INST_INDI_VC, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA5)));
		//Va
		Str_Cpy(stMtrChg.REMOVE_INDI_VA, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA6)));
		Str_Cpy(stMtrChg.INST_INDI_VA, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA7)));
		//Vm
		Str_Cpy(stMtrChg.REMOVE_INDI_VM, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA8)));
		Str_Cpy(stMtrChg.INST_INDI_VM, EditCtrl_GetStr(Get_hDlgCtrlByID(EDT_DATA9)));

		bRet = TRUE;
		return bRet;
	}

//----------------------------------------------------------------------------------------------
	void Photo_View(void)
	{	
		char szTmp[256];
		char szViewnm[256];
		char szViewPath[256];
	
		Mem_Set((byte*)m_szfilenm, 0x00, sizeof(m_szfilenm));
		Str_Cpy(m_szfilenm, "MNM");				
		Str_Cat(m_szfilenm, "_");
		Str_Cat(m_szfilenm, stMtrChg.MTR_NUM);
		
		Str_Cpy(szViewnm, m_szfilenm);
		
		//사진 보기 용 JPG 파일명
		Str_Cat(szViewnm, ".jpg");
		//사진 저장 용 JJP 파일명
		Str_Cat(m_szfilenm, ".jjp");

		//사진 저장 용 JJP 파일명
		Mem_Set((byte*)m_szTmp, 0x00, sizeof(m_szTmp));
		SPRINT (m_szTmp, "%s/%s",PHOTO_GC, m_szfilenm, 0);
		//사진 보기 용 JPG 파일명
		Mem_Set((byte*)szViewPath, 0x00, sizeof(szViewPath));
		SPRINT (szViewPath, "%s/%s",PHOTO_GC, szViewnm, 0);
		
		//원본(.jjp)을 .jpg 형식으로 복사.
		FFS_Copy( m_szTmp, szViewPath );

		//PDA
		if(Str_Cmp(g_szDEVICE_NAME, "DS3") == 0 || Str_Cmp(g_szDEVICE_NAME, "M3T") == 0 || Str_Cmp(g_szDEVICE_NAME, "M3T") == 0 )
		{
			if( FFS_Exist("\\windows\\iexplore.exe" ) )
			{
				RunApp( "iexplore.exe", m_szTmp);
			}
			else if( FFS_Exist("\\windows\\iesample.exe" ) )
			{
				RunApp( "iesample.exe", m_szTmp);
			}
			else
			{
				MessageBoxEx (CONFIRM_OK, "사진조회 프로그램이 없습니다.");
			}
		}
		else
		{	
			if(FFS_Exist(szViewPath) > 0)
			{
				//WEBVIEWER 호출 시 전체 경로를 다 써줘야함.
				//Mem_Set((byte*)szTmp, 0x00, sizeof(szTmp));
				//Str_Cpy(szTmp, "/mnt/sdcard/Smart/");
				//Str_Cat(szTmp, szViewPath);
				RunApp( "WEBVIEWER", szViewPath );
			}
			else
			{
				MessageBoxEx (CONFIRM_OK, "사진이 없습니다.");
			}
		}
		return;
	}
	
	void setBarCodeRsltView(long flag)
	{
		//1213
		// if(Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"41") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"42") == 0 
		// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"43") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"44") == 0 
		// 	|| Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"45") == 0 || Str_Cmp(stMtrChg.CHK_BULD_CENTER_CD,"46") == 0 )
		// {
			// if( Str_Cmp(stMtrChg.REPL_OCCU_FLAG, "10") != 0 )
			// {
				// 신품에서 예를 고른 경우
				if( flag == 0 )
				{
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
					//상태 value
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
					//상태 code
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
					
					Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10");
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));
				}
				// 신품에서 아니오를 고른 경우
				else if( flag == 1 )
				{
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
					//상태 value
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
					//상태 code
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
					
					Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "20");
				}
				//수리품
				else if( flag == 2 )
				{	
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );
					
					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
					//상태 value
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM <> '10' AND A.CODE_ITEM <> '20' UNION ALL SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
					//상태 code
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004'  AND A.CODE_ITEM <> '10'  AND A.CODE_ITEM <> '20' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);					  
					
					Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "20");
				}
				else if( flag == 3 )
				{
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
					//상태 value
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
					//상태 code
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
					
					Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10");
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));

				}
				else if( flag == 4 )
				{
					
					EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
					Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

					DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
					DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
					ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
					//상태 value
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10'", CMB_DATA3+2);
					//상태 code
					Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
					g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' ", CMB_DATA8+2);
					
					Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10");
					EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));

				}
			// }
			// else //노후교체일때
			// {
			// 	// 신품에서 예를 고른 경우
			// 	if( flag == 0 )
			// 	{
			// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
			// 		//상태 value
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
			// 		//상태 code
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
					
			// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10");
			// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));
			// 	}
			// 	// 신품에서 아니오를 고른 경우
			// 	else if( flag == 1 )
			// 	{
			// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
			// 		//상태 value
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
			// 		//상태 code
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
					
			// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "20");
			// 	}
			// 	//수리품
			// 	else if( flag == 2 )
			// 	{	
					
			// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );
					
			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
			// 		//상태 value
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM <> '10' AND A.CODE_ITEM <> '20' UNION ALL SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
			// 		//상태 code
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004'  AND A.CODE_ITEM <> '10'  AND A.CODE_ITEM <> '20' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);					  
					
			// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "20");
			// 	}
			// 	else if( flag == 3 )
			// 	{
			// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
			// 		//상태 value
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
			// 		//상태 code
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
					
			// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10");
			// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));

			// 	}
			// 	else if( flag == 4 )
			// 	{
					
			// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
			// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

			// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
			// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
					
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
			// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
					
			// 		//상태 value
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10'", CMB_DATA3+2);
			// 		//상태 code
			// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
			// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' ", CMB_DATA8+2);
					
			// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10");
			// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));

			// 	}
			// }
		// }
		// else
		// {
		// 	// 신품에서 예를 고른 경우
		// 	if( flag == 0 )
		// 	{
		// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
		// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

		// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
		// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
				
		// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
		// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
				
		// 		//상태 value
		// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
		// 		//상태 code
		// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
				
		// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10");
		// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));
		// 	}
		// 	// 신품에서 아니오를 고른 경우
		// 	else if( flag == 1 )
		// 	{
		// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
		// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

		// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
		// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
				
		// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
		// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
				
		// 		//상태 value
		// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
		// 		//상태 code
		// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
				
		// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "20");
		// 	}
		// 	//수리품
		// 	else if( flag == 2 )
		// 	{	
		// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
		// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );
				
		// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
		// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
				
		// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
		// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
				
		// 		//상태 value
		// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM <> '10' AND A.CODE_ITEM <> '20' UNION ALL SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
		// 		//상태 code
		// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004'  AND A.CODE_ITEM <> '10'  AND A.CODE_ITEM <> '20' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A , COMMONCODE B WHERE A.CODE_ID = 'C30004'  AND B.CODE_ID = 'C30005'  AND A.CODE_ITEM <> '10'  AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);					  
				
		// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "20");
		// 	}
		// 	else if( flag == 3 )
		// 	{
		// 		EditCtrl_SetStr(Get_hDlgCtrlByID(CMB_DATA3),  "");
		// 		Mem_Set( (byte*)stMtrChg.AFTER_MTR_NEW_FIX_FLAG, 0x00, sizeof(stMtrChg.AFTER_MTR_NEW_FIX_FLAG) );

		// 		DlgCtrl_SetEnable(this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), TRUE );
		// 		DlgCtrl_SetGray( this->m_hDlg, Get_iDlgCtrlByID(CMB_DATA3+1), FALSE );	
				
		// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA3+2));
		// 		ListCtrl_ResetAllItems(Get_hDlgCtrlByID(CMB_DATA8+2));
				
		// 		//상태 value
		// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// 		g_Sql_SetCombo("SELECT 'N:'||A.ITEM_KNAME AS ITEM_KNAME	FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL	SELECT B.ITEM_KNAME||':'||A.ITEM_KNAME AS ITEM_KNAME FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA3+2);
		// 		//상태 code
		// 		Mem_Set( (byte*)m_szSql, 0x00, sizeof(m_szSql) );
		// 		g_Sql_SetCombo("SELECT A.CODE_ITEM||'' AS CODE_ITEM FROM COMMONCODE A WHERE A.CODE_ID = 'C30004' AND A.CODE_ITEM = '10' UNION ALL SELECT A.CODE_ITEM||B.CODE_ITEM AS CODE_ITEM FROM COMMONCODE A, COMMONCODE B WHERE A.CODE_ID = 'C30004' AND B.CODE_ID = 'C30005' AND A.CODE_ITEM <> '10' AND B.CODE_ITEM NOT IN ('R1', 'R3')", CMB_DATA8+2);
				
		// 		Str_Cpy(stMtrChg.AFTER_MTR_NEW_FIX_FLAG, "10");
		// 		EditCtrl_SetStr( Get_hDlgCtrlByID(CMB_DATA3), ListCtrl_GetStr( Get_hDlgCtrlByID(CMB_DATA3+2), 0));

		// 	}
		// }
		
		
		return;
	}
}


